<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>懒程序员改变世界</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qinghua.github.io/"/>
  <updated>2017-05-20T07:56:46.000Z</updated>
  <id>http://qinghua.github.io/</id>
  
  <author>
    <name>Qinghua Gao</name>
    <email>ggggqh666@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用Lombok优雅地写代码</title>
    <link href="http://qinghua.github.io/lombok/"/>
    <id>http://qinghua.github.io/lombok/</id>
    <published>2017-05-20T02:12:01.000Z</published>
    <updated>2017-05-20T07:56:46.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projectlombok.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lombok&lt;/a&gt;是一个比较早、小众但是功能强大的Java库，源码在&lt;a href=&quot;https://github.com/rzwitserloot/lombok&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github上&lt;/a&gt;。如果你厌恶写Java代码时不得不手写或用IDE生成大量无趣的样板代码，如getter、setter等，那就准备好拥抱lombok吧。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u529F_u80FD&quot;&gt;&lt;a href=&quot;#u529F_u80FD&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;h3 id=&quot;u6570_u636E_u7C7B&quot;&gt;&lt;a href=&quot;#u6570_u636E_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;数据类&quot;&gt;&lt;/a&gt;数据类&lt;/h3&gt;&lt;p&gt;Lombok通过注解来减少样板代码的使用。对于数据类来说，自己看&lt;a href=&quot;https://projectlombok.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网的视频&lt;/a&gt;吧。三分钟太长不想看？那么也可以快速浏览一下&lt;a href=&quot;https://projectlombok.org/features/Data.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里的代码&lt;/a&gt;。神奇的事情是怎么做到的呢？奥秘就是&lt;a href=&quot;http://notatube.blogspot.com/2010/11/project-lombok-trick-explained.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在编译时插入代码&lt;/a&gt;。你甚至还可以创建自己的注解！参考&lt;a href=&quot;http://notatube.blogspot.com/2010/12/project-lombok-creating-custom.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5176_u5B83_u7279_u6027&quot;&gt;&lt;a href=&quot;#u5176_u5B83_u7279_u6027&quot; class=&quot;headerlink&quot; title=&quot;其它特性&quot;&gt;&lt;/a&gt;其它特性&lt;/h3&gt;&lt;p&gt;除了本职的数据类以外，lombok还提供了许多&lt;a href=&quot;https://projectlombok.org/features/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;其它的特性&lt;/a&gt;，以帮助我们减少样板代码的使用。官网的说明非常详细，也都附带了代码，我就不做说明书的搬运工了。这里放一个例子：&lt;a href=&quot;https://projectlombok.org/features/Synchronized.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Synchronized&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;u4E0EIntellij_IDEA_u96C6_u6210&quot;&gt;&lt;a href=&quot;#u4E0EIntellij_IDEA_u96C6_u6210&quot; class=&quot;headerlink&quot; title=&quot;与Intellij IDEA集成&quot;&gt;&lt;/a&gt;与Intellij IDEA集成&lt;/h2&gt;&lt;p&gt;动手时间。新建Maven工程，往pom.xml中增加dependency，最后的pom.xml看起来就像这样：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.ggg.lombok&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;helloLombok&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.projectlombok&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;lombok&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.16.16&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;4.12&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在src/main/java中新增一个Person类：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Person类中右击，Go To，Test（或者Ctrl/Command+T）便可以在src/test/java中新增一个对应的测试：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PersonTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;should_get_name_from_person&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;ggg&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现了一条红线，编译失败。回到Person类中，在Person类的定义上面加上&lt;code&gt;@AllArgsConstructor&lt;/code&gt;并&lt;code&gt;import lombok.AllArgsConstructor;&lt;/code&gt;，还是编译不过。现在到了应该加载IDEA插件的时候了。参考&lt;a href=&quot;https://github.com/mplushnikov/lombok-intellij-plugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;来安装lombok插件，别忘了重启Intellij IDEA。这回编译成功了。在测试的调用构造函数处Command/Ctrl+B便能跳转到Person类的&lt;code&gt;@AllArgsConstructor&lt;/code&gt;上。接着写测试：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Person ggg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;ggg&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;ggg&quot;&lt;/span&gt;, ggg.getName());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;getName又红了。切换回Person类，再加上&lt;code&gt;@Getter&lt;/code&gt;，编译通过！运行测试，绿了！&lt;br&gt;&lt;img src=&quot;/img/lombok.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还可以通过Find Usages来找到字段的get方法在哪调用，可惜不能找到构造函数在哪调用。在享用便捷的同时，也需要付出些许的代价。有兴趣的看官可以自行尝试文档中的其它注解。例如&lt;code&gt;@ToString(of=&amp;quot;name&amp;quot;)&lt;/code&gt;，&lt;code&gt;@Log&lt;/code&gt;，&lt;code&gt;@Getter(lazy=true)&lt;/code&gt;等等。值得一提的是，&lt;a href=&quot;https://projectlombok.org/features/Cleanup.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Cleanup&lt;/a&gt;可以轻松地关闭流、连接等对象，Java 7也提供了&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;try-with-resources&lt;/a&gt;来做到这一点，只不过需要缩进罢了，但是可以很明显地看出作用域。还请自行选择喜欢的那个。当然，如果你的项目还在用老旧的Java 6，那确实也没有什么选择的余地。&lt;/p&gt;
&lt;h2 id=&quot;u98CE_u9669&quot;&gt;&lt;a href=&quot;#u98CE_u9669&quot; class=&quot;headerlink&quot; title=&quot;风险&quot;&gt;&lt;/a&gt;风险&lt;/h2&gt;&lt;p&gt;首先，Lombok扮演着一个注解处理器的角色，在编译时通过修改抽象语法树（Abstract Syntax Tree，AST）来修改代码。但是这是被注解处理器规范所明令禁止的，规范仅允许生成新文件或是新类。而聪明的lombok开发者通过javac未公开的API绕开了这个限制。所以有人视lombok为邪门歪道。不过嘛，不管黑猫白猫，能捉老鼠的就是好猫；不管黑糖白糖，能少写代码的就是好糖。先了解它，再决定要不要因为代价而放弃收益。如果未来的Java版本取消了后门，那么使用lombok的项目就存在升级JDK的风险。如果介意这一点，并且只有数据类的需求，可以去看看google的&lt;a href=&quot;https://github.com/google/auto/blob/master/value/userguide/index.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AutoValue&lt;/a&gt;。不过白魔法比黑魔法总是缺了点什么…&lt;/p&gt;
&lt;p&gt;第二点是IDE的支持。虽然是支持，但是你也看到了并不能像原来虽然写了代码，但大都是自动生成的代码那样随心所欲地各种重构。另外IDE偶尔抽点风也可能会让你流半天汗。&lt;/p&gt;
&lt;p&gt;最后一点是代码覆盖率的测试。如果贵公司对它有明确而严格的要求，那就需要好好研究lombok与所用的代码覆盖率工具的兼容程度了。目前看来lombok与&lt;a href=&quot;http://cobertura.github.io/cobertura/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cobertura&lt;/a&gt;的兼容性还是最好的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://projectlombok.org/index.html&quot;&gt;Lombok&lt;/a&gt;是一个比较早、小众但是功能强大的Java库，源码在&lt;a href=&quot;https://github.com/rzwitserloot/lombok&quot;&gt;github上&lt;/a&gt;。如果你厌恶写Java代码时不得不手写或用IDE生成大量无趣的样板代码，如getter、setter等，那就准备好拥抱lombok吧。&lt;br&gt;
    
    </summary>
    
      <category term="development" scheme="http://qinghua.github.io/categories/development/"/>
    
    
      <category term="lombok" scheme="http://qinghua.github.io/tags/lombok/"/>
    
  </entry>
  
  <entry>
    <title>区块链技术浅析</title>
    <link href="http://qinghua.github.io/blockchain/"/>
    <id>http://qinghua.github.io/blockchain/</id>
    <published>2017-04-03T05:33:33.000Z</published>
    <updated>2017-04-03T15:06:19.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9D%97%E9%93%BE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;区块链&lt;/a&gt;是2016年起突然走红起来的一门技术，连国务院印发的&lt;a href=&quot;http://news.sohu.com/20161227/n477114271.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《“十三五”国家信息化规划》&lt;/a&gt;也将其纳入。上周公司举办黑客马拉松的活动，有幸浅尝了一下区块链的应用，本文旨在记录并分享区块链的一些心得。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6BD4_u7279_u5E01_uFF08Bitcoin_uFF09&quot;&gt;&lt;a href=&quot;#u6BD4_u7279_u5E01_uFF08Bitcoin_uFF09&quot; class=&quot;headerlink&quot; title=&quot;比特币（Bitcoin）&quot;&gt;&lt;/a&gt;比特币（Bitcoin）&lt;/h2&gt;&lt;p&gt;要说清楚区块链，首先需要了解&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9%E5%B8%81&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;比特币&lt;/a&gt;。2008年金融危机时，神秘的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%9C%AC%E8%81%AA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中本聪&lt;/a&gt;发表了一篇论文，详细描述了比特币。一年之后，他将其实现。再一年之后，他便把比特币交予社区维护，自己不再露面了。比特币其实就是一个文件，里面记载了所有人的账户及交易信息。这个文件只能往里增加数据而不能修改数据。比特币网络中的每一个人都拥有这个文件的备份。&lt;/p&gt;
&lt;p&gt;我也可以写一个文件来表示所有人的帐户信息，但是它一文不值。为什么比特币就有价值呢？它存在价值是因为人们相信它有价值，就像印出来的钞票一样。而人们自发的信任是需要时间的。最初比特币也没有什么价值。第一笔交易发生在2010年，一位程序员在佛罗里达花了一万个比特币购买了价值25美元的披萨。截止本文发布，一个比特币大约是7000元人民币左右，可以在&lt;a href=&quot;https://www.okcoin.cn/market-btc.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OKCoin&lt;/a&gt;上查看。随着比特币的流行，出现了不少类似的货币，如以太坊（Ethereum）、莱特币（Litecoin）等等。只要有人相信它，它就有价值。想当年刚听说比特币的时候，我心底还暗自嘲笑怎么会有人相信这种一点实体都没有的东西，事实证明我还是太naive了。&lt;/p&gt;
&lt;p&gt;作为一种货币，需要能够向别人转账。假如邻居家老王要给你转10个比特币，他需要把这笔交易写入文件并告诉比特币网络的其他节点，让大家把交易添加进这个文件。所以每个人都能够得知这笔交易信息。现在问题来了，其它的节点怎么知道这笔转账是可信的，即老王提出的呢？要是每个人都发起从老王转账到自己的请求，那老王可就亏死了。其他人当然做不到。因为这笔交易需要用老王的私钥签名。公私钥的简介可以参考我写的&lt;a href=&quot;http://qinghua.github.io/certificate/#u975E_u5BF9_u79F0_u52A0_u5BC6&quot;&gt;《证书的那些事儿》的非对称加密一节&lt;/a&gt;。其他人拿不到老王的私钥，当然就无从伪造请求了。在比特币中，公钥也用于表示对方的地址。消费时，你需要用数字签名证明你拥有对应的私钥。比特币没有中心节点，所以如果老王转错账了，抱歉，要不回来了。你只知道对方的公钥（或者说是比特币的帐号或地址），并不知道对方的身份。&lt;/p&gt;
&lt;p&gt;为了安全，比特币上并不会记载每个账户的余额是多少。每当要转账时，它需要提供至少一笔未消费的历史交易信息作为input，转完账后，剩余的部分称为零钱，可以转入你自己的公钥，或是你小号的公钥。至此，未消费的交易就变成了已消费，不能被再次使用了。所以多次重复的请求只有第一笔才能成功。比特币的转账并非立即生效，只有在解开一道数学题之后才行。解题的过程就叫挖矿。题目的难度由程序控制，程序会根据历史记录把解题时间控制在大约十分钟左右。&lt;/p&gt;
&lt;p&gt;还有一个问题，由于网络传输的不确定性，你并不能保证老王的转账被及时同步到了所有的节点上。所以如果在这笔交易完全传播出去之前，老王又在这笔交易之前将本来作为input的历史交易转帐给他的小号呢？其它的节点根本判断不了哪个在前，哪个在后。所以顺序在这里至关重要。比特币是这么解决这个问题的：把交易分配到区块里（多对一），然后将区块链接起来，称为区块链。每个区块都会引用上一个区块，这样便实现了有序。同一区块内的交易被认为是同时发生的。由于同一时间可能会产生多笔交易，所以可能会产生多个区块。那如何知道应该以哪一个区块为准呢？事实上，每一个区块都包含了一道特殊的数学题，只有解开这道题才能使之有效。当一个节点解开了这道题，它便会向比特币网络广播自己的结果，并把交易排在区块链的下一位。如果偶尔有多人同时解出了结果，那么区块链便会产生不同的分支。两个分支开始竞争，看谁能够更快生成下一个区块。哪个分支更长，哪个分支就有效。这样的话，由于多人同时算出答案的概率很低，所以分支会在一定时间之后消失。如果你的交易在一个消失的分支的区块里，便会重新放到未确认的交易区里，等待加入下一个区块。那如果有人能快速计算多个区块，岂不是可以随心所欲了？话虽如此，但是要以个人之力来对抗全网，实在是非常困难的事情。除非控制了整个比特币网络上50%以上的运算力，才开始有可能做到。这样的成本是非常高的，对于一般的交易来说，实在是有些不值得。你也无法提前运算，因为下一个区块需要引用当前的区块和随机数，只有在当前区块完成之后，才能开始计算。所以说参与的机器越多，比特币或者说区块链就越安全。还有一点值得注意的是，越前面的区块就越安全，因为攻击所需的资源会越大。小规模的转账，等一个区块便可以了；大规模的话，最好多等几个，以降低分支消失的概率。&lt;/p&gt;
&lt;p&gt;有意思的是，由于比特币网络上的机器是那么的多，导致个人很难能够挖到矿。所以采矿池（mining pool）应运而生，集多人的算力，挖到矿后根据贡献来分配。但是采矿池太大了也会带来安全问题，因为有可能超过了50%的运算力。有一家BTC Guild曾经能够独立解出一个链中的6个区块，所以这个采矿组织主动限制了规模和会员的数量，以减少比特币网络成员的不安。&lt;/p&gt;
&lt;h2 id=&quot;u533A_u5757_u94FE_uFF08blockchain_uFF09&quot;&gt;&lt;a href=&quot;#u533A_u5757_u94FE_uFF08blockchain_uFF09&quot; class=&quot;headerlink&quot; title=&quot;区块链（blockchain）&quot;&gt;&lt;/a&gt;区块链（blockchain）&lt;/h2&gt;&lt;p&gt;上一节已经介绍了比特币的区块链了。其实区块链就是一个去中心化的存储。在这一点上，它与git是比较相似的。它们都是分布式、无中心的链式存储，但是在出现分支时的解决方式不一样。Git可以通过merge和rebase来解决冲突，而区块链则是通过链的长度来自动废弃分支，作废分支里的交易重新放到未确认的交易区里，以便下次再放入新区块里，这样的行为有些类似&lt;code&gt;git rebase&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;由于区块链不停地往里增加区块，势必导致文件越来越大。虽然可以控制区块的大小（最大1M）和增长速度（10分钟左右），但这么计算每年也有&lt;code&gt;365×24×6×1M=52G&lt;/code&gt;左右的数据。长此以往，如何受得了？作为消费者来说，已经校验并消费过了的历史数据，可以仅保存其散列码，这样便能大大减少数据。比特币钱包用的是&lt;a href=&quot;https://en.wikipedia.org/wiki/Merkle_tree&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Merkle Tree&lt;/a&gt;来做验证。&lt;/p&gt;
&lt;p&gt;区块链按照参与者的身份，可以分为公有链（Public blockchain）、联盟链（Consortium blockchain）和私有链（Private blockchain），公有链如比特币，是通过挖矿来达成共识（consensus），但是挖矿的计算需要消耗大量的电力资源。联盟链顾名思义，仅由联盟内部可写，外部经过授权可读。而私有链只有一个成员可写，类似传统的分布式数据库。联盟链和私有链由于成员并非匿名，可受部分信任，并且消耗运算力其实也是一种浪费，所以可以相对放松一些要求，不必非得挖矿，可以通过共识协议来达成共识。&lt;/p&gt;
&lt;p&gt;使用区块链必须能够达成共识，否则就失去意义了。其实传统的分布式一致性算法也能解决达成共识的问题，只不过一般并不考虑恶意节点篡改数据的问题罢了，而且实际上使用的节点也不像区块链那么多。传统的常见算法有：ZooKeeper使用的Zab协议；etcd使用的Raft协议；当然还有大名鼎鼎的Paxos协议。限于篇幅，本文就不具体讨论它们的具体算法了。&lt;/p&gt;
&lt;p&gt;区块链最主要的贡献，是解决了在不信任网络中的信任问题。与传统的解决方案相反，参与区块链的人越多则越安全。但是如果你的组织已经有足够的信誉，是否真的需要使用区块链来实现？当你想使用区块链技术来解决特定问题的时候，应该先问问自己，如果不用区块链，会有什么问题？如果回答不了这个问题，那可能你对区块链还不够了解，或者是区块链并不是你问题的最佳解决方案。相对于技术本身来说，更麻烦的问题是靠谱的想法和实施。别手里拿着个锤子看什么都是钉子哦。再考虑一下传统的方案吧。&lt;/p&gt;
&lt;p&gt;除了金融领域以外，还有许多应用区块链的有趣想法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://business.sohu.com/20160414/n444147338.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;当Airbnb遇到区块链：你弄碎房东花瓶的事全世界都会知道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.weiyangx.com/165124.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;纳斯达克在爱沙尼亚推出区块链投票系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://36kr.com/p/5068610.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;沃尔玛推零售“黑科技”:区块链跟踪食品溯源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://news.163.com/16/0711/05/BRLVNTKN00014AED.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;蚂蚁金服将使用区块链技术 追踪每一笔公益善款去向&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u53C2_u8003_u8D44_u6599&quot;&gt;&lt;a href=&quot;#u53C2_u8003_u8D44_u6599&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://v.youku.com/v_show/id_XNjQ0NzE0Mjky.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《详解比特币的原理和运行机制》&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blockchaindev.org/article/introduce_blockchain.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《区块链(Blockchain)深入介绍》&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blockchaindev.org/article/consensus_introduction.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《浅谈区块链共识机制与分布式一致性算法》&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9D%97%E9%93%BE&quot;&gt;区块链&lt;/a&gt;是2016年起突然走红起来的一门技术，连国务院印发的&lt;a href=&quot;http://news.sohu.com/20161227/n477114271.shtml&quot;&gt;《“十三五”国家信息化规划》&lt;/a&gt;也将其纳入。上周公司举办黑客马拉松的活动，有幸浅尝了一下区块链的应用，本文旨在记录并分享区块链的一些心得。&lt;br&gt;
    
    </summary>
    
      <category term="architecture" scheme="http://qinghua.github.io/categories/architecture/"/>
    
    
      <category term="blockchain" scheme="http://qinghua.github.io/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>DevOpsDays北京站见闻</title>
    <link href="http://qinghua.github.io/devopsdays-beijing-2017/"/>
    <id>http://qinghua.github.io/devopsdays-beijing-2017/</id>
    <published>2017-03-19T12:00:00.000Z</published>
    <updated>2017-03-19T13:57:56.000Z</updated>
    
    <content type="html">&lt;p&gt;首度来到中国的DevOpsDays北京站昨天顺利举行了。有幸得到赠票，在大会上见到了DevOps之父Patrick Debois还有诸多业内专家。当天的盛况及ppt下载请移步&lt;a href=&quot;http://mp.weixin.qq.com/s/A6QDB4Z-O5cm4KCnDOmKAw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;传统的DevOps主要涵盖了CAMS（Culture文化、Automation自动化、Measure度量、Sharing分享）四大方面。而要落地DevOps，需要两条腿：一条是组织方面的转型，另一条是技术方面的自动化工具。组织转型是要涉及到利益的，不容易下手。所以大部分的分享还是以技术方面为主。只有Patrick的好基友&lt;a href=&quot;http://www.krisbuytaert.be/blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kris Buytaert&lt;/a&gt;的ppt讲的是reorg。乔梁讲的是他在百度和腾讯的经历，但可能是受时间所限并没有太多的实际内容。如果没有自上而下的变革，很难推动起组织转型。对于许多人来说，也许能够做到的，也就是自动化工具罢了。下午的Open Space深度交流专场里，不乏对组织转型方面的问题，但是嘉宾们其实也没有什么非常好的办法。有些技巧（比如说拿数据说话）可以让你把DevOps推销给老板，但终究一场战斗的胜利很难能够左右战略上的部署。没有自上而下的决心和后盾，在触及利益的时候肯定是各种痛啊。两条慢腿可能凑活着还能走走，一条腿快一条腿慢必然会驱使着变革的前进或倒退。DevOps讲究痛点驱动，相信以后的DevOpsDays会有更多组织转型方面的分享。&lt;/p&gt;
&lt;p&gt;在技术上，专家们一直强调，没有DevOps团队，别叫他们DevOps工程师。DevOps需要融入到跨功能团队中的每一个人，不是某一类人，不是某一个团队。这里我感觉有一个词很重要：&lt;strong&gt;同理心&lt;/strong&gt;。有了同理心，你会理解其它角色的痛点，反之亦然。由此，便可以催生出&lt;strong&gt;分享&lt;/strong&gt;。有了分享，理解痛点，便能从“像部署一样痛苦的事要多做”出发，提取出最佳实践，催生&lt;strong&gt;自动化&lt;/strong&gt;。要衡量效果如何？数据说话。于是催生&lt;strong&gt;度量&lt;/strong&gt;。这几方面相辅相成，在整体的良性循环之下，团队&lt;strong&gt;文化&lt;/strong&gt;的成型便是顺理成章。怎样让大家拥有同理心？除了依靠人的素质进步，百度的刘俊还提到了一个做法，据说甚是有效，那就是开发运维轮岗。想想也对，把你推到别人的位置上，自然就有同理心了。&lt;/p&gt;
&lt;p&gt;我在《DevOps实践》的译者序上也说过，DevOps是要很高成本的。在应用它之前，先问自己这样的问题：为什么要上DevOps？它能解决我的什么问题？不要说我想提高工作效率，提高程序质量，要从更高层次的业务上说。换句话说，从战略层面上想清楚应用DevOps的目的，然后在战术层面上依照战略来有根据有优先级地安排资源打硬仗。跟性能调优一样，搞清楚哪里才是瓶颈，针对性地动手解决。而不是直接拍胸脯就上DevOps，把最宝贵的资源浪费在可能对这个组织最没用的地方上。&lt;/p&gt;
&lt;p&gt;对于中小企业来说，不要开发自己的自动化工具，不要重复发明轮子，直接拿现成的开源工具来用吧。不是BAT这样的量级，玩不起自研版的工具，它们其实是很重量级的。针对开源工具有些功能不符合自己的需求这方面，ThoughtWorks的黄博文说道：可以从另一个角度来看待这个问题，为什么你要的功能没有？这是一个正常的功能吗？究竟是功能的缺失，还是说只是你走错了路？此言深得我心。据说业界运维做得最好的应该就是谷歌和Netfilx。它们都有不少开源的运维工具，值得业内人士仔细研究。&lt;/p&gt;
&lt;p&gt;最后放一张乔梁对DevOps和持续交付的看法，四个角色分别是产品、开发、测试和运维。先剧透一下并不是所有人都同意这个观点，少年，你怎么看？&lt;br&gt;&lt;img src=&quot;/img/agile-devops-and-cicd.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首度来到中国的DevOpsDays北京站昨天顺利举行了。有幸得到赠票，在大会上见到了DevOps之父Patrick Debois还有诸多业内专家。当天的盛况及ppt下载请移步&lt;a href=&quot;http://mp.weixin.qq.com/s/A6QDB4Z-O5cm4KCnDOmKAw&quot;&gt;此处&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="activity" scheme="http://qinghua.github.io/tags/activity/"/>
    
  </entry>
  
  <entry>
    <title>如何测试随机数</title>
    <link href="http://qinghua.github.io/test-random/"/>
    <id>http://qinghua.github.io/test-random/</id>
    <published>2017-03-05T06:32:19.000Z</published>
    <updated>2017-03-05T07:18:41.000Z</updated>
    
    <content type="html">&lt;p&gt;怎样知道它是不是&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%95%B0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;随机数&lt;/a&gt;？如何测试一个&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90%E5%99%A8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;随机数生成器&lt;/a&gt;？&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有些程序很容易测试，但并非所有程序都是如此。自动化测试的目的是以现在的时间成本，来换取未来的时间成本。很多程序员们经常自己写一个小玩意，就不爱写测试了，这是因为他们觉得这个小玩意也就用那么几次，不值得为它单写一个测试。从这个角度上看，这是没错的。大型项目经常会有比较完备的测试，因为这个项目可能会交付很长时间，也可能会有很长的维护时间。这时候测试的成本就可以在未来得到回报。测试随机数生成器，首先要回答的问题是：值不值得做这个测试？如果说这个随机数生成器本来就是系统提供的接口，那是否我们有必要费精力去测试它呢？如果它是不可靠的，那可能暗示着你的技术选型出了问题。如果它可靠（&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%80%A7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;伪随机数&lt;/a&gt;也算是可靠），那是否可以使用系统的随机数生成器来生成你自己特定的随机数生成器呢？在这种情况下，自己写的随机数生成器还是可能需要测试的。那应该怎么测试它呢？&lt;/p&gt;
&lt;p&gt;让我们来举个简单的例子。比如我们需要得到由两位数字组成的随机字符串（”00”~”99”），它要做的仅仅是调用系统接口生成0~99的数字并格式化为”00”~”99”的字符串。这时我们只需测试它调用系统接口的参数，以及格式化的逻辑即可。而它们都可以通过mock等技术手段很容易地测试。在系统提供的随机数生成器的支持下，应该是可以满足大部分的随机需求的。&lt;/p&gt;
&lt;p&gt;如果你非要以打硬仗的方式来测试随机数的话，除去成本因素，要想从纯技术上回答这个问题，那就要先回答另一个问题：什么是随机数？这就回到了业务的本质：在不考虑测试时，在什么情况下你会认为它是一个随机数？简单起见，我们就以0~99的伪随机数为例。取决于业务，可能你的需求是：①连续两次执行结果基本不同（“基本”是由于真随机的不可预测性，它们是可能相同的），或者是②连续执行100遍每次数字都不同，或者是③计算一万遍，要求结果呈现怎样怎样的分布。对于①来说，两次计算结果相同的概率只有百分之一（1% &lt;em&gt; 1% &lt;/em&gt; 100），三次结果相同的概率只有万分之一（1% &lt;em&gt; 1% &lt;/em&gt; 1% * 100）。所以测试可以这样来设计：调用两次，如果结果相同，那就再调用一次，如果还相同，那就再调用，直至不同为止。最后看调用次数&lt;code&gt;count&lt;/code&gt;：如果&lt;code&gt;count = 2&lt;/code&gt;，很好。如果&lt;code&gt;count = 3&lt;/code&gt;，那就说明现在正好是1%的那次。如果&lt;code&gt;count = 4&lt;/code&gt;，说明是0.01%的那次。理想情况下，如果每天运行100次测试，可能会有1次&lt;code&gt;count = 3&lt;/code&gt;，运行100天，有1次&lt;code&gt;count = 4&lt;/code&gt;，运行10000天（大约27年），会有一次&lt;code&gt;count = 5&lt;/code&gt;。根据业务的容忍程度判断&lt;code&gt;count&lt;/code&gt;的大小，例如当它大于5就算测试失败。虽然偶尔也会出现&lt;code&gt;count = 6&lt;/code&gt;的情况，但是非常罕有，平均2700年会有一次，而且就算测试失败，也很容易排查到这个问题。所以就可以认为是符合业务需求。对于②来说，那就执行100遍看结果好了，也是技术上可实现的。对于③来说，其实与①有相似之处，只要能够描述出来，就能够测试出来。只要自己控制好测试的阈值就可以了。&lt;/p&gt;
&lt;p&gt;维基百科上提供了一些&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%80%A7#.E9.9A.8F.E6.9C.BA.E6.80.A7.E6.B5.8B.E8.AF.95.E6.96.B9.E6.B3.95&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;随机性测试方法&lt;/a&gt;。只要能描述，就可以测试。但是，值得吗？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;怎样知道它是不是&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%95%B0&quot;&gt;随机数&lt;/a&gt;？如何测试一个&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90%E5%99%A8&quot;&gt;随机数生成器&lt;/a&gt;？&lt;br&gt;
    
    </summary>
    
      <category term="development" scheme="http://qinghua.github.io/categories/development/"/>
    
    
      <category term="test" scheme="http://qinghua.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>如何尽量避免生产事故</title>
    <link href="http://qinghua.github.io/avoid-production-accident/"/>
    <id>http://qinghua.github.io/avoid-production-accident/</id>
    <published>2017-02-02T02:22:21.000Z</published>
    <updated>2017-02-05T13:43:14.000Z</updated>
    
    <content type="html">&lt;p&gt;运维不好当啊。上个月&lt;a href=&quot;http://hs.blizzard.cn/articles/16/8565&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;炉石传说数据库故障导致数据损坏&lt;/a&gt;刚刚补偿完毕，这两天又出了个&lt;a href=&quot;http://www.oschina.net/news/81473/gitlab-com-down&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitLab误删生产数据库&lt;/a&gt;。本文聊聊尽量避免生产事故的一些方法。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我看到&lt;a href=&quot;http://mp.weixin.qq.com/s/kTA24o0opEk51Q-RNNWPKg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;圈内讨论&lt;/a&gt;里有人说，重要系统维护的时候必须两个人一起干活，一个做另外一个在旁边看。这有点儿像是结对编程的思路。我觉得两个人一起固然会好一点，但从结对的实际经验来看，一来可能导致效率更低，二来两个人一起也不能保证不会出问题。大部分情况下这两个人的水平并不是一致的，水平高的人操作，容易导致另一个人只是干看着；而水平低的人操作，反而增加了误操作的几率，需要水平高的人紧盯着。&lt;/p&gt;
&lt;p&gt;还有人说，改造一下&lt;code&gt;rm -rf&lt;/code&gt;，让它只能删空目录，我觉得这是一个不错的点子。由于人总是可能会出错，所以由一个机制来保证（法制而非人治），效果应该更加理想。不过这种办法也有几个问题存在。一是所有的机器都需要替换并保持&lt;code&gt;rm&lt;/code&gt;命令，二是操作的时候还是不免会稍微降低效率，三是误操作一般是在低意识的时候发生，&lt;code&gt;rm&lt;/code&gt;的报错，固然有可能会警醒操作者，但也有可能在惯性思维的引导下使操作者直接调用重命名后的老&lt;code&gt;rm&lt;/code&gt;。还有其它的办法吗？&lt;/p&gt;
&lt;p&gt;我也来抛砖引玉一个：如果从数据库同步上着手呢？只要是关于删除数据库、数据表（数据记录单谈，视需求而定）的操作，都创建新库来备份旧数据而非直接删除。缺点一是需要修改同步工具的代码，工作难度比较大；二是需要定期清理同步数据库。&lt;/p&gt;
&lt;p&gt;至于各种灾难恢复演练，确实很有必要，可惜目前的现实是大家每天手上都是一堆活儿，加上IT人员流动性又高，可操作性就欠缺了一点。无论如何，从性价比上来说，一个定期的备份绝对是避免进一步损失的救命稻草。当然，还有不断地学习……&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/mysql-drop-and-run.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;运维不好当啊。上个月&lt;a href=&quot;http://hs.blizzard.cn/articles/16/8565&quot;&gt;炉石传说数据库故障导致数据损坏&lt;/a&gt;刚刚补偿完毕，这两天又出了个&lt;a href=&quot;http://www.oschina.net/news/81473/gitlab-com-down&quot;&gt;GitLab误删生产数据库&lt;/a&gt;。本文聊聊尽量避免生产事故的一些方法。&lt;br&gt;
    
    </summary>
    
      <category term="idea" scheme="http://qinghua.github.io/categories/idea/"/>
    
    
      <category term="soft skill" scheme="http://qinghua.github.io/tags/soft-skill/"/>
    
  </entry>
  
  <entry>
    <title>创业公司里就职的那些事儿</title>
    <link href="http://qinghua.github.io/work-in-start-up/"/>
    <id>http://qinghua.github.io/work-in-start-up/</id>
    <published>2017-01-10T01:46:50.000Z</published>
    <updated>2017-01-10T08:41:28.000Z</updated>
    
    <content type="html">&lt;p&gt;创业公司和一般公司很不一样。第一次加入的小伙伴们如果了解得不够清楚，可能会像我当初那样一脸懵逼。本文主要说的是加入创业公司的一些值得注意的地方。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;创业公司的特点就是快。哪怕代码写的烂，不好维护，也要比竞品更快地推出新功能。当然，这样的程序质量太差，过了一段时间就很难维护或是扩展了。所以在中期拉到投资之后，重心就转移到重构代码使之更稳定上面。当然也有只要修修补补能撑到上市那天就行的战略。至于后期，像阿里腾讯这样的，持续地为社区贡献出开源代码，那就已经是质量非常好的程序了。所以一句话总结就是：前期快速从无到有，中期从有到好，后期从好到精。&lt;/p&gt;
&lt;p&gt;在大公司里，业务和体系都已经比较成熟了，你的位置可能就是一颗螺丝钉，但是可以研究得很深。而在创业公司里，对个人来说，会接触到方方面面的知识，得到更全面的发展，可能研究得广而不深。大公司的机会比较少，创业公司的机会比较多，倒闭的风险也很大。&lt;/p&gt;
&lt;h2 id=&quot;u878D_u8D44&quot;&gt;&lt;a href=&quot;#u878D_u8D44&quot; class=&quot;headerlink&quot; title=&quot;融资&quot;&gt;&lt;/a&gt;融资&lt;/h2&gt;&lt;p&gt;面试的时候，hr总会介绍：我们公司现在已经是A/B/C轮融资了，估值多少多少万美元。可是在当时的我看来，只不过是一个字母和一个数字罢了，没有太深的感触。它究竟有什么意义呢？这要从创业公司的成长过程说起了。来自36氪的下图说得非常清楚：&lt;br&gt;&lt;img src=&quot;/img/idea-to-ipo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;种子轮和天使轮还没有产品，变数太大，就不细说了。&lt;/li&gt;
&lt;li&gt;A轮意味着已经有了一小部分的用户规模，产品得到初步验证，但是对收入没有什么要求。&lt;/li&gt;
&lt;li&gt;B轮意味着更大规模的用户，也开始要求有初步的商业模式了，对于共享单车这样的领域，很明显用户要使用就必须付费，所以自带商业模式光环，只要市场占有率高就行。&lt;/li&gt;
&lt;li&gt;C轮意味着需要开始变现、盈利，不断地用钱去砸市场。如果市场还没有抢下来，很可能还需要继续融资往里烧钱。&lt;/li&gt;
&lt;li&gt;到了DEF轮，就没有什么本质上的区别了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创业公司在C轮之前挂掉很正常，例如找不到盈利模式，或是占不住市场。到了D轮，挂掉的风险就非常小了，公司一般都是奔着上市去了，再不行还可以被收购。&lt;/p&gt;
&lt;h2 id=&quot;u671F_u6743&quot;&gt;&lt;a href=&quot;#u671F_u6743&quot; class=&quot;headerlink&quot; title=&quot;期权&quot;&gt;&lt;/a&gt;期权&lt;/h2&gt;&lt;p&gt;期权（option）是员工持股计划（ESOP，Employee Stock Ownership Plans）的一种方式，用于激励员工。期权本身并不是股票，但是赋予了员工以较低价格购买公司普通股（ordinary shares）的权利。一开始100%的股池里，可能会抽出10%~20%作为员工的持股。不过随着每一轮的新投资进来，包括前期投资人在内的所有人的股份都会被稀释。例如：某创业公司天使轮估值1000万，这时候天使投资人投了200万占20%，员工占10%，创始人占70%；到了A轮估值2000万，A轮投资人投了400万占20%，所以原来100%的总池子就只能占80%了，员工就被稀释成了8%，天使投资人变成了16%，创始人变成了56%。不过员工部分虽然原来从10%变成8%，看起来比例降了，但是价值由100万升值为160万，反而倒是更值钱了。不过出于公司持续发展，新人不断进入，需要激励员工的原因，新的投资人一般会要求保持员工的10%不变，那么多出来的2%就需要从创始人和各投资人之间博弈中产生了。&lt;/p&gt;
&lt;p&gt;对于员工来说，进入创业公司，一般来说薪水会比正常公司低一些，但是公司会通过给予期权来提供一夜暴富的可能。一般都是预计给你多少多少股（例如一万股），每年给四分之一，头四分之一需要工作满一年之后才有，也有分季度给的，也有两年之后给一半的，也有根据公司业绩和个人表现，在入职一定时间之后再谈的，比较灵活。一般一年内离职，是拿不到期权的。如果公司已经上市，并且员工已经拿到了期权，就可以在解禁期后行权将其变为股票。公司与员工约定的价格成为行权价（exercise price），加入公司越早，行权价越低，甚至可能是0元。每一轮投资之后，由于估值上升，行权价也会上升。但是行权价对特定员工来说是固定的，也就是说，如果当初说的就是0.01刀一股，那么第四年行权价对此员工来说还是0.01刀一股。而第四年新加入的员工可能已经变成10刀一股的行权价了。越早进入收益越大，当然也伴随这更大的风险。同一时期加入的新员工，行权价是一样的，但是期权数量上可能会不一样。员工能赚取的收益，就是（当前每股价格－行权价）×股数-税收。如果运气不好碰到股票价格下降，也可以选择不行权。如果能等到上市，虽然很难，但是回报最高。有时候下一轮投资者进来，员工也会有机会套现一部分，但是套现的比例和对象都是由公司来决定的。虽然说上市最好，但是万一命不好碰上了普通股对美股18比1的稀释，也只有自吞苦水了。还有，期权是有有效期的，必须在规定的时间内行权，否则就作废了。&lt;/p&gt;
&lt;p&gt;如果公司还未上市，那就麻烦了。要是员工获取了一些期权后，中途离职呢？一般看公司（创始人）的厚道程度，有这么几种做法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公司折价（例如70%或80%）回购，当然对员工来说非常有利了&lt;/li&gt;
&lt;li&gt;保留期权，可以等到最终上市再行权，这样对员工来说也不错，但是对于公司来说，可能就会导致期权都发完了，后入职的员工就拿不到期权了&lt;/li&gt;
&lt;li&gt;离职三个月或半年内确定是否行权，若行权则需要员工掏钱。风险较大，若最终未上市，可能股份就变得一文不值了&lt;/li&gt;
&lt;li&gt;直接作废……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u53C2_u8003_u8D44_u6599&quot;&gt;&lt;a href=&quot;#u53C2_u8003_u8D44_u6599&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://workspace.fx114.net/qa-203-156906.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《期权有哪些坑,你知道吗?》&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/23357108/answer/76897476&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《你该怎么选Offer》&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/19678660/answer/17228691&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《在创业公司工作，期权怎么发放？》&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;创业公司和一般公司很不一样。第一次加入的小伙伴们如果了解得不够清楚，可能会像我当初那样一脸懵逼。本文主要说的是加入创业公司的一些值得注意的地方。&lt;br&gt;
    
    </summary>
    
      <category term="idea" scheme="http://qinghua.github.io/categories/idea/"/>
    
    
      <category term="soft skill" scheme="http://qinghua.github.io/tags/soft-skill/"/>
    
      <category term="start up" scheme="http://qinghua.github.io/tags/start-up/"/>
    
  </entry>
  
  <entry>
    <title>如何打造一个好氛围的技术团队</title>
    <link href="http://qinghua.github.io/build-tech-team/"/>
    <id>http://qinghua.github.io/build-tech-team/</id>
    <published>2017-01-09T00:41:23.000Z</published>
    <updated>2017-01-10T01:56:24.000Z</updated>
    
    <content type="html">&lt;p&gt;在创业团队里，由于自身名气不响，聘用到合适的员工是非常困难的。我就曾经遇上过无数约好面试不来的，几个发完offer后不报道也不主动回复的，甚至还有面试过程中接到BAT电话提供offer于是立马拔脚走人的。本文尝试记录一下某创业公司里，从零开始打造一个好氛围的技术团队的一些心得。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7EC4_u5EFA_u56E2_u961F&quot;&gt;&lt;a href=&quot;#u7EC4_u5EFA_u56E2_u961F&quot; class=&quot;headerlink&quot; title=&quot;组建团队&quot;&gt;&lt;/a&gt;组建团队&lt;/h2&gt;&lt;p&gt;招聘难，并不意味着就要降低标准。与其为了眼前利益而将就着聘用一个不太合适的人，并可能在未来使你自己还要耗费精力紧盯他的工作，让大家都痛苦，倒不如一开始就不要入这个坑。实际上招聘员工还是有一些技巧的。最靠谱的，就是自己认识，或者是同事内部推荐的人。这样的人有自己或者同事的背书，相比简历pk加海选，一般还是靠谱得多的。设置一个还不错的推荐费，更能增加一些推荐的动力。猎头们手上也会有一些不错的资源，就是会比较贵一些。选对合适的招聘时机也很重要。过年之后有不少领了年终奖后由于各种原因要跳槽的人，对于公司来说，可以选择的余地多了不少。当然弊端是这时候的竞争对手也会有很多。不过如果你的公司有足够吸引力的话（要不然你为什么会在那里？），关系也不大。提供差异化的岗位也是一个办法。有时候招聘时会觉得这人挺不错的，但就是不太适合这个职位，这时如果有条件的话，可以把眼光放长远些，留得好萝卜，不怕没有坑。有些工作还可以考虑以外包、合作甚至兼职的方式完成，不一定非得通过招聘来解决。&lt;/p&gt;
&lt;p&gt;团队的规模不要太大，不然管理起来又麻烦又累，效率也不高。也不要求每个人都非常资深，工作经验能够均匀地哈希开就可以了。团队成员的性格和技能上最好能够互补。性格上，可以参考&lt;a href=&quot;/effective-communication&quot;&gt;《人际风格与有效沟通实战》&lt;/a&gt;这篇文章，配备各种性格的队员。技能上，最好每个队员都各有所长，这样才能相互学习，促进团队整体的健康发展。&lt;/p&gt;
&lt;h2 id=&quot;u7EF4_u62A4_u56E2_u961F&quot;&gt;&lt;a href=&quot;#u7EF4_u62A4_u56E2_u961F&quot; class=&quot;headerlink&quot; title=&quot;维护团队&quot;&gt;&lt;/a&gt;维护团队&lt;/h2&gt;&lt;h3 id=&quot;u6839&quot;&gt;&lt;a href=&quot;#u6839&quot; class=&quot;headerlink&quot; title=&quot;根&quot;&gt;&lt;/a&gt;根&lt;/h3&gt;&lt;p&gt;有了团队之后，就需要让队员在团队里有家一般安心的感觉，这样才能集中精力，发挥出团队的战斗力。新招聘的人，由于对这个团队所知不多，根据各自的性格，可能会不敢表达，或者是急于表现。这就首先需要有一个能让新人感觉可靠的人物。虽然不至于时时嘘寒问暖，但是也要针对不同性格适时鼓励或是交代更多的背景知识。每当我去到一个新团队的时候，我就会把认识的人视为“根”，工作或是政策上有问题都会优先找他，就算他解决不了，也会告诉我应该找谁。有的公司会有类似的政策，称之为buddy或者是sponsor，以帮助新人迅速融入环境。所以为每位新人找到一个合适的“根”，让其从“根”上发芽并迅速成长为参天大树，就是团队领袖的任务之一。&lt;/p&gt;
&lt;h3 id=&quot;u8FDE_u63A5&quot;&gt;&lt;a href=&quot;#u8FDE_u63A5&quot; class=&quot;headerlink&quot; title=&quot;连接&quot;&gt;&lt;/a&gt;连接&lt;/h3&gt;&lt;p&gt;团队成员如果只是通过工作维系在一起，这样的连接就不是那么的可靠。所以我们需要团队建设（team building）来增加工作之外的连接。我记得新团队的第一次团队建设，是参加一个密室逃脱。在游戏中，不仅能看到每个人的特点和配合能力，还能给未来增加不少谈资，从而加强团队成员间的连接。相比起来，如果只是吃顿饭……效果就比较有限了，但总是比没有强。所以许多公司会有针对新人的拓展训练。如果公司层面能够组织旅游那就更理想了，除了提振团队士气，甚至找到自己的另一半也不无可能。团队发展好了，就会自发产生各种活动，甚至邀请团队成员去自己家里玩，从而将同事变成了朋友，在这样的团队里工作相信一定是令人愉悦的享受，而不仅仅是为了养家糊口而工作。&lt;/p&gt;
&lt;h3 id=&quot;u76EE_u6807&quot;&gt;&lt;a href=&quot;#u76EE_u6807&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://wiki.mbalib.com/wiki/%E5%9B%A2%E9%98%9F&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;团队是指一种为了实现某一目标而由相互协作的个体所组成的正式群体&lt;/a&gt;，所以明确团队的目标是非常重要的，可以说没有目标就没有团队存在的必要。这个目标需要让所有的团队成员都心中有数。曾经有一段时间完成一期的开发工作之后，第二天团队突然发现没有活儿了，于是有人开始焦虑，有人开始懒散，还有人浑浑噩噩，不知道整天都做了些什么。直到PM组织大家开了一个小会，说明了接下来的目标之后，团队才找到了存在的价值，重新振奋士气走下去。实现团队目标的同时，也可以兼顾团队成员个体的目标，尽量使之也能协同实现。&lt;/p&gt;
&lt;h3 id=&quot;u4F1A_u8BAE&quot;&gt;&lt;a href=&quot;#u4F1A_u8BAE&quot; class=&quot;headerlink&quot; title=&quot;会议&quot;&gt;&lt;/a&gt;会议&lt;/h3&gt;&lt;p&gt;工作上，新人可能对别人都干了些什么不那么了解，会有一种“不那么透明”的感觉。每天早上团队&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%AB%99%E4%BC%9A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;站会（stand-up meeting）&lt;/a&gt;是解决这个问题的良方之一。大家轮着说昨天都做了什么，今天要做些什么，遇到了哪些问题，有心的人自然能从中获取到有用的信息。&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BB%93%E5%AF%B9%E7%BC%96%E7%A8%8B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;结对编程（pair programming）&lt;/a&gt;也有助于在团队成员之间共享信息，但是它的成本比较高，可以在创业公司中将其作为非常规手段，只在必要的时候结对即可。一个迭代或项目完成之后的&lt;a href=&quot;https://zh.wikipedia.org/wiki/Scrum#Scrum.E4.BC.9A.E8.AE.AE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;回顾会议（retrospective）&lt;/a&gt;也对改进团队效率、增加团队透明度很有帮助。大致做法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果团队成员之间不很熟悉，或者氛围非常不好，需要做安全度检查，大家匿名打分，如果分数偏低，需要请在场人士中级别最高的人员离场，之后重复打分直至分数较高为止。如果一直都是很低，那团队肯定有问题。这个会也没有必要开了，领导需要在线下解决。这个是担心开会的时候，大家真话说得少，光说套话等。不说真话的会，不如不开，省的浪费大家时间。&lt;/li&gt;
&lt;li&gt;主持人组织大家写一些便利贴，一般包含好的（well）、不好的（less well）和不确定的（puzzle）三类，然后将其贴在白板上并进行归类。一个well的例子可能是我们有XXX新人加入，一个less well的例子可能是好久没有团建了，一个puzzle的例子可能是我们好久没有code review了。主持人应该尽量客观，通常尽量少发表自己的看法。他还要负责时间上的控制，不要太发散了，导致问题都聊不完，或者聊太high了。建议主持人轮岗。&lt;/li&gt;
&lt;li&gt;让大家都明白白板上的便利贴说的到底都是什么事。&lt;/li&gt;
&lt;li&gt;让大家投票选出最想聊的几件事，然后讨论并记下可以做的行动（action）以及负责人。&lt;/li&gt;
&lt;li&gt;主持人记录回顾内容并发给大家（wiki或邮件），这样可以在下次回顾会议的时候看看上次的行动进展如何了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5206_u6743&quot;&gt;&lt;a href=&quot;#u5206_u6743&quot; class=&quot;headerlink&quot; title=&quot;分权&quot;&gt;&lt;/a&gt;分权&lt;/h3&gt;&lt;p&gt;如果管理得太过精细，管理者难免会心力交瘁（有些人除外）。适当地放手，让团队成员自己负责某一块领域，不仅有助于管理者集中精力处理自己的任务，也更能促进团队成员的成长。即使管理者有事不在的时候，也能迅速找到后备者顶上，解决一些迫在眉睫的问题。每个团队成员都不一样，有些人不喜欢总是做一样的事情，这种时候就可以考虑轮岗，增加其技术广度。而有些人可能由于家庭或别的原因，希望稳定一段时间，这种时候就可以让其深入成为某一领域上的专家。所以一对一地聊一聊，确认对方的喜好，以及公司层面可以提供的支持，可以作为领导者的事前功课。&lt;/p&gt;
&lt;h3 id=&quot;u63D0_u9AD8_u6548_u7387&quot;&gt;&lt;a href=&quot;#u63D0_u9AD8_u6548_u7387&quot; class=&quot;headerlink&quot; title=&quot;提高效率&quot;&gt;&lt;/a&gt;提高效率&lt;/h3&gt;&lt;p&gt;团队的开发效率非常重要，可以说是关系到团队的存亡。这方面可以采用痛点驱动的办法来提高团队效率。例如，如果程序员写的代码，要部署上某个环境非常费劲，那就会迫使程序员尽量少去部署。这时候团队就需要有人站出来，解决部署慢的问题。有许多时候这其实就是个对某原则的妥协，或是对某个工具不太熟悉罢了。例如，当时团队开发app的h5端的时候，部署测试环境需要五分钟，导致调试效率低下。后来通过分析为什么慢，并打出一系列组合拳来解决那些原因，我们将部署时间缩短到了10秒，大家的工作热情很容易就起来了。还有一次由于包引用的关系，导致部署并调试本地环境需要耗时三分钟。分析原因之后，我们放弃了DRY原则，将比较类似的代码分散到了不同的代码库里，极大地提高了本地的调试效率。而被放弃的DRY原则在这种场景下其实并不是那么的适用。&lt;/p&gt;
&lt;p&gt;许多程序员倾向于复制/粘贴代码来作为自己的模板。所以如果技术领导者想要大家写出什么样的代码，首先需要让自己的代码成为理想代码的模板。例如，如果我希望大家编写单元测试，那我的代码就需要有单元测试，这样当其他人复制的时候，就需要考虑单元测试怎么写的问题。但如果只是口头说说，很快就会流于形式。而模板当然不可能一口气就写得那么完美，所以当代码审查的时候，需要识别并不断改进烂代码，还要把思想传达给其他人，最终成为团队共同的财富。&lt;/p&gt;
&lt;h3 id=&quot;u5B66_u4E60&quot;&gt;&lt;a href=&quot;#u5B66_u4E60&quot; class=&quot;headerlink&quot; title=&quot;学习&quot;&gt;&lt;/a&gt;学习&lt;/h3&gt;&lt;p&gt;仅有工作的热情还不够，程序员其实并不是吃青春饭的职业，而是终身不断学习提高的职业。团队应该能够提供集体学习的环境，例如大家每周三晚上共同学习某一个课程（例如某个特定技术或是在线课程），共同成长。一个人学，学得快；一群人学，学得深。集体学习因为可以相互分享和讨论，学习效果要比个体学习更加突出。&lt;/p&gt;
&lt;h3 id=&quot;u5206_u4EAB&quot;&gt;&lt;a href=&quot;#u5206_u4EAB&quot; class=&quot;headerlink&quot; title=&quot;分享&quot;&gt;&lt;/a&gt;分享&lt;/h3&gt;&lt;p&gt;要想打造一个技术氛围浓厚的团队，适时地举办技术分享会是一个很不错的办法。一开始可能由于各种原因没人响应，这就需要团队领袖走出第一步并持续鼓励大家分享。如果团队成员不太自信，一开始的分享内容可以是非技术的，也可以是较短时间的。只要走出了第一步，后面总会越来越好的。分享除了让团队成员获取知识，更直接的其实是让分享者自身成长，还有助于将自己塑造成此领域的技术专家形象。分享可能会带来一些工作时间上的消耗（准备分享以及大家聚集在一起的时间），但是从长远来看是非常有益于团队成长和技术氛围构筑的。我所在的上一个团队就成功地推出了两档分享品牌，一个是每周五下午一个小时左右的技术主题分享，以及不定期的午间半小时非技术或是小技术分享。除了session形式的分享以外，还可以有workshop类型的分享，大家一起动手完成某个任务，效果更佳。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在创业团队里，由于自身名气不响，聘用到合适的员工是非常困难的。我就曾经遇上过无数约好面试不来的，几个发完offer后不报道也不主动回复的，甚至还有面试过程中接到BAT电话提供offer于是立马拔脚走人的。本文尝试记录一下某创业公司里，从零开始打造一个好氛围的技术团队的一些心得。&lt;br&gt;
    
    </summary>
    
      <category term="idea" scheme="http://qinghua.github.io/categories/idea/"/>
    
    
      <category term="soft skill" scheme="http://qinghua.github.io/tags/soft-skill/"/>
    
      <category term="start up" scheme="http://qinghua.github.io/tags/start-up/"/>
    
      <category term="management" scheme="http://qinghua.github.io/tags/management/"/>
    
  </entry>
  
  <entry>
    <title>性能调优的一些技巧总结</title>
    <link href="http://qinghua.github.io/performance-tuning/"/>
    <id>http://qinghua.github.io/performance-tuning/</id>
    <published>2017-01-06T03:35:34.000Z</published>
    <updated>2017-01-07T12:08:58.000Z</updated>
    
    <content type="html">&lt;p&gt;程序猿和攻城狮们天天写代码，难免碰到别人反映程序慢。我自己就碰到了许多次这样的问题。现在将一些心得记录总结一下，以便大家和未来的自己参考。总体原则是：不能无的放矢。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;曾经面试过一个人，问对方说如果有一天客服反馈说你编写的页面加载很慢，那你应该怎么办？对方想了想：加缓存呗。可是此时连慢的原因都还不知道呢，加缓存能管用么？不管如何，首先得知道哪里慢，然后针对慢的地方对症下药，才是解决之道。没有数据的性能调优就是耍流氓！就像这几天霾绕帝都，让人想起炒菜油烟的梗。难道所有人不炒菜雾霾就能消失？首先还是要收集数据，到底慢（mái）的主要原（chéng）因（fèn）是什么？&lt;/p&gt;
&lt;h2 id=&quot;u524D_u7AEF&quot;&gt;&lt;a href=&quot;#u524D_u7AEF&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h2&gt;&lt;p&gt;十年前，那会儿还没有chrome呢。当时web页面调得没有什么问题了，然后在客户那边渲染就是很慢。看了一下数据量确实很大，于是用最原始的办法：加上alert()来人肉估计一下运行时间，然后就发现下面这段代码很慢：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i++) &amp;#123; ... &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可是循环体的内容很简单，怎么看都不太会影响处理速度的样子，那问题出在哪里呢？抱着试试看的想法，把代码变成这样：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;int length = arr.length;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; length; i++) &amp;#123; ... &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;居然问题就解决了！从此后写js的习惯就变了……当然现代的浏览器都对类似的代码进行了优化，所以这么奇怪的事情已经不太常见了。我们有了强大的chrome，可以用Profiles来测试网页的性能：&lt;br&gt;&lt;img src=&quot;/img/chrome-profiler.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;开Profile后，在百度上搜索“性能调优”就能得到上图的结果，从中可以看出到底哪个地方耗时最多，然后采取针对性的措施。有一年除夕夜，大家都早早离开了，可是我还要处理一个页面的性能问题，否则春节期间在客户现场支持的同事就要遭殃了。当时就是用Profile找到速度极慢的函数，发现它还被调用了2+n遍，最后改成了只调用1遍，便把性能提上来了。当然，这两个例子都是在我确切地知道问题发生在前端的时候才用的方式。而网页慢的原因不一定只是前端，所以需要结合Network一起看：&lt;br&gt;&lt;img src=&quot;/img/chrome-network.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果request持续时间占的比重很大，那就需要跑到后端看看了。如果一个web页面明显慢，但是时间又在前后端分布均匀，那么恭喜你，前后端的调优都得一起做了，否则性能提升恐怕不会那么的明显。这样的机会可不是每个程序员都能得到的。前端的算法也是一个可能会出事故的点。有一次的需求就是页面的一棵树，每个枝叶都有一个checkbox，在选择枝的时候要把叶都选上。如果数据量有可能比较大的话，算法的优劣一般就直接决定了用户的体验。算法因需求而异，这里就不展开细说了，刷刷&lt;a href=&quot;https://leetcode.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeetCode&lt;/a&gt;吧。&lt;/p&gt;
&lt;p&gt;有时候，速度慢在资源加载上。例如，一个angular的库就100多k，再加上其它七七八八的类库，还有自己的js代码，一开始需要下载1M的js文件。CDN、minify这些手段之外，还有一种办法就是，让下载大文件在用户的操作期间来做。例如，企业级web应用的统一入口一般都是login页面，这时候用户需要填写自己的凭证信息，而这是需要一段时间的。如果在这段时间内把大文件下载并缓存到浏览器里，虽然还是比较慢，但是并不太会影响用户体验。还可以拆分相对来说不太会变化的代码和变化可能会较频繁的代码，这样在部署新版本之后，不太会变化的代码的缓存就可以重复利用起来了。&lt;/p&gt;
&lt;p&gt;上面的办法其实就是异步的思路。有时候代码是这样工作的：一个ajax完成之后，再发另一个ajax以请求其它信息。这时候就可以看看是否这两个ajax请求有依赖，如果没有依赖，完全可以并行运行，如果有依赖，也可以考虑是否能合并为一个更特定一些的请求。&lt;/p&gt;
&lt;h2 id=&quot;u540E_u7AEF&quot;&gt;&lt;a href=&quot;#u540E_u7AEF&quot; class=&quot;headerlink&quot; title=&quot;后端&quot;&gt;&lt;/a&gt;后端&lt;/h2&gt;&lt;p&gt;后端可以发挥的空间相对来说更大一些。缓存用好了是一剂良药，用不好就是一剂毒药。毕竟&lt;a href=&quot;http://martinfowler.com/bliki/TwoHardThings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;命名和缓存失效是计算机科学里面最难应对的两件事&lt;/a&gt;。前一阵子某电商的模块里，从后端获取商品极慢，然后就发现了gateway在获取商品的API里，竟然向商品服务发了几百个请求，不慢才怪呢。统计了一下，这里面至少有90%都是参数相同的重复请求，使用30秒的短缓存，便可以立即减少重复请求，提高90%的性能，这样用户的感知就非常明显了。但实际上，还是需要分析代码，为什么会有这么多的重复请求？多半还是代码写的有问题。缓存是治标之道，立竿见影，但要治本，还是需要从代码上着手，优化代码本身。还有一些可以做的，是提供合并查询的API，例如除了提供getSkuById()以外，再提供一个getSkusByIds()的方法，当然还要小心不要出现&lt;a href=&quot;http://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;n+1&lt;/a&gt;的问题。还有一个C#里经常会碰到的性能问题，那就是过早地计算linq的实际值。Java 8的流里也有类似的可能。&lt;/p&gt;
&lt;p&gt;有时候，性能问题与需求有关系。曾经碰到过的一个需求是：用户注册的时候，要求昵称不能重复。如果重复了，推荐3个以递增数字结尾的新昵称给用户。例如，ggg被注册了，推荐ggg1、ggg2、ggg3给用户。当然还需要判断ggg1、ggg2、ggg3是否也被注册了，否则还得往后加。而验证昵称的代码因为需要访问数据库导致比较慢。有一段时间，用户很喜欢使用这个昵称：༺༻，都排到100号了。每当新用户想使用这个昵称的时候，后台都需要判断100次以上，因为༺༻1到༺༻100都被占用了。这时候就可以跟产品经理讨论讨论，是否需要推荐昵称？是否可以改变推荐昵称的方式？例如增加日期到推荐昵称里以避免重复。必要时，还可以挑战一下：有多少用户使用了我们系统推荐的昵称？如果需求实在是硬邦邦完全不能变，那只能考虑一些技术手段了，例如给数据库里用户表的昵称字段增加索引、缓存常见昵称的当前最大值、甚至动大刀子弄个昵称服务，或是备份数据库等，看看是否付出能够值回票价了。还有一次是推荐好友的功能，要求随机同城异性等级高，说不定还需要考虑年龄星座喜好呢，这些大多是不常用的字段，也滤不掉太多数据，查找起来自然很慢，这样也需要看看业务价值究竟有多大。&lt;/p&gt;
&lt;p&gt;后端不像前端那样打开浏览器就能看到性能信息，也很难通过调试的方式来看生产环境为什么慢。这个时候如果框架里有处理时间日志，就会对排除性能问题非常有帮助。如果配置了ELK或者Splunk，就可以轻松找到可疑的接口。用户模块新上线的时候，就曾经直接定位到推荐好友的API速度慢，从而找到那条缓慢的SQL。哪怕是模块正常工作期间，也能通过日志看到一些有用信息。有天晚上从日志里发现用户注册API特别慢，后来知道原来是电信/联通的问题，当天如果通过微信/微博注册的用户，由于网络不通畅，导致整个用户注册响应都有问题。如果部署在阿里云上，云抽风了也并不罕见。另外所有与外部请求有关的模块，都有潜在的性能风险。使用外部请求的模块一般都有微信/微博授权、微信/支付宝付款、SMS网关、埋点、物流/天气接口、各种云服务/CDN等等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;程序猿和攻城狮们天天写代码，难免碰到别人反映程序慢。我自己就碰到了许多次这样的问题。现在将一些心得记录总结一下，以便大家和未来的自己参考。总体原则是：不能无的放矢。&lt;br&gt;
    
    </summary>
    
      <category term="development" scheme="http://qinghua.github.io/categories/development/"/>
    
    
      <category term="performance tuning" scheme="http://qinghua.github.io/tags/performance-tuning/"/>
    
  </entry>
  
  <entry>
    <title>终端录制工具推荐</title>
    <link href="http://qinghua.github.io/terminal-recorder/"/>
    <id>http://qinghua.github.io/terminal-recorder/</id>
    <published>2016-12-07T13:31:46.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;Mac自带的QuickTime Player就有录屏的功能，所以平时如果录一段操作什么的很方便。但是视频嘛，终究是比较大的。如果仅仅是录制命令行的话，可以考虑本文里介绍的工具。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;showterm&quot;&gt;&lt;a href=&quot;#showterm&quot; class=&quot;headerlink&quot; title=&quot;showterm&quot;&gt;&lt;/a&gt;showterm&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://showterm.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;showterm&lt;/a&gt;是一个用ruby编写的开源命令行录屏工具，用起来超级简单。使用&lt;code&gt;gem&lt;/code&gt;来安装：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo gem install showterm&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;录制更简单：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;showterm&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以自行敲入各种命令来录制了，使用&lt;code&gt;exit&lt;/code&gt;或者Ctrl+D快捷键结束录制。showterm会把录制结果直接上传并给出一个网址，如：&lt;a href=&quot;http://showterm.io/6ccdbde054d30d825934e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://showterm.io/6ccdbde054d30d825934e&lt;/a&gt;，这样就能很方便地分享给朋友们啦。要想嵌入到自己的网页上也没有问题：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://showterm.io/6ccdbde054d30d825934e&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;640&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;480&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;iframe src=&quot;http://showterm.io/6ccdbde054d30d825934e&quot; width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;TermRecord&quot;&gt;&lt;a href=&quot;#TermRecord&quot; class=&quot;headerlink&quot; title=&quot;TermRecord&quot;&gt;&lt;/a&gt;TermRecord&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/theonewolf/TermRecord&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TermRecord&lt;/a&gt;是一个用python编写的开源命令行录屏工具。使用&lt;code&gt;pip&lt;/code&gt;来安装：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install ttyrec&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo easy_install pip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo pip install TermRecord&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有别于showterm，它不会自动上传到网上，而是生成一个html文件，想要分享的话，你可以将其发送给好友。录制同样简单：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;TermRecord -o ggg.html&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同样使用&lt;code&gt;exit&lt;/code&gt;或者Ctrl+D快捷键结束录制。要想查看录制结果，直接浏览器打开&lt;code&gt;ggg.html&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;h2 id=&quot;asciinema&quot;&gt;&lt;a href=&quot;#asciinema&quot; class=&quot;headerlink&quot; title=&quot;asciinema&quot;&gt;&lt;/a&gt;asciinema&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://asciinema.org/docs/getting-started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;asciinema&lt;/a&gt;是一个用ClojureScript编写的开源命令行录屏工具。相比上面的工具，asciinema综合了它们各自的优点，最为强大。使用&lt;code&gt;brew&lt;/code&gt;来安装：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew update &amp;amp;&amp;amp; brew install asciinema&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;pip3&lt;/code&gt;来安装也可以：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo pip3 install asciinema&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;录制还是简单：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;asciinema rec&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还是使用&lt;code&gt;exit&lt;/code&gt;或者Ctrl+D快捷键结束录制。与showterm不同的是，它会在结束录制的时候提示，如果要上传的话，敲回车，这样就不至于把废品也上传了。上传之后，asciinema会给出一个网址，如：&lt;a href=&quot;https://asciinema.org/a/44nu2i2ieywlmqq9wx5sk5k1e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://asciinema.org/a/44nu2i2ieywlmqq9wx5sk5k1e&lt;/a&gt;。要想嵌入到自己的网页上也没有问题：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://asciinema.org/a/44nu2i2ieywlmqq9wx5sk5k1e.js&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;asciicast-44nu2i2ieywlmqq9wx5sk5k1e&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;async&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://asciinema.org/a/44nu2i2ieywlmqq9wx5sk5k1e.js&quot; id=&quot;asciicast-44nu2i2ieywlmqq9wx5sk5k1e&quot; async&gt;&lt;/script&gt;

&lt;p&gt;如果不想上传，可以用这条命令将其保存为一个json文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;asciinema rec ggg.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用以下命令可以查看录制结果：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;asciinema play ggg.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;甚至可以再次上传：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;asciinema upload ggg.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还能通过&lt;code&gt;asciinema auth&lt;/code&gt;命令并在&lt;a href=&quot;https://asciinema.org/login/new&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;asciinema&lt;/a&gt;上注册账号来管理自己上传的文件，功能上确实是这几个工具中最强大的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mac自带的QuickTime Player就有录屏的功能，所以平时如果录一段操作什么的很方便。但是视频嘛，终究是比较大的。如果仅仅是录制命令行的话，可以考虑本文里介绍的工具。&lt;br&gt;
    
    </summary>
    
      <category term="tool" scheme="http://qinghua.github.io/categories/tool/"/>
    
    
      <category term="showterm" scheme="http://qinghua.github.io/tags/showterm/"/>
    
      <category term="TermRecord" scheme="http://qinghua.github.io/tags/TermRecord/"/>
    
      <category term="asciinema" scheme="http://qinghua.github.io/tags/asciinema/"/>
    
  </entry>
  
  <entry>
    <title>领域驱动设计DDD</title>
    <link href="http://qinghua.github.io/ddd/"/>
    <id>http://qinghua.github.io/ddd/</id>
    <published>2016-12-04T14:14:10.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-driven_design&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Domain Driven Design&lt;/a&gt;（DDD）是Eric Evans于2004在其同名著作里提出的概念，它指明了让软件设计满足理想需求模型的方向。但是建模、设计这种事本来就很抽象，读懂这样的大作也是需要消耗不少脑细胞。本文希望能尽量以简单加实例的方式介绍DDD里的一些常见概念。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;h3 id=&quot;u4EC0_u4E48_u662F_u9886_u57DF&quot;&gt;&lt;a href=&quot;#u4EC0_u4E48_u662F_u9886_u57DF&quot; class=&quot;headerlink&quot; title=&quot;什么是领域&quot;&gt;&lt;/a&gt;什么是领域&lt;/h3&gt;&lt;p&gt;《领域驱动设计》书里写的是：用户会把软件程序应用于某个主体区域，这个区域就是软件的领域。简单来说，就认为是公司的某块业务好了。如果领域比较大，可以将其拆分为多个子域（Subdomain），子域包含核心域（Core Domain）和支撑子域（Supporting Subdomain），核心域顾名思义，是最重要的子域，我们应该把关注点集中在它上面；其余的子域都是支撑子域。支撑子域里有一类特殊的用于解决通用问题的子域，称为通用子域（Generic Subdomain），例如用户和权限等。不过这些都是相对而言的，对于消费方来说，他的支撑子域有可能就是你的核心域。个别子域可能会有交集，称为共享内核（Shared Kernel），目的是减少重复，但是仍保持两个独立的上下文。由于不同子域的开发团队可能会同时修改共享内核，所以需要小心并注意沟通。&lt;/p&gt;
&lt;h3 id=&quot;u8981DDD_u505A_u4EC0_u4E48&quot;&gt;&lt;a href=&quot;#u8981DDD_u505A_u4EC0_u4E48&quot; class=&quot;headerlink&quot; title=&quot;要DDD做什么&quot;&gt;&lt;/a&gt;要DDD做什么&lt;/h3&gt;&lt;p&gt;DDD试图解决的是软件的复杂性问题，如果软件比较复杂，或者是预期会很复杂，或者是你不知道，那么都可以开始考虑DDD。否则，由于维系领域模型需要实现大量的封装和隔离，DDD会带来较大的成本。但是，DDD并不是一个笨重的开发过程，它能够和敏捷开发很好地结合起来，另外，DDD也倾向于“测试先行，逐步改进”。&lt;/p&gt;
&lt;h2 id=&quot;u6218_u7565_u5EFA_u6A21_uFF08Strategic_Modeling_uFF09&quot;&gt;&lt;a href=&quot;#u6218_u7565_u5EFA_u6A21_uFF08Strategic_Modeling_uFF09&quot; class=&quot;headerlink&quot; title=&quot;战略建模（Strategic Modeling）&quot;&gt;&lt;/a&gt;战略建模（Strategic Modeling）&lt;/h2&gt;&lt;h3 id=&quot;u901A_u7528_u8BED_u8A00_uFF08Ubiquitous_Language_uFF09&quot;&gt;&lt;a href=&quot;#u901A_u7528_u8BED_u8A00_uFF08Ubiquitous_Language_uFF09&quot; class=&quot;headerlink&quot; title=&quot;通用语言（Ubiquitous Language）&quot;&gt;&lt;/a&gt;通用语言（Ubiquitous Language）&lt;/h3&gt;&lt;p&gt;其实写软件就像是翻译，把领域上的业务需求翻译成软件的各个功能。业务需求来自领域专家（Domain Expert），程序员们需要把领域专家的语言翻译成程序。如果程序员们翻译的时候使用的是自己的语言，而领域专家使用自己的行话，导致术语不一致，就会使得沟通不顺畅，难于消化知识。所以团队需要一种通用语言来进行沟通。这样的通用语言尽量以业务语言为主，而非技术语言。一开始的通用语言可能不尽完美，但它就像是代码一样，经常需要重构。例如：“创建一个订单”就比“插入一条订单数据”更容易让领域专家明白谈话的背景。&lt;/p&gt;
&lt;h3 id=&quot;u9650_u754C_u4E0A_u4E0B_u6587_uFF08Bounded_Context_uFF09&quot;&gt;&lt;a href=&quot;#u9650_u754C_u4E0A_u4E0B_u6587_uFF08Bounded_Context_uFF09&quot; class=&quot;headerlink&quot; title=&quot;限界上下文（Bounded Context）&quot;&gt;&lt;/a&gt;限界上下文（Bounded Context）&lt;/h3&gt;&lt;p&gt;通用语言里，同一个名词在不同的场景里不一定有相同的意思。比如用户，在推荐好友（可能关注年龄、性别、地域）或是浏览商品（可能关注喜好、历史购买记录）的时候有着不同的含义。所谓的不同的场景，其实就是不同的限界上下文。子域在限界上下文中完成开发。限界上下文主要用来封装通用语言和领域模型，显式地定义了领域模型的边界。不同的限界上下文，都会有一套自己的通用语言。通过这样的划分方式，来让每个限界上下文都尽量保持简单，也算是&lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SRP&lt;/a&gt;原则在不同粒度上的一个体现。如果不去做这样的划分，可能最终这个软件就会演变成一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Big_ball_of_mud&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大泥球&lt;/a&gt;，或者说是&lt;a href=&quot;https://en.wikipedia.org/wiki/Monolithic_application&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;单块系统&lt;/a&gt;。尽管如此，对于比较小的业务或项目来说，可能只会有一个限界上下文。现在流行的&lt;a href=&quot;https://en.wikipedia.org/wiki/Microservices&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微服务&lt;/a&gt;，很大程度上就是按照限界上下文来划分服务。例如：商品上下文，订单上下文，物流上下文等。当然，如果子域很小，不见得非得微服务化。&lt;/p&gt;
&lt;p&gt;不同的限界上下文之间，通过上下文映射图（Context Map）来进行交互。上下文映射图其实就是一个简单的框图，表示限界上下文之间的的映射关系。下面这张图就是一个简单的例子：&lt;br&gt;&lt;img src=&quot;/img/ddd-context-map.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;U表示上游（Upstream）的被依赖方，D表示下游（Downstream）的依赖方。由于上下游的限界上下文模型不同，实现时，可以用RPC、Restful、消息机制等集成方式。另外，下游需要防腐层（Anticorruption Layer）来将上游的返回内容翻译为下游的领域模型。如果防腐层过多地使用了各种赋值，从而导致上下游的模型非常类似，那就需要看看是否下游过多地使用了上游的数据，从而导致自己的模型不清晰。&lt;/p&gt;
&lt;h2 id=&quot;u6218_u672F_u5EFA_u6A21_uFF08Tactical_Modeling_uFF09&quot;&gt;&lt;a href=&quot;#u6218_u672F_u5EFA_u6A21_uFF08Tactical_Modeling_uFF09&quot; class=&quot;headerlink&quot; title=&quot;战术建模（Tactical Modeling）&quot;&gt;&lt;/a&gt;战术建模（Tactical Modeling）&lt;/h2&gt;&lt;h3 id=&quot;u6A21_u578B&quot;&gt;&lt;a href=&quot;#u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;模型&quot;&gt;&lt;/a&gt;模型&lt;/h3&gt;&lt;h4 id=&quot;u5B9E_u4F53_uFF08Entity_uFF09&quot;&gt;&lt;a href=&quot;#u5B9E_u4F53_uFF08Entity_uFF09&quot; class=&quot;headerlink&quot; title=&quot;实体（Entity）&quot;&gt;&lt;/a&gt;实体（Entity）&lt;/h4&gt;&lt;p&gt;所谓领域，反映到代码里就是模型。模型分为实体和值对象两种。实体是有标识（Identity）的，两个拥有相同属性的实体不是相等的，除非它们的标识相等；而不同实体的标识不能相等。例如：某人下了两个相同的订单，里面都购买了相同的商品。这两个订单就是有标识（订单号）的两个实体，虽然内容相同，但它们是两个不同的实体。常用的标识有自增数字、Guid、自然标识（如邮箱、身份证号）等。实体具有生命周期，它们的内容可能在这期间会发生改变，但是标识是永远不会变化的。实体作为领域模型的主体，需要拥有自己的方法，方法名来自于通用语言。通过这些方法来保证自己始终是一致的状态，而非被调用者set来set去。例如：&lt;code&gt;people.runTo(x, y)&lt;/code&gt;，而非&lt;code&gt;people.setX(x);people.setY(y);&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;u503C_u5BF9_u8C61_uFF08Value_Object_uFF09&quot;&gt;&lt;a href=&quot;#u503C_u5BF9_u8C61_uFF08Value_Object_uFF09&quot; class=&quot;headerlink&quot; title=&quot;值对象（Value Object）&quot;&gt;&lt;/a&gt;值对象（Value Object）&lt;/h4&gt;&lt;p&gt;实体用来表示领域中的一个东西，而值对象只用于描述或度量一个东西。值对象没有任何标识，只要两个值对象的属性相等，那么它们就是相等的。值对象是不可变的，如果要改变值对象的内容，那就重新创建一个值对象。值对象没有生命周期，因为它只是值而已。例如：金额（含数值和货币单位），颜色（含rgb值）等。因为不需要标识，所以它们其实比实体要简单许多。Java里的String类，就具有一个值对象的行为；C#的Struct其实就是一个值对象，不过一般还是会用Class来表示值对象。&lt;/p&gt;
&lt;p&gt;不同的领域需求可能会催生不同的建模。例如：考虑一下演出的售票系统。如果需求是对号入座，那么座位就是实体，一旦某张演出票关联了某个座位，那么这个座位就再也不能被其它的演出票所关联了。如果需求是先到先坐，那么座位就是值对象，我们只关心卖了多少张演出票，不要超过座位上限即可，而并不用关心哪个座位被哪张票所关联了。&lt;/p&gt;
&lt;p&gt;DDD的一个反模式就是拥有一堆&lt;code&gt;get&lt;/code&gt;和&lt;code&gt;set&lt;/code&gt;方法的贫血领域对象（Anemic Domain Object）。这样的对象只是一个数据持有器（data holder），而非我们想要的领域模型。值对象和实体一样，都需要有自己的方法。例如：金额值对象，有一个&lt;code&gt;Add&lt;/code&gt;的方法，接受一个金额参数，返回一个新的值对象。&lt;/p&gt;
&lt;p&gt;实体里可以包含值对象，值对象里也可以包含实体。&lt;/p&gt;
&lt;h4 id=&quot;u9886_u57DF_u670D_u52A1_uFF08Domain_Service_uFF09&quot;&gt;&lt;a href=&quot;#u9886_u57DF_u670D_u52A1_uFF08Domain_Service_uFF09&quot; class=&quot;headerlink&quot; title=&quot;领域服务（Domain Service）&quot;&gt;&lt;/a&gt;领域服务（Domain Service）&lt;/h4&gt;&lt;p&gt;有些操作不属于实体或者值对象，那就不用强塞给它们，创建领域服务来提供这些操作吧。留意通用语言，如果里面出现了名词，那一般就是实体或值对象；如果里面出现了动词，那通常就意味着领域服务。例如：支付，这是一个比较明显的业务操作。另外，如果有什么操作会让实体变得臃肿，也可以使用领域服务来解决。但是，不能把所有的东西都堆到领域服务里，过度使用领域服务会导致贫血对象的产生。&lt;/p&gt;
&lt;p&gt;据Eric Evans所言，设计良好的领域服务具有以下三个特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作不是实体/值对象的一个自然的部分&lt;/li&gt;
&lt;li&gt;接口根据领域模型的其它元素定义&lt;/li&gt;
&lt;li&gt;操作无状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还需要注意的是，不要把领域服务和应用服务混起来了。我们在领域服务里处理业务逻辑，而并不在应用服务里处理。应用服务是领域模型的直接客户，负责处理事务、安全等操作。&lt;/p&gt;
&lt;h4 id=&quot;u9886_u57DF_u4E8B_u4EF6_uFF08Domain_Event_uFF09&quot;&gt;&lt;a href=&quot;#u9886_u57DF_u4E8B_u4EF6_uFF08Domain_Event_uFF09&quot; class=&quot;headerlink&quot; title=&quot;领域事件（Domain Event）&quot;&gt;&lt;/a&gt;领域事件（Domain Event）&lt;/h4&gt;&lt;p&gt;《领域驱动设计》一书出版之后，DDD社区并没有停止前进的步伐。领域事件就是在那之后提出来的。领域事件是一个定义了领域专家所关心的事件的对象。当关心的状态由于模型行为而发生改变时，系统将发布领域事件。如果通用语言里出现了：“当……的时候，需要……”通常就意味着一个领域事件。例如：当订单完成支付时，商品需要出库。这里的订单完成支付就预示着一个OrderPaidEvent，里面持有着这个订单的标识。领域事件代表的是已经发生的事，所以命名上通常都使用过去时（如Paid）。对领域事件的处理就像是一个观察者模式，由领域事件的订阅方来决定。订阅方既可以是本地的限界上下文，也可以是外部的限界上下文。&lt;/p&gt;
&lt;h4 id=&quot;u6A21_u5757_uFF08Module_uFF09&quot;&gt;&lt;a href=&quot;#u6A21_u5757_uFF08Module_uFF09&quot; class=&quot;headerlink&quot; title=&quot;模块（Module）&quot;&gt;&lt;/a&gt;模块（Module）&lt;/h4&gt;&lt;p&gt;如果领域模型发展得比较快，很难整体来讨论它，因为太大了。我们可以将模块视为Java中的包或是C#中的命名空间。将模型组织到不同的模块中，可以有效地降低领域的复杂性。模块之间应该是低耦合的，而模块内部应该是高内聚的。模块的名称应该是通用语言的组成部分，反映出领域的深层知识。&lt;/p&gt;
&lt;h3 id=&quot;u751F_u547D_u5468_u671F&quot;&gt;&lt;a href=&quot;#u751F_u547D_u5468_u671F&quot; class=&quot;headerlink&quot; title=&quot;生命周期&quot;&gt;&lt;/a&gt;生命周期&lt;/h3&gt;&lt;h4 id=&quot;u805A_u5408_uFF08Aggregate_uFF09&quot;&gt;&lt;a href=&quot;#u805A_u5408_uFF08Aggregate_uFF09&quot; class=&quot;headerlink&quot; title=&quot;聚合（Aggregate）&quot;&gt;&lt;/a&gt;聚合（Aggregate）&lt;/h4&gt;&lt;p&gt;聚合就是一组应该呆在一起的对象，聚合根（Aggregate Root）就是聚合在一起的基础，并提供对这个聚合的操作。聚合除了聚合根以外，还有自己的边界（boundary），即聚合里有什么。例如：一个订单可以有多个订单明细，订单明细不可能脱离订单而存在，而订单也不可能没有订单明细。这种情况下，订单和订单明细就是一个聚合，而订单就是这个聚合的聚合根，订单和订单明细就处于这个聚合的边界之内。如果要变更订单明细，我们需要通过操作聚合根订单来实现，如&lt;code&gt;order.changeItemCount()&lt;/code&gt;，而非订单明细自身。另外一个例子：一名客户可以有多个订单，订单不可能脱离客户而存在，而客户却可以没有订单。这种情况下，客户和订单就是不同的两个聚合，一个聚合以客户为聚合根，另一个聚合以订单为聚合根，引用客户的标识。客户里并不引用订单的标识，这样将关联减至最少有助于简化对象的关系网。但是带来的一个麻烦就是如果要查找某位客户的所有订单，就不得不从所有的订单里查，而不能从客户这个聚合里直接获得。最后再举一个多对多的例子：一个班级可以有多名学生，学生可以脱离这个班级而存在，而班级不能没有学生，学生也不能不在班级里。这种情况下，班级和学生也是不同的两个聚合，一个聚合以班级为聚合根，引用学生的标识；另一个聚合以学生为聚合根，引用班级的标识，将多对多转换成两个一对多。&lt;/p&gt;
&lt;p&gt;聚合是持久化的一个单位，我们需要保证以聚合为单位的数据一致性。如果聚合太大，那就会导致并发修改困难，多人并发修改同一个聚合里的不同项目，结果就是只有第一个提交的人成功修改，其它人不得不重新刷新聚合才能再次修改。大聚合还会导致性能问题，因为操作实体时会将整个大聚合同时加载进内存。珍爱生命，拒绝大聚合。&lt;/p&gt;
&lt;p&gt;聚合根必须是实体而非值对象，因为它需要整体持久化，所以一定会有标识。而聚合根里的各个元素，既可能是实体，也可能是值对象。例如：一个订单（聚合根）一般会有订单明细（实体）和送货地址（值对象）。这些元素里可以有对聚合根的引用，但是不能相互引用。任何对其它元素的操作都必须通过聚合根来进行。聚合根里的标识是全局的，聚合根里的实体标识是聚合里唯一的本地标识，因为对它的访问都是通过聚合根来操作的。聚合根拥有自己独立的生命周期，其实体的生命周期从属于其所属的聚合，值对象因为只是值而已，并没有生命周期。&lt;/p&gt;
&lt;h4 id=&quot;u5DE5_u5382_uFF08Factory_uFF09&quot;&gt;&lt;a href=&quot;#u5DE5_u5382_uFF08Factory_uFF09&quot; class=&quot;headerlink&quot; title=&quot;工厂（Factory）&quot;&gt;&lt;/a&gt;工厂（Factory）&lt;/h4&gt;&lt;p&gt;工厂是生命周期的开始阶段，它可以用来创建复杂的对象或是一整个聚合。复杂对象的创建是领域层的职责，但它并不属于被创建的对象自身的职责。实体和值对象的工厂不太一样，因为值对象是不可变的，所以需要工厂一次性创建一个完整的值对象出来。而实体工厂则可以选择创建之后再补充一些细节。&lt;/p&gt;
&lt;h4 id=&quot;u8D44_u6E90_u5E93_uFF08Repository_uFF09&quot;&gt;&lt;a href=&quot;#u8D44_u6E90_u5E93_uFF08Repository_uFF09&quot; class=&quot;headerlink&quot; title=&quot;资源库（Repository）&quot;&gt;&lt;/a&gt;资源库（Repository）&lt;/h4&gt;&lt;p&gt;资源库是生命周期的结束，它封装了基础设施以提供查询和持久化聚合的操作。这样能够让我们始终聚焦于模型，而把对象的存储和访问都委托给资源库来完成。以订单和订单明细的聚合为例，因为一定是通过订单这个聚合根来获取订单明细，所以可以有订单的资源库，但是不能有订单明细的资源库。也就是说，只有聚合才拥有资源库。需要注意的是，资源库并不是数据库的封装，而是领域层与基础设施之间的桥梁。DDD关心的是领域内的模型，而并非是数据库的操作。理想的资源库对客户（而非开发者）隐藏了内部的工作细节，委托基础设施层来干那些脏活，到关系型数据库、NOSQL、甚至内存里读取和存储数据。&lt;/p&gt;
&lt;h2 id=&quot;u53C2_u8003_u8D44_u6599&quot;&gt;&lt;a href=&quot;#u53C2_u8003_u8D44_u6599&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/5344973/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《领域驱动设计》&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/25844633/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《实现领域驱动设计》&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/minibooks/domain-driven-design-quickly-new&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《领域驱动设计精简版》&lt;/a&gt; by InfoQ&lt;br&gt;&lt;a href=&quot;http://devlicio.us/blogs/casey/archive/2009/02/09/domain-driven-design-a-step-by-step-guide.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Domain Driven Design: A Step by Step Guide》&lt;/a&gt;系列&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-driven_design&quot;&gt;Domain Driven Design&lt;/a&gt;（DDD）是Eric Evans于2004在其同名著作里提出的概念，它指明了让软件设计满足理想需求模型的方向。但是建模、设计这种事本来就很抽象，读懂这样的大作也是需要消耗不少脑细胞。本文希望能尽量以简单加实例的方式介绍DDD里的一些常见概念。&lt;br&gt;
    
    </summary>
    
      <category term="architecture" scheme="http://qinghua.github.io/categories/architecture/"/>
    
    
      <category term="DDD" scheme="http://qinghua.github.io/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>轻松上手数据库版本管理工具Flyway</title>
    <link href="http://qinghua.github.io/flyway/"/>
    <id>http://qinghua.github.io/flyway/</id>
    <published>2016-11-13T01:48:21.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://flywaydb.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flyway&lt;/a&gt;是一个用Java编写的开源数据库版本管理工具，或者说是数据库结构变更工具，旨在帮助开发和运维更容易地管理数据库演进过程中的各个版本。它的源代码在&lt;a href=&quot;https://github.com/flyway/flyway&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;上。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在开发过程中，数据库是不断向前演进的，可以说是拥有“版本”这个概念。通常当在生产环境部署新代码的时候，会由开发或者DBA来做数据库结构变更的操作。当数据库较小，环境数量少的时候，人工操作比较有把握，直接就人肉来做结构变更了。可要是在数据库复杂、环境数量多（开发、测试、预发布、生产……）的情况下，人工处理这样的事就开始有些令人担心了。如何保证所有环境的数据库结构是一致的？如何知道当前环境的数据库是哪个状态？如何知道生产环境的一个关于数据库的hotfix是否也在预发布环境中执行了？Flyway就是用来解决这样的问题的工具。它的原理非常简单，就是在数据库中创建一张自己用的表，例如schema_version，在里面存放数据库当前的状态，以此来管理数据库的版本。Flyway提供了&lt;a href=&quot;https://flywaydb.org/getstarted/firststeps/commandline&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;命令行&lt;/a&gt;、&lt;a href=&quot;https://flywaydb.org/getstarted/firststeps/api&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API&lt;/a&gt;、&lt;a href=&quot;https://flywaydb.org/getstarted/firststeps/maven&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Maven&lt;/a&gt;、&lt;a href=&quot;https://flywaydb.org/getstarted/firststeps/gradle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gradle&lt;/a&gt;、&lt;a href=&quot;https://flywaydb.org/getstarted/firststeps/ant&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ant&lt;/a&gt;、&lt;a href=&quot;https://flywaydb.org/getstarted/firststeps/sbt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SBT&lt;/a&gt;等各种方式，来让我们更容易将其与自己的项目结合。类似的工具还有&lt;a href=&quot;http://www.liquibase.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Liquibase&lt;/a&gt;、&lt;a href=&quot;http://dbdeploy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dbdeploy&lt;/a&gt;等。&lt;/p&gt;
&lt;p&gt;本文将会用Docker来创建一个mysql的实例，用Maven来创建一个包含数据库的Java项目，并使用Flyway来进行版本管理。&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h2&gt;&lt;p&gt;首先请自行安装Docker、Java、Maven和喜欢的IDE。我用的是&lt;a href=&quot;https://www.jetbrains.com/idea/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Intellij IDEA社区版&lt;/a&gt;。我用Vagrant启动了一台已经安装过Docker的Ubuntu虚拟机，它的IP是&lt;code&gt;192.168.33.88&lt;/code&gt;，可以用以下命令来直接启动mysql容器来提供数据库服务并创建ggg数据库：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; --net=host --name=mysql &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; MYSQL_ROOT_PASSWORD=123456 mysql:5.7.12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it mysql mysql -uroot -p123456 &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;create database ggg;&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来新建一个Maven工程helloFlyway：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn archetype:generate -B \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        -DarchetypeGroupId=org.apache.maven.archetypes \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        -DarchetypeArtifactId=maven-archetype-quickstart \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        -DarchetypeVersion=1.1 \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        -DgroupId=org.ggg.flyway \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        -DartifactId=helloFlyway \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        -Dversion=1.0-SNAPSHOT \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        -Dpackage=org.ggg.flyway&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;helloFlyway/pom.xml&lt;/code&gt;里加入flyway的maven插件和mysql-connector-java的依赖（别忘了根据你自己的数据库来配置jdbc）：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;figcaption&gt;&lt;span&gt;pom.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;...&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.flywaydb&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;flyway-maven-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;4.0.3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;jdbc:mysql://192.168.33.88:3306/ggg&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;user&lt;/span&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;user&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;123456&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;5.1.38&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来创建一个数据库版本1的文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; helloFlyway&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mkdir -p src/main/resources/db/migration/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; src/main/resources/db/migration/V1__Create_person_table.sql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;create table PERSON (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ID int not null,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NAME varchar(100) not null&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;工程创建好并用intellij导入后，应该是这样的：&lt;br&gt;&lt;img src=&quot;/img/flyway-new-project.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7248_u672C_u7BA1_u7406&quot;&gt;&lt;a href=&quot;#u7248_u672C_u7BA1_u7406&quot; class=&quot;headerlink&quot; title=&quot;版本管理&quot;&gt;&lt;/a&gt;版本管理&lt;/h2&gt;&lt;p&gt;使用以下命令来运行flyway：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn flyway:migrate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现&lt;strong&gt;BUILD SUCCESS&lt;/strong&gt;就说明数据库结构变更已经完成了。我们可以登录到数据库看一看：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it mysql mysql -uroot -p123456&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行以下sql就可以看到flyway确实已经起作用了：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USE&lt;/span&gt; ggg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLES&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; schema_version;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而表schema_version里面也有了一条记录。接下来再创建一个数据库版本2的文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; src/main/resources/db/migration/V2__Add_people.sql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;insert into PERSON (ID, NAME) values (1, &lt;span class=&quot;string&quot;&gt;&#39;Axel&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;insert into PERSON (ID, NAME) values (2, &lt;span class=&quot;string&quot;&gt;&#39;Mr. Foo&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;insert into PERSON (ID, NAME) values (3, &lt;span class=&quot;string&quot;&gt;&#39;Ms. Bar&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再次用同一条命令来运行flyway：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn flyway:migrate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;就会看到日志里显示&lt;strong&gt;Current version of schema `ggg`: 1&lt;/strong&gt;和&lt;strong&gt;Migrating schema `ggg` to version 2 - Add people&lt;/strong&gt;。如果我们重复运行&lt;code&gt;mvn flyway:migrate&lt;/code&gt;，就会看到&lt;strong&gt;Schema `ggg` is up to date. No migration necessary&lt;/strong&gt;。现在查看一下两张表：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; PERSON;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; schema_version;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;PERSON表里已经有了&lt;code&gt;V2__Add_people.sql&lt;/code&gt;里的三条记录，而schema_version表里，就可以看到现在的版本为2。通过这样的方式，就可以管理数据库的版本了。&lt;/p&gt;
&lt;h2 id=&quot;u5386_u53F2_u6570_u636E_u5E93&quot;&gt;&lt;a href=&quot;#u5386_u53F2_u6570_u636E_u5E93&quot; class=&quot;headerlink&quot; title=&quot;历史数据库&quot;&gt;&lt;/a&gt;历史数据库&lt;/h2&gt;&lt;p&gt;如果数据库里已经有历史数据了，那就会稍微麻烦一点儿。我们来试试看，首先改造一下ggg数据库：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; PERSON &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; STUDENT;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; schema_version;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样一来，数据库的版本便被清空，PERSON表也变成了STUDENT表。如果直接运行&lt;code&gt;mvn flyway:migrate&lt;/code&gt;会报错：&lt;strong&gt;org.flywaydb.core.api.FlywayException: Found non-empty schema `ggg` without metadata table&lt;/strong&gt;。这时候需要用到另一个命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn flyway:baseline&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的&lt;code&gt;baseline&lt;/code&gt;命令会以现在的数据库结构为基础，创建一张schema_version表，标明现在的版本是1。接着运行&lt;code&gt;mvn flyway:migrate&lt;/code&gt;还会报错：&lt;strong&gt;Migration of schema &lt;code&gt;ggg&lt;/code&gt; to version 2 - Add people failed&lt;/strong&gt;。这是因为数据库现在是版本1，所以会忽略&lt;code&gt;V1__Create_person_table.sql&lt;/code&gt;而直接执行&lt;code&gt;V2__Add_people.sql&lt;/code&gt;，而&lt;code&gt;V2__Add_people.sql&lt;/code&gt;依赖于&lt;code&gt;V1__Create_person_table.sql&lt;/code&gt;里创建的PERSON表，所以失败了。解决的方法也很简单，改变两个sql文件的版本即可：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mv src/main/resources/db/migration/V1__Create_person_table.sql src/main/resources/db/migration/V1_1__Create_person_table.sql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mv src/main/resources/db/migration/V2__Add_people.sql src/main/resources/db/migration/V1_2__Add_people.sql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn flyway:migrate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Flyway的命名规范如下：以&lt;code&gt;V&lt;/code&gt;开头，&lt;code&gt;.sql&lt;/code&gt;结尾，版本号可以使用&lt;code&gt;.&lt;/code&gt;或者&lt;code&gt;_&lt;/code&gt;，版本号和描述之间用两个下划线&lt;code&gt;__&lt;/code&gt;分开。要是执行成功，但是却看不到PERSON表，那很可能是因为schema_version表里的版本已经是一个&lt;strong&gt;错误的&lt;/strong&gt;版本2了，运行repair之后再重新migrate即可：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn flyway:&lt;span class=&quot;keyword&quot;&gt;repair&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn flyway:migrate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5176_u5B83&quot;&gt;&lt;a href=&quot;#u5176_u5B83&quot; class=&quot;headerlink&quot; title=&quot;其它&quot;&gt;&lt;/a&gt;其它&lt;/h2&gt;&lt;p&gt;Flyway认为&lt;a href=&quot;https://flywaydb.org/documentation/faq.html#downgrade&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;没有必要支持回滚&lt;/a&gt;。可以通过&lt;code&gt;mvn flyway:info&lt;/code&gt;命令来查看数据库的版本和和需要执行的sql脚本。通过&lt;code&gt;mvn flyway:clean&lt;/code&gt;来清空数据库，这条命令对于测试很方便，但是&lt;strong&gt;千万要小心生产环境！！！&lt;/strong&gt;此外，还有一个较常用的命令：&lt;code&gt;mvn flyway:validate&lt;/code&gt;可以验证是否所有的sql都已经在数据库上运行完毕了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://flywaydb.org/&quot;&gt;Flyway&lt;/a&gt;是一个用Java编写的开源数据库版本管理工具，或者说是数据库结构变更工具，旨在帮助开发和运维更容易地管理数据库演进过程中的各个版本。它的源代码在&lt;a href=&quot;https://github.com/flyway/flyway&quot;&gt;github&lt;/a&gt;上。&lt;br&gt;
    
    </summary>
    
      <category term="db" scheme="http://qinghua.github.io/categories/db/"/>
    
    
      <category term="flyway" scheme="http://qinghua.github.io/tags/flyway/"/>
    
      <category term="db" scheme="http://qinghua.github.io/tags/db/"/>
    
      <category term="db migration" scheme="http://qinghua.github.io/tags/db-migration/"/>
    
  </entry>
  
  <entry>
    <title>程序员常见的编码和转义</title>
    <link href="http://qinghua.github.io/encoding-and-escaping/"/>
    <id>http://qinghua.github.io/encoding-and-escaping/</id>
    <published>2016-11-06T01:53:09.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;作为一名天朝程序员，除了看惯了乱码之外，在日常的工作中经常会碰到编码和转义。如果能掌握这块领域的一些常识，就可以在开发和支持时游刃有余。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7F16_u7801_uFF08encoding_uFF09&quot;&gt;&lt;a href=&quot;#u7F16_u7801_uFF08encoding_uFF09&quot; class=&quot;headerlink&quot; title=&quot;编码（encoding）&quot;&gt;&lt;/a&gt;编码（encoding）&lt;/h2&gt;&lt;h3 id=&quot;ASCII__26amp_3B_EASCII__26amp_3B_ISO-8859-1&quot;&gt;&lt;a href=&quot;#ASCII__26amp_3B_EASCII__26amp_3B_ISO-8859-1&quot; class=&quot;headerlink&quot; title=&quot;ASCII &amp;amp; EASCII &amp;amp; ISO-8859-1&quot;&gt;&lt;/a&gt;ASCII &amp;amp; EASCII &amp;amp; ISO-8859-1&lt;/h3&gt;&lt;p&gt;要聊编码，就需要从ASCII开始。众所周知，计算机的世界里，数据都是0和1这样的二进制。用它们的组合来表示字母、数字和常用符号的最通用编码标准就是&lt;a href=&quot;https://zh.wikipedia.org/wiki/ASCII&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ASCII&lt;/a&gt;（American Standard Code for Information Interchange，美国信息交换标准代码）。完整的ASCII编码可以从&lt;a href=&quot;http://www.ascii-code.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;找到。Mac或Linux可以用以下命令来查看所有的ASCII字符：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;man ascii&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;00000000&lt;/code&gt;到&lt;code&gt;00011111&lt;/code&gt;的前32位字符和&lt;code&gt;01111111&lt;/code&gt;是控制字符，&lt;code&gt;00100000&lt;/code&gt;到&lt;code&gt;01111110&lt;/code&gt;之间的都是可显示字符，一个字符占8位（bit），第1位总是&lt;code&gt;0&lt;/code&gt;，这样能够支持2的7次方即128个符号编码。虽然ASCII编码能搞定美国大多数的应用场景，但是对于其它发达国家的语言来说就无能为力了。于是在其上发展出了&lt;a href=&quot;https://zh.wikipedia.org/wiki/EASCII&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EASCII&lt;/a&gt;（extended ASCII），通过扩展最前面的一位为&lt;code&gt;1&lt;/code&gt;来提供多达256个符号编码的支持。可是这样又带来了两个问题：一来即使是256个编码，对于世界范围尤其是像中日这样的汉字国家来说还是远远不够；二来各个国家规定的EASCII编码都不一样，比如对于希腊来说EASCII表示的就是希腊字母，而对于法国来说可能就是某个带有注音符号的字母。这样的背景下，ISO（International Standard Organization，国际标准化组织）设计了&lt;a href=&quot;https://zh.wikipedia.org/wiki/ISO/IEC_8859&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ISO/IEC 8859&lt;/a&gt;字符集（不包含ASCII），力图一统拉丁语系。其实现的编码表&lt;a href=&quot;https://zh.wikipedia.org/wiki/ISO_8859-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ISO-8859-1&lt;/a&gt;（包含ASCII）应用得非常广泛。&lt;/p&gt;
&lt;h3 id=&quot;GB2312__26amp_3B_GBK__26amp_3B_GB18030__26amp_3B_ANSI&quot;&gt;&lt;a href=&quot;#GB2312__26amp_3B_GBK__26amp_3B_GB18030__26amp_3B_ANSI&quot; class=&quot;headerlink&quot; title=&quot;GB2312 &amp;amp; GBK &amp;amp; GB18030 &amp;amp; ANSI&quot;&gt;&lt;/a&gt;GB2312 &amp;amp; GBK &amp;amp; GB18030 &amp;amp; ANSI&lt;/h3&gt;&lt;p&gt;本节介绍的是解决EASCII带来的第一个问题的方法。对于中文来说，8位的编码远远不够，于是就会想到用两个8位来表示一个汉字。为了与ASCII码兼容，如果碰到0~127的字符，需要认定为ASCII编码字符。只有当两个大于127的字符连在一起时，才表示一个汉字。前一个字符称为高字节，后一个称为低字节，这样就诞生了&lt;a href=&quot;https://zh.wikipedia.org/wiki/GB_2312&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GB2312&lt;/a&gt;编码。每一个双字节字符就称为一个全角字符，而单字节字符就称为半角字符。再后来，发现编码还是不够用，干脆就允许低字节也使用0~127的字符，反正用高字节就能判断是否是汉字，这样就诞生了&lt;a href=&quot;https://zh.wikipedia.org/wiki/GBK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GBK&lt;/a&gt;（K表示“扩展”）编码。GBK里甚至还包含了日语的假名和俄语字母。GB2312和GBK这两种编码都是单字节（表示ASCII）和双字节（表示汉字）混合使用的编码。我国最新的汉字编码国标是&lt;a href=&quot;https://zh.wikipedia.org/wiki/GB_18030&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GB18030&lt;/a&gt;，这是一种类似下文UTF-8那样的变长编码。&lt;/p&gt;
&lt;p&gt;虽然中国解决了中文问题，但是世界各国都搞出了一套自己的编码系统，还是不能轻易相互转化。例如台湾用BIG5，日本用Shift-JIS。要想解决EASCII的第二个问题，还需要另寻他途。Window系统的记事本里，默认编码为ANSI，即根据系统语言的不同，而选用不同的编码。&lt;/p&gt;
&lt;h3 id=&quot;Unicode__26amp_3B_UTF-8&quot;&gt;&lt;a href=&quot;#Unicode__26amp_3B_UTF-8&quot; class=&quot;headerlink&quot; title=&quot;Unicode &amp;amp; UTF-8&quot;&gt;&lt;/a&gt;Unicode &amp;amp; UTF-8&lt;/h3&gt;&lt;p&gt;本节说的是解决EASCII带来的第二个问题的方法。ISO带来了一个囊括全球所有文字的编码：Unicode。它最初规定了所有的字符（包括ASCII）都使用两个字节来表示，这个版本称为&lt;a href=&quot;https://zh.wikipedia.org/wiki/UCS-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UCS-2&lt;/a&gt;（Universal Multiple-Octet Coded Character Set）或UTF-16。对于ASCII码来说，在它的前面加上&lt;code&gt;00000000&lt;/code&gt;作为高字节即可。这样的好处是，由于高低字节可以同时包含0~256，能表示的字符数量就更多了，理论上可以达到256×256=65536个。即使如此，也只能说是基本上够用，要囊括所有文明的文字，还需要更多的字节。目前最多支持4个字节代表一个字符，称为&lt;a href=&quot;https://zh.wikipedia.org/wiki/UCS-4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UCS-4&lt;/a&gt;或UTF-32，它的最高位规定必须为0，可以表示65536×65536÷2=2147483648个字符（这样是不是统一银河系也够用了）。与此同时，它包含的字符集也在不断的增加，甚至收录了&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%B9%AA%E6%96%87%E5%AD%97&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;emoji&lt;/a&gt;（绘文字），大大增加了文字符号的表现力，看看😂🐔📸🎸🎁🌀🌤🕘，是不是增加了很多乐趣呢。&lt;/p&gt;
&lt;p&gt;Unicode就像是“书同文、车同轨”，极大地方便了各国的交流。可是它也有自身的缺点。一个问题是它与各国自身的标准不兼容（例如GB18030），但是这个问题貌似无解，因为各国的标准本来就是排斥的。另一个问题是随着Unicode标准的发展，出现了4个字节的字符。但是当设计Java的时候，是&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#unicode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;将unicode当做2个字节的定长字符来看待&lt;/a&gt;的。这样就导致Java里需要用两个char来表示一个4字节的字符，如emoji（😂=\uD83D\uDE02）。&lt;a href=&quot;http://www.oracle.com/technetwork/articles/javase/index-zh-cn-138452.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java平台中的增补字符&lt;/a&gt;就是Oracle官方写来专门解决长字节Unicode的。打开链接就会看到一堆的乱码，说明编码问题还真是普遍存在并难以解决的啊。好在还有&lt;a href=&quot;http://www.oracle.com/technetwork/articles/javase/index-142761.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;英文版&lt;/a&gt;可供阅读。还有一个问题就是对于英文来说，用高字节为固定值的两个字节来保存数据，就会使原来一个字节的数据量翻倍，对于传输和存储来说都是较大负担。&lt;/p&gt;
&lt;p&gt;解决上面这个问题的办法就是UTF-8。它是一种变长的编码方式。如果是ASCII码的字符，就用一个字节表示。否则就在前面增加一个高位字节（但是在8个bit之内）。这回英文符号是满意了，但是中文字符可能就会因为增加的高位字节从Unicode的占用两个字节变成UTF-8的占用三个字节。没有两全其美的事啊！这也是为什么GB2312和GBK今天仍被广泛使用的原因之一，我们也不想增加传输和存储的负担呀。&lt;/p&gt;
&lt;p&gt;如果要打开一个文本文件，首先需要知道它的编码。位于文件头的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BOM&lt;/a&gt;（Byte order mark，字节顺序标记）可以用来标记文件的编码类型。它分为&lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness#Big-endian&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BE&lt;/a&gt;（big-endian，大端序）和&lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness#Little-endian&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LE&lt;/a&gt;（little-endian，小端序），指的是高字节的位置在前还是在后。但是在类Unix系统中，它很可能因为无法被程序识别而带来一系列问题。所以一般的纯文本文件还是建议保存为不带BOM形式的编码。Window系统的记事本里，如果输入&lt;code&gt;联通&lt;/code&gt;保存，便会将其保存为无BOM的GB格式，再次用记事本打开此文件时，因为没有BOM信息，记事本就需要自己推断这个文件的编码是什么。显然window是上这个推断很有问题，误认为是UTF-8格式（可以从文件菜单里的“另存为”看出来）。而mac上默认的文本编辑表现还是不错的。如果用word来打开它，便可以在一系列的编码中，自行寻找合适的编码来打开。如果用记事本另存为UTF-8格式，便不会有问题。Sublime Text可以支持用许多不同的编码来打开或是保存，光是UTF系列的就不少，如下图：&lt;br&gt;&lt;img src=&quot;/img/sublime-text-encoding.png&quot; alt=&quot;sublime-text-encoding&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于Java来说，内部的String编码默认为UTF-16，但如果由于用不着而觉得浪费内存的话，可以在JVM打开&lt;code&gt;-XX:+UseCompressedStrings&lt;/code&gt;，就会变成ISO-8859-1了。Intellij IDEA的Preference里，有两个关于encoding的选项：&lt;br&gt;&lt;img src=&quot;/img/intellij-idea-encoding.jpg&quot; alt=&quot;Intellij-IDEA-encoding&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以通过Project Encoding来指定项目的JVM里String的内部编码，默认为UTF-8。可以通过下面这两个表达式来看到，它们的编码是完全一致的：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;懒&quot;&lt;/span&gt;.getBytes()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;懒&quot;&lt;/span&gt;.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Java里可以用Integer.toHexString来看到汉字的unicode编码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;\\u&quot;&lt;/span&gt; + Integer.toHexString(&lt;span class=&quot;string&quot;&gt;&#39;懒&#39;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;\u61d2&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过下面的语句，可以将字节数组byte[]还原为原先的字符串。如果指定错了编码，就会看到乱码产生啦：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(&lt;span class=&quot;string&quot;&gt;&quot;懒&quot;&lt;/span&gt;.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;));  &lt;span class=&quot;comment&quot;&gt;// 正常&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(&lt;span class=&quot;string&quot;&gt;&quot;懒&quot;&lt;/span&gt;.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&quot;UTF-16&quot;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// 乱码:�&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(&lt;span class=&quot;string&quot;&gt;&quot;懒&quot;&lt;/span&gt;.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;UTF-16&quot;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// 乱码:��a�&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;读文件、流也是一样的道理，知道了它们的编码才能正确地读取，否则只好像微软的记事本那样去猜啦。Java还提供了一个小工具&lt;code&gt;native2ascii&lt;/code&gt;，可以把本地编码的文件转换为各种格式：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; 懒程序员 &amp;gt; ggg.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;native2ascii -encoding UTF-8 ggg.txt out.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat out.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;native2ascii -reverse -encoding UTF-8 out.txt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;base64__26amp_3B_UTF-7&quot;&gt;&lt;a href=&quot;#base64__26amp_3B_UTF-7&quot; class=&quot;headerlink&quot; title=&quot;base64 &amp;amp; UTF-7&quot;&gt;&lt;/a&gt;base64 &amp;amp; UTF-7&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/Base64&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Base64&lt;/a&gt;是一种在网络上传递信息时常见的编码。它相当于是一张64条记录的映射表，键从&lt;code&gt;000000&lt;/code&gt;到&lt;code&gt;111111&lt;/code&gt;，值就是64个不同的字符。编码时，如果原字符的bit数正好能被6整除，那就查表得到每6个bit所对应的值，合起来就是base64编码的结果。如果不能被6整除，那就在末尾用0补足。每补两个0，就在最终结果的后面加一个&lt;code&gt;=&lt;/code&gt;号。所以如果一段数据以等号结尾，那十有八九就是base64编码。Mac或Linux可以用以下命令来进行base64编码及解码：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; -n A | base64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; -n AB | base64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; -n ABC | base64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; -n QQ== | base64 --decode&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; -n QUI= | base64 --decode&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; -n QUJD | base64 --decode&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;JavaScript可以用以下命令来进行base64编码及解码：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.btoa(&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.atob(&lt;span class=&quot;string&quot;&gt;&quot;QQ==&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/UTF-7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UTF-7&lt;/a&gt;理论上也属于一种base64编码，只不过它的64行映射表不一样罢了。过去的SMTP协议仅能接受7个bit（ASCII）的字符，Unicode无法直接传输。所以通过UTF-7编码的方式，将Unicode字符转换为7个bit以内的字符。UTF-7本身并不是Unicode的标准，现在也已经由于邮件和传输都支持UTF-8而退出历史舞台了。&lt;/p&gt;
&lt;p&gt;写到这里感觉得收一下了，不然MD5、SHA什么的都要出来了。对散列、加密有兴趣的童鞋们可以参考我以前写的另一篇文章&lt;a href=&quot;http://qinghua.github.io/certificate/&quot;&gt;《证书的那些事儿》&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;u8F6C_u4E49_uFF08escaping_uFF09&quot;&gt;&lt;a href=&quot;#u8F6C_u4E49_uFF08escaping_uFF09&quot; class=&quot;headerlink&quot; title=&quot;转义（escaping）&quot;&gt;&lt;/a&gt;转义（escaping）&lt;/h2&gt;&lt;h3 id=&quot;html__26amp_3B_url&quot;&gt;&lt;a href=&quot;#html__26amp_3B_url&quot; class=&quot;headerlink&quot; title=&quot;html &amp;amp; url&quot;&gt;&lt;/a&gt;html &amp;amp; url&lt;/h3&gt;&lt;p&gt;下面说说转义，不少人都把它与编码混而一谈，以至于它也算作编码的一部分了。从最简单的html聊起吧。在html里，如果只写上一些文本，那当我们用浏览器打开这个html时，就会完完整整地显示这些文本的内容。我们也知道，html里无论输入多少个空格，只会显示一个空格。因为在html里，把空格当成了特殊字符。在这种情况下，如果想要在html里放上空格，就需要对空格编码，也就是大家熟知的&lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;。其中nbsp大名唤作Non-Breaking Space（&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E4%B8%8D%E6%8D%A2%E8%A1%8C%E7%A9%BA%E6%A0%BC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不换行空格&lt;/a&gt;），除了名字以外，它也有自己的编码：&lt;code&gt;&amp;amp;#160;&lt;/code&gt;。除了空格，常见的还有代表标签的&lt;code&gt;&amp;lt;&lt;/code&gt;和&lt;code&gt;&amp;gt;&lt;/code&gt;。完整的html转义可以从&lt;a href=&quot;http://www.ascii.cl/htmlcodes.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;找到。奇怪的是这么常用的转义，js居然没有原生的函数支持。如果要转义&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;，可以使用下面这条语句来得到&lt;code&gt;&amp;amp;lt;div&amp;amp;gt;&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;htmlEncode&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;html&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;).appendChild(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createTextNode(html)).parentNode.innerHTML;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;htmlEncode(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div&amp;gt;&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解码的话，这样做：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;htmlDecode&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;html&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a.innerHTML = html;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.textContent;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;htmlDecode(&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;lt;div&amp;amp;gt;&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果使用jQuery，思路一致，但是代码可以稍微短一点：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;htmlEncode&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div/&amp;gt;&#39;&lt;/span&gt;).text(value).html();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;htmlEncode(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div&amp;gt;&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;htmlDecode&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div/&amp;gt;&#39;&lt;/span&gt;).html(value).text();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;htmlDecode(&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;lt;div&amp;amp;gt;&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可惜的是上面的函数并不能解决空格和&lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;之间的转换。想要个万能的？也许只好使用replace一个个地慢慢替换了。&lt;/p&gt;
&lt;p&gt;想要请求一个html，需要先输入一个url。这里就涉及到了url转义。因为url里可能会有类似&lt;code&gt;?name=ggg&lt;/code&gt;这样的参数，所以起码就需要对&lt;code&gt;?&lt;/code&gt;和&lt;code&gt;=&lt;/code&gt;进行转义。转义之后分别为&lt;code&gt;%3F&lt;/code&gt;和&lt;code&gt;%3D&lt;/code&gt;，这与ASCII码是相对应的。完整的url编码可以从&lt;a href=&quot;http://www.w3school.com.cn/tags/html_ref_urlencode.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;找到。这回js终于有原生的函数支持了：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;encodeURI&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http://qinghua.github.io?name=g gg&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http://qinghua.github.io?name=g gg&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;encodeURI&lt;/code&gt;函数的网址，不会去碰&lt;code&gt;http://&lt;/code&gt;，所以编码后还是一个合法的网址。而&lt;code&gt;encodeURIComponent&lt;/code&gt;会将一切都进行编码，网址也就不是网址了。不过它很适合将网址作为参数来使用。解码的话，这样做：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;decodeURI&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http://qinghua.github.io?name=g%20gg&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http%3A%2F%2Fqinghua.github.io%3Fname%3Dg%20gg&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在Java里可以用以下语句来完成url的转义：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;URLEncoder.encode(&lt;span class=&quot;string&quot;&gt;&quot;懒&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;URLDecoder.decode(&lt;span class=&quot;string&quot;&gt;&quot;%E6%87%92&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;XML__26amp_3B_YAML__26amp_3B_JSON__26amp_3B_CSV&quot;&gt;&lt;a href=&quot;#XML__26amp_3B_YAML__26amp_3B_JSON__26amp_3B_CSV&quot; class=&quot;headerlink&quot; title=&quot;XML &amp;amp; YAML &amp;amp; JSON &amp;amp; CSV&quot;&gt;&lt;/a&gt;XML &amp;amp; YAML &amp;amp; JSON &amp;amp; CSV&lt;/h3&gt;&lt;p&gt;在这些数据格式中，对xml的转义基本上跟html差不多，这里就不再赘述了。对于yaml来说，规则如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在一个单引号标注的字符串中，一个单引号需要转义成两个单引号&lt;/li&gt;
&lt;li&gt;在一个双引号标注的字符串中，大部分符号都需要用反斜杠来转义&lt;/li&gt;
&lt;li&gt;如果字符串中有控制字符（如&lt;code&gt;\0&lt;/code&gt;、&lt;code&gt;\n&lt;/code&gt;等），需要用双引号来标注&lt;/li&gt;
&lt;li&gt;如果字符串看起来像下面的样子，需要用引号（无所谓哪种）来标注：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;true&lt;/code&gt;或&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt;或&lt;code&gt;~&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;看起来像数字，如&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;14.9&lt;/code&gt;，&lt;code&gt;12e7&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;看起来像日期，如&lt;code&gt;2014-12-31&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完整的规则可以参考&lt;a href=&quot;http://www.yaml.org/spec/1.2/spec.html#id2776092&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yaml规范&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;对与json来说，需要转义的字符如下图：&lt;br&gt;&lt;img src=&quot;http://www.json.org/string.gif&quot; alt=&quot;json string escape&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于csv来说，转义的规则只有两条：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果值里有逗号、换行或是双引号，需要用双引号来标注&lt;/li&gt;
&lt;li&gt;如果值里有双引号，需要把它转义成两个双引号&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Java__26amp_3B_-NET__26amp_3B_JS__26amp_3B_SQL&quot;&gt;&lt;a href=&quot;#Java__26amp_3B_-NET__26amp_3B_JS__26amp_3B_SQL&quot; class=&quot;headerlink&quot; title=&quot;Java &amp;amp; .NET &amp;amp; JS &amp;amp; SQL&quot;&gt;&lt;/a&gt;Java &amp;amp; .NET &amp;amp; JS &amp;amp; SQL&lt;/h3&gt;&lt;p&gt;对于大部分的编程语言，例如Java、.NET还有JavaScript，甚至C、GO、Ruby等等来说，通常的转义都是通过反斜杠&lt;code&gt;\&lt;/code&gt;来实现的。一般都包括如下几项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;退格: &lt;code&gt;\b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;换行: &lt;code&gt;\n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;制表符: &lt;code&gt;\t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;回车: &lt;code&gt;\r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;换页: &lt;code&gt;\f&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;双引号: &lt;code&gt;\&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;反斜杠: &lt;code&gt;\\&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过C和C++支持的16进制&lt;code&gt;\x&lt;/code&gt;，在java里不被支持。所以&lt;code&gt;\x61\xd2&lt;/code&gt;的这个“懒”字，在java中可以通以下这两个表达式来得到真实的字符：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;\u61d2&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] &amp;#123;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;0x61&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;0xd2&lt;/span&gt;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;unicode&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;SQL有些不一样。它从语法层面支持模糊查询，所以即使在完全匹配中使用了&lt;code&gt;%&lt;/code&gt;也不需要转义。但是代表字符串的单引号&lt;code&gt;&amp;#39;&lt;/code&gt;还是不得不转义成两个单引号&lt;code&gt;&amp;#39;&amp;#39;&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;u540E_u8BB0&quot;&gt;&lt;a href=&quot;#u540E_u8BB0&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h2&gt;&lt;p&gt;以上是关于编码和转义的一些常识，&lt;a href=&quot;https://www.zhihu.com/question/23374078/answer/69732605#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎上转的这篇回答&lt;/a&gt;，系统地介绍了从ASCII到UTF-8，写得非常赞。平时需要编码和转义的时候，可以使用&lt;a href=&quot;http://www.freeformatter.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个网站&lt;/a&gt;在线转换，也挺方便的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作为一名天朝程序员，除了看惯了乱码之外，在日常的工作中经常会碰到编码和转义。如果能掌握这块领域的一些常识，就可以在开发和支持时游刃有余。&lt;br&gt;
    
    </summary>
    
      <category term="development" scheme="http://qinghua.github.io/categories/development/"/>
    
    
      <category term="encoding" scheme="http://qinghua.github.io/tags/encoding/"/>
    
  </entry>
  
  <entry>
    <title>人际风格与有效沟通实战</title>
    <link href="http://qinghua.github.io/effective-communication/"/>
    <id>http://qinghua.github.io/effective-communication/</id>
    <published>2016-10-16T05:17:58.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;程序猿和工程狮们（还有形形色色的其他角色）的日常工作中，一定会有需要跟别人沟通的时候。因为沟通的问题认为别人sb或者被人当成sb的惨剧应该不少吧？如果有共鸣，可以读一读本文。不少企业都会请有资质的专家，为员工做类似的培训。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5B9A_u4E49&quot;&gt;&lt;a href=&quot;#u5B9A_u4E49&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;一般来说，一开始都需要给有效沟通下一个定义。干巴巴地说，就是这样：双方或几方针对共同的话题，发出和收集有意义的信息，从而达成一致的行动或共同的认识。我的观点是：沟通就是为了达成共识而采取的行动。官方定义以文为主，行动关注于信息；而我的定义能文能武（当然并不是推荐直接上暴力哈），只要达成共识即可。&lt;/p&gt;
&lt;p&gt;沟通是有一个模型的：&lt;br&gt;&lt;img src=&quot;/img/communication-model.png&quot; alt=&quot;沟通模型&quot;&gt;&lt;/p&gt;
&lt;p&gt;信息的发送者，根据自己的理解，将信息编码成介质（文字、语音、动作等），通过传播媒介（面对面、邮件、微信）发送出去，经过对介质的解码，到了接收者的大脑里。为什么提倡面对面的沟通呢？因为沟通模型里还有一个非常重要的一环：反馈。通过面对面的沟通，可以很容易感知对方的动作、表情、情绪，从而判断对方是否正确地理解了自己想要表达的信息。而这样的反馈，是电子邮件、电话等所难以做到的。&lt;/p&gt;
&lt;h2 id=&quot;u884C_u4E3A_u98CE_u683C&quot;&gt;&lt;a href=&quot;#u884C_u4E3A_u98CE_u683C&quot; class=&quot;headerlink&quot; title=&quot;行为风格&quot;&gt;&lt;/a&gt;行为风格&lt;/h2&gt;&lt;p&gt;人与人之间是很不一样的。有些话可能某些人就很受用，还有一些人无动于衷，说不定还会令其他人反感。如果能将人类行为模式分类，见人说人话，见鬼说鬼话，想必对有效沟通来说是很有用的。古希腊的希波克拉底最早以火、风、水、土为基础，分别映射到易怒、乐观、冷静和忧郁的情感上，定义了人类具有的四种基本性情。之后的许多行为理论皆以此为基础，但是主要用于专业的精神层面研究。1928年，美国心理学家&lt;a href=&quot;https://en.wikipedia.org/wiki/William_Moulton_Marston&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;马斯顿（William Moulton Marston）&lt;/a&gt;出版了《常人的情绪》（Emotions of Normal People），为普通人引入了名为&lt;a href=&quot;https://en.wikipedia.org/wiki/DISC_assessment&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DISC&lt;/a&gt;的性格测验方法，DISC分别表示支配（Dominance）、影响（Influence）、稳健（Steadiness）与服从（Compliance），由这4种基本因子，可以构成每个人的不同性格。DISC现在是全球广泛采用的性格测评工具之一，许多企业会用之来选择、激励与管理人才。&lt;/p&gt;
&lt;p&gt;用控制力的强弱与以人或事为主，便可以画出四个象限：&lt;br&gt;&lt;img src=&quot;/img/disc.png&quot; alt=&quot;DISC&quot;&gt;&lt;/p&gt;
&lt;p&gt;用动物来表示不同的性格，有趣并且容易记忆。它们是老虎（D）、孔雀（I）、考拉（S）、猫头鹰（C）和变色龙（啥性格都能变）。老虎是产生故事的人，孔雀是讲故事的人，考拉是听故事的人，猫头鹰是分析故事的人。需要注意的是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每个人都有DISC，只是占比不同&lt;/li&gt;
&lt;li&gt;没有理想的沟通风格，随心所欲级别的变色龙除外&lt;/li&gt;
&lt;li&gt;这些性格都没有好坏、对错、是非之分，不要给人贴标签&lt;/li&gt;
&lt;li&gt;不要对考拉太狠了，物极必反&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;性格上面的互补很有用。一只猫头鹰完不成的事，可能另一只猫头鹰也完不成，但是孔雀可能可以轻易完成。团队、婚姻都是如此。西游记里的主角们，其实就代表了这不同的四种性格。猜猜看，谁是那种性格？对了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;悟空：老虎，主动，果敢（妖精！吃俺老孙一棒）&lt;/li&gt;
&lt;li&gt;唐僧：猫头鹰，以理服人，尽量客观（贫僧乃东土大唐而来）&lt;/li&gt;
&lt;li&gt;八戒：孔雀，总是他去化缘，自来熟（女菩萨，也携带我和尚洗洗）&lt;/li&gt;
&lt;li&gt;沙僧：考拉，任劳任怨，没有主见（大师兄，师傅被妖怪抓走了）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对别人的性格有所了解，沟通起来才能更加有效，事半功倍。&lt;/p&gt;
&lt;h2 id=&quot;u6D4B_u6D4B_u81EA_u5DF1&quot;&gt;&lt;a href=&quot;#u6D4B_u6D4B_u81EA_u5DF1&quot; class=&quot;headerlink&quot; title=&quot;测测自己&quot;&gt;&lt;/a&gt;测测自己&lt;/h2&gt;&lt;p&gt;评完别人，可以用下面的方法来简单测评一下自己。在A表和B表的每一组句子中，圈选出一句最像自己的叙述，然后在下面记录选择的数量：&lt;/p&gt;
&lt;p&gt;A表&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我做决定通常很迅速 vs 我喜欢从容做决定&lt;/li&gt;
&lt;li&gt;我倾向于说话快速，带着感情丰富的辞藻 vs 我倾向慢条斯理说话，较少用动人心旋话语&lt;/li&gt;
&lt;li&gt;坐着没事干，会令我感到难受 vs 我很享受安静、无所事事的时光&lt;/li&gt;
&lt;li&gt;我认为自己生活型态很活跃 vs 我认为自己生活型态很低调&lt;/li&gt;
&lt;li&gt;同时身兼数职，让我感到精神焕发 vs 我比较喜欢按部就班，一次做一件事&lt;/li&gt;
&lt;li&gt;我很容易对步调慢的人失去耐心 vs 我不喜欢被催赶&lt;/li&gt;
&lt;li&gt;我会很快地告诉别人自己的想法和感受 vs 我比较保留自己的想法与感受&lt;/li&gt;
&lt;li&gt;我喜欢碰运气，尝试新鲜、不同的事物 vs 我不喜欢碰运气，喜欢用熟悉地方法做事&lt;/li&gt;
&lt;li&gt;在社交场合，我倾向于向别人自我介绍 vs 在社交场合，我会等别人来介绍我&lt;/li&gt;
&lt;li&gt;别人说话的时候，我很难去倾听 vs 别人说话的时候，我很很仔细的听&lt;/li&gt;
&lt;li&gt;我喜欢掌控 vs 我比较喜欢遵从指示，尽力支持&lt;/li&gt;
&lt;li&gt;我的反应倾向于迅速而随性 vs 我的反应比较趋向缓慢而特意安排&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A左（F - 快） &lt;strong&gt;&lt;strong&gt;__&lt;/strong&gt;&lt;/strong&gt; vs A右（S - 慢） &lt;strong&gt;&lt;strong&gt;__&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;B表&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我对生活持严肃态度 vs 我对生活持玩乐态度&lt;/li&gt;
&lt;li&gt;我倾向于保守自己的感觉 vs 我倾向于对别人分享自己的感觉&lt;/li&gt;
&lt;li&gt;我喜欢谈论、听取事实与数据 vs 我喜欢述说与聆听有关人物的故事&lt;/li&gt;
&lt;li&gt;我倾向于根据事实、目标与证据做决定 vs 我倾向于根据感觉、经验或人际关系做决定&lt;/li&gt;
&lt;li&gt;我对闲聊比较不感兴趣 vs 我比较有兴趣闲聊&lt;/li&gt;
&lt;li&gt;我对交往的对象有所节制 vs 我愿意发展新的人际关系，并深入了解他们&lt;/li&gt;
&lt;li&gt;一般人可能会认为我很难被了解 vs 一般人可能会认为我很容易被了解&lt;/li&gt;
&lt;li&gt;我比较喜欢独自工作 vs 我比较喜欢与别人并透过别人工作&lt;/li&gt;
&lt;li&gt;我会讨论当今时事及手中进行的工作 vs 我喜欢谈人物、故事及奇文轶事&lt;/li&gt;
&lt;li&gt;我自认是一个比较拘谨的人 vs 我自认是一个比较轻松自在的人&lt;/li&gt;
&lt;li&gt;别人把我看成一个重思考的人 vs 别人把我看成一个重感觉的人&lt;/li&gt;
&lt;li&gt;完成一件事，是我感觉最棒的时候 vs 当别人接纳我时，我感觉最好&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;B左（T - 任务） &lt;strong&gt;&lt;strong&gt;__&lt;/strong&gt;&lt;/strong&gt; vs B右（P - 人际） &lt;strong&gt;&lt;strong&gt;__&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做完题后，就会得到4个数，例如F8、S4、T7、P5，将FS中的较小值（S4）丢弃，TP中的较小值（P5）丢弃，就变成了F8、T7。然后就可以根据这个坐标在下图中找到自己的象限了。对于F8、T7来说，是老虎：&lt;br&gt;&lt;img src=&quot;/img/disc-self-accessment.png&quot; alt=&quot;DISC自我评测&quot;&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;据说它只有70%的准确性（再减20%可就是随机了）&lt;/li&gt;
&lt;li&gt;身为一只猫头鹰，真想吐个槽：题目设计还不够科学，如果两张表都是奇数，就不至于出现两个6纠结于最大值了&lt;/li&gt;
&lt;li&gt;4个6的话，除了变色龙，还真没法解释了&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;程序猿和工程狮们（还有形形色色的其他角色）的日常工作中，一定会有需要跟别人沟通的时候。因为沟通的问题认为别人sb或者被人当成sb的惨剧应该不少吧？如果有共鸣，可以读一读本文。不少企业都会请有资质的专家，为员工做类似的培训。&lt;br&gt;
    
    </summary>
    
      <category term="idea" scheme="http://qinghua.github.io/categories/idea/"/>
    
    
      <category term="soft skill" scheme="http://qinghua.github.io/tags/soft-skill/"/>
    
  </entry>
  
  <entry>
    <title>监控与管理dubbo服务</title>
    <link href="http://qinghua.github.io/dubbo-3/"/>
    <id>http://qinghua.github.io/dubbo-3/</id>
    <published>2016-10-02T13:46:02.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/dubbo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dubbo&lt;/a&gt;是阿里多年前开源的一套服务治理框架，在众多互联网企业里应用广泛。本文介绍了一些如何监控与管理dubbo服务。使用的工具与&lt;a href=&quot;http://www.cnblogs.com/yjmyzz/p/dubbo-admin-monitor-deploy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《dubbox 的各种管理和监管》&lt;/a&gt;大致相同，本文更侧重于命令细节与实践。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先参考&lt;a href=&quot;/dubbo-1&quot;&gt;《服务治理框架dubbo上手指南》&lt;/a&gt;，实现自己的&lt;code&gt;HelloService&lt;/code&gt;服务。在此基础上运行&lt;code&gt;Provider.java&lt;/code&gt;启动服务，接下来就可以开始管理工作啦。让我们来下载dubbo的源码并安装：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/alibaba/dubbo.git dubbo&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dubbo&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn clean install -Dmaven.test.skip&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;telnet&quot;&gt;&lt;a href=&quot;#telnet&quot; class=&quot;headerlink&quot; title=&quot;telnet&quot;&gt;&lt;/a&gt;telnet&lt;/h2&gt;&lt;p&gt;Dubbo支持使用telnet来查看服务状态。下面让我们来试一下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;telnet localhost 19880&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;敲下回车便能看到&lt;code&gt;dubbo&amp;gt;&lt;/code&gt;的提示符了。以下命令可以看到服务列表、服务的方法详细信息列表和服务地址列表：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ls&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; org.ggg.hello.service.HelloService&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ps &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以下命令可以跟踪服务方法的调用情况：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;trace org.ggg.hello.service.HelloService&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时会看见光标停止住了。运行&lt;code&gt;Consumer.java&lt;/code&gt;来消费服务，就可以看到跟踪结果啦。详细的命令可以参考&lt;a href=&quot;https://github.com/alibaba/dubbo/wiki/user-guide-telnet-cmd-ref&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Telnet命令参考手册&lt;/a&gt;。若是服务端没有开启监控，使用telnet命令对查看甚至配置服务来说，是依赖最少最简便的方式。&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u6613_u76D1_u63A7_u4E2D_u5FC3&quot;&gt;&lt;a href=&quot;#u7B80_u6613_u76D1_u63A7_u4E2D_u5FC3&quot; class=&quot;headerlink&quot; title=&quot;简易监控中心&quot;&gt;&lt;/a&gt;简易监控中心&lt;/h2&gt;&lt;p&gt;先前安装过的dubbo项目里包含了&lt;code&gt;dubbo-monitor-simple&lt;/code&gt;的包，解压之：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tar zxvf dubbo-simple/dubbo-monitor-simple/target/dubbo-monitor-simple-2.5.4-SNAPSHOT-assembly.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;dubbo.properties&lt;/code&gt;为自己的zk服务地址：&lt;code&gt;192.168.33.88:2181&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 操作系统是Linux的话&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/multicast:\/\/224.5.6.7:1234/zookeeper:\/\/192.168.33.88:2181/&quot;&lt;/span&gt; dubbo-monitor-simple-2.5.4-SNAPSHOT/conf/dubbo.properties&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 操作系统是OS X的话（接下来的sed命令以OS X为例）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;s/multicast:\/\/224.5.6.7:1234/zookeeper:\/\/192.168.33.88:2181/&quot;&lt;/span&gt; dubbo-monitor-simple-2.5.4-SNAPSHOT/conf/dubbo.properties&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;简易监控中心以文件的方式记录监控数据。创建基本文件夹并运行&lt;code&gt;start.sh&lt;/code&gt;启动简易监控中心：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir ~/monitor&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dubbo-monitor-simple-2.5.4-SNAPSHOT/bin/start.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;访问&lt;a href=&quot;http://localhost:8080/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/&lt;/a&gt;便能看到简易监控中心的首页了：&lt;br&gt;&lt;img src=&quot;/img/dubbo-monitor-simple-home.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Applications&lt;/code&gt;里可以看到我们先前启动的&lt;code&gt;hello-world-app&lt;/code&gt;和&lt;code&gt;simple-monitor&lt;/code&gt;自己。可见&lt;code&gt;simple-monitor&lt;/code&gt;也是一个dubbo服务，把自己注册到&lt;code&gt;dubbo.properties&lt;/code&gt;里指定的配置中心里去。为了接收到监控数据，需要在dubbo服务端打开监控。在&lt;code&gt;provider.xml&lt;/code&gt;文件里加入下面这行配置，然后重新启动dubbo服务：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dubbo:monitor&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;protocol&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;registry&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;过一会儿就能看到监控的统计信息和图标了：&lt;br&gt;&lt;img src=&quot;/img/dubbo-monitor-simple-service-charts.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而运行&lt;code&gt;ls ~/monitor/&lt;/code&gt;也能看到简易监控中心所生成的文件夹&lt;code&gt;charts&lt;/code&gt;和&lt;code&gt;statistics&lt;/code&gt;。如果迟迟没有生成这些信息，有一种可能是在多（虚拟）网卡的情况下，simple-monitor绑定到了错误的IP地址去了。万一真是如此，在&lt;code&gt;dubbo.properties&lt;/code&gt;里增加一行&lt;code&gt;dubbo.protocol.host&lt;/code&gt;的配置即可。&lt;/p&gt;
&lt;p&gt;运行&lt;code&gt;stop.sh&lt;/code&gt;停止简易监控中心服务：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;dubbo-monitor-simple-2.5.4-SNAPSHOT/bin/stop.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7BA1_u7406_u63A7_u5236_u53F0&quot;&gt;&lt;a href=&quot;#u7BA1_u7406_u63A7_u5236_u53F0&quot; class=&quot;headerlink&quot; title=&quot;管理控制台&quot;&gt;&lt;/a&gt;管理控制台&lt;/h2&gt;&lt;p&gt;Dubbo为服务治理提供了管理控制台。这是一个webapp，可以很轻松地运行在web容器中。经由源代码安装后便会生成&lt;code&gt;dubbo-admin-2.5.4-SNAPSHOT.war&lt;/code&gt;文件，将其部署在tomcat容器中即可。这里用docker启动一个tomcat 7：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; -p 8080:8080 --name=tomcat tomcat:7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker cp dubbo-admin/target/dubbo-admin-2.5.4-SNAPSHOT.war tomcat:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/tomcat/webapps/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; tomcat sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/127.0.0.1/192.168.33.88/&quot;&lt;/span&gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/tomcat/webapps/dubbo-admin-2.5.4-SNAPSHOT/WEB-INF/dubbo.properties&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker restart tomcat&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;文件&lt;code&gt;dubbo.properties&lt;/code&gt;里配置了zookeep的地址，所以用sed将其替换为自己的zk服务地址：&lt;code&gt;192.168.33.88&lt;/code&gt;。里面还配置了root账户和guest账户的密码。默认即为&lt;code&gt;root&lt;/code&gt;和&lt;code&gt;guest&lt;/code&gt;。访问&lt;a href=&quot;http://localhost:8080/dubbo-admin-2.5.4-SNAPSHOT/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/dubbo-admin-2.5.4-SNAPSHOT/&lt;/a&gt;并输入&lt;code&gt;root&lt;/code&gt;和&lt;code&gt;root&lt;/code&gt;，就能看到管理控制台的首页了：&lt;br&gt;&lt;img src=&quot;/img/dubbo-admin-home.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入&lt;code&gt;hello&lt;/code&gt;进行查询，便能看到我们的服务了：&lt;br&gt;&lt;img src=&quot;/img/dubbo-admin-service-governance.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以在此页面进行各种服务治理操作。更详细的资料，请参考&lt;a href=&quot;http://dubbo.io/Administrator+Guide-zh.htm#AdministratorGuide-zh-%E8%BF%90%E7%BB%B4%E6%89%8B%E5%86%8C&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;运维手册&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;运行以下命令删除tomcat容器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; tomcat&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;dubbo-monitor&quot;&gt;&lt;a href=&quot;#dubbo-monitor&quot; class=&quot;headerlink&quot; title=&quot;dubbo-monitor&quot;&gt;&lt;/a&gt;dubbo-monitor&lt;/h2&gt;&lt;p&gt;简易监控中心和管理控制台的页面风格看起来还停留在上个世纪。韩都衣舍提供了一个&lt;a href=&quot;https://github.com/handuyishe/dubbo-monitor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dubbo-monitor&lt;/a&gt;，除了更加现代化的页面，还用数据库代替了简易监控中心写文件的方式。除了mysql，还支持&lt;a href=&quot;https://github.com/handuyishe/dubbo-monitor/tree/mongo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongo&lt;/a&gt;。那我们先来下载代码：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ..&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/handuyishe/dubbo-monitor&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; dubbo-monitor&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后启动一个mysql数据库实例：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; --name=mysql &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; MYSQL_ROOT_PASSWORD=raycool -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/sql/create.sql:/create.sql mysql:5.7.12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it mysql mysql -uroot -praycool&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建数据库和表（可能需要等数据库启动一小会儿之后才能连上去）：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; dubbokeeper &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; utf8 &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt; utf8_general_ci;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USE&lt;/span&gt; dubbokeeper;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SOURCE /create.sql;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLES&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;exit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改配置文件&lt;code&gt;application.properties&lt;/code&gt;并打包（目前版本中spring的引用有问题，所以也需要修改&lt;code&gt;pom.xml&lt;/code&gt;）：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MYSQL_IP=`docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it mysql hostname -i | sed &lt;span class=&quot;string&quot;&gt;&#39;s/.$//&#39;&lt;/span&gt;`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;s/dubbo.registry.address.*/dubbo.registry.address=zookeeper:\/\/192.168.33.88:2181/&quot;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;s/default/&lt;span class=&quot;variable&quot;&gt;$&amp;#123;MYSQL_IP&amp;#125;&lt;/span&gt;/&quot;&lt;/span&gt; src/main/resources/application.properties&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; s/4.1.6.RELEASE/3.2.9.RELEASE/&lt;span class=&quot;string&quot;&gt;&quot; pom.xml&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn clean package&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启动dubbo-monitor：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; -p 8080:8080 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/target/dubbo-monitor-x.war:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/tomcat/webapps/dubbo-monitor-x.war --name=tomcat tomcat:7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;访问&lt;a href=&quot;http://localhost:8080/dubbo-monitor-x/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/dubbo-monitor-x/&lt;/a&gt;并输入&lt;code&gt;admin&lt;/code&gt;和&lt;code&gt;admin&lt;/code&gt;，就能看到dubbo-monitor的首页了：&lt;br&gt;&lt;img src=&quot;/img/dubbo-monitor-home.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以在dubbo-monitor提供的页面上监控各种数据，但由于笔者是mac配docker版tomcat的方式，监控的dubbo服务只能绑定在docker内部IP上，导致监控数据过不去（com.alibaba.dubbo.remoting.RemotingException: message can not send, because channel is closed）。真正运行的时候还是使用linux+docker（配合net=host）或是mac+原生tomcat的方式吧。运行以下命令删除mysql和tomcat容器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; mysql tomcat&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;DubboKeeper&quot;&gt;&lt;a href=&quot;#DubboKeeper&quot; class=&quot;headerlink&quot; title=&quot;DubboKeeper&quot;&gt;&lt;/a&gt;DubboKeeper&lt;/h2&gt;&lt;p&gt;除了dubbo-monitor以外，github里还有一个社区版的&lt;a href=&quot;https://github.com/dubboclub/dubbokeeper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DubboKeeper&lt;/a&gt;，功能最为强大。既提供监控功能，又提供服务治理功能。监控数据的持久化除了支持mysql和mongo，还支持lucene。现在下载代码并打包。Dubbokeeper的打包方式略有些不同，需要执行根目录里的&lt;code&gt;install-xxx.sh&lt;/code&gt;脚本。这里还是以mysql为例：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ..&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/dubboclub/dubbokeeper&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; dubbokeeper&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./install-mysql.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先启动DubboKeeper的UI：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; -p 8080:8080 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/target/mysql-dubbokeeper-ui/dubbokeeper-ui-1.0.1.war:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/tomcat/webapps/dubbokeeper-ui-1.0.1.war --name=tomcat tomcat:7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; tomcat sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/localhost/192.168.33.88/&quot;&lt;/span&gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/tomcat/webapps/dubbokeeper-ui-1.0.1/WEB-INF/classes/dubbo.properties&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker restart tomcat&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;访问&lt;a href=&quot;http://localhost:8080/dubbokeeper-ui-1.0.1/index.htm#/statistics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/dubbokeeper-ui-1.0.1/index.htm#/statistics&lt;/a&gt;，就能看到DubboKeeper的首页了：&lt;br&gt;&lt;img src=&quot;/img/dubbo-keeper-home.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;很显然在这些UI里，DubboKeeper的逼格是最高的。第二个tab就是&lt;code&gt;Admin&lt;/code&gt;（管理）：&lt;br&gt;&lt;img src=&quot;/img/dubbo-keeper-admin.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下来就是&lt;code&gt;Monitor&lt;/code&gt;（监控），不过只有启动过监控数据存储端才能使用，现在点击会报&lt;strong&gt;后端系统出现异常，请稍后再试&lt;/strong&gt;的错。接下来启动数据库：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; --name=mysql -p 3306:3306 &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; MYSQL_ROOT_PASSWORD=19890314 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/doc/storage/mysql/sql/application.sql:/create.sql mysql:5.7.12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it mysql mysql -uroot -p19890314&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;初始化数据库：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; dubbokeeper;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USE&lt;/span&gt; dubbokeeper;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SOURCE /create.sql;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLES&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;exit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改监控数据存储端的配置并启动之：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;s/localhost:2181/192.168.33.88:2181/&quot;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;s/dubbo-monitor/dubbokeeper/&quot;&lt;/span&gt; target/mysql-dubbokeeper-server/conf/dubbo-mysql.properties&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;chmod +x target/mysql-dubbokeeper-server/bin/start-mysql.sh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;target/mysql-dubbokeeper-server/bin/start-mysql.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在就可以顺利打开监控页面了：&lt;br&gt;&lt;img src=&quot;/img/dubbo-keeper-monitor.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;DubboKeeper甚至还提供了ZooKeeper的窥视版&lt;code&gt;ZooPeeper&lt;/code&gt;：&lt;br&gt;&lt;img src=&quot;/img/dubbo-keeper-zoopeeper.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后收尾，Ctrl+C掉监控数据存储端，并删除各个容器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; mysql tomcat&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/dubbo&quot;&gt;Dubbo&lt;/a&gt;是阿里多年前开源的一套服务治理框架，在众多互联网企业里应用广泛。本文介绍了一些如何监控与管理dubbo服务。使用的工具与&lt;a href=&quot;http://www.cnblogs.com/yjmyzz/p/dubbo-admin-monitor-deploy.html&quot;&gt;《dubbox 的各种管理和监管》&lt;/a&gt;大致相同，本文更侧重于命令细节与实践。&lt;br&gt;
    
    </summary>
    
      <category term="architecture" scheme="http://qinghua.github.io/categories/architecture/"/>
    
    
      <category term="dubbo" scheme="http://qinghua.github.io/tags/dubbo/"/>
    
      <category term="service governance" scheme="http://qinghua.github.io/tags/service-governance/"/>
    
      <category term="monitor" scheme="http://qinghua.github.io/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>《DevOps实践》出版啦</title>
    <link href="http://qinghua.github.io/practical-devops/"/>
    <id>http://qinghua.github.io/practical-devops/</id>
    <published>2016-09-21T00:48:20.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;从开始试译到现在经过了半年多，我和马博文的译作&lt;a href=&quot;https://book.douban.com/subject/26878481/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《DevOps实践》&lt;/a&gt;终于出版啦。这里简要地介绍一下本书，并放篇我为此书所作的译者序，安利一下。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;《DevOps实践》介绍了DevOps的起源和概览，并通过一个贯穿全书的例子，从架构开始，到代码的存储、构建、测试、部署、监控，直至流程的跟踪，推荐了许多可用的工具和可行的示范，是一本DevOps实践方面不可多得的参考书籍。&lt;/p&gt;
&lt;p&gt;《DevOps实践》面向愿意承担更大责任的开发人员和系统管理员，也很适合愿意更好地支持开发人员的运维人员。无须任何DevOps知识即可快速上手！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/practical_devops_en.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/practical_devops_cn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u8BD1_u8005_u5E8F&quot;&gt;&lt;a href=&quot;#u8BD1_u8005_u5E8F&quot; class=&quot;headerlink&quot; title=&quot;译者序&quot;&gt;&lt;/a&gt;译者序&lt;/h2&gt;&lt;p&gt;什么是DevOps？我的前同事李光磊将其译为开发自运维，他还写了篇很有意思的博客来说明：&lt;a href=&quot;http://liguanglei.name/blogs/2015/04/22/devops-chinese-name/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://liguanglei.name/blogs/2015/04/22/devops-chinese-name/&lt;/a&gt;。这个将开发和运维结合起来的词，代表了一种文化，那就是大家共同协作。狭义上的大家，指的是开发和运维，广义上，指的是所有软件生命周期里参与的角色。&lt;/p&gt;
&lt;p&gt;“共同协作”是个富有正能量的词。感觉上，随便往哪儿一套都是政治正确的。那为什么要在DevOps里着重强调呢？DevOps到底解决了什么问题？归根结底，就是提高产品质量。爱思考的你，可能心里已经有千万个提高产品质量的方案从脑海里呼啸而过。代码审查、自动化测试、持续集成、代码质量管理工具、程序员鼓励师……对对对，这些方案都能在某种程度上解决一些层次的问题。但是，产品质量的根源在哪儿呢？在于人。如果开发者对自己要做的事情不负责甚至压根儿不知道后果，怎么能指望这样的人能够生产出来高质量的代码呢？举个例子：作为开发者，我知道自己写的代码会由测试部门来进一步测试，在有进度压力的时候，我就会更倾向于去想：“那就先这么凑合吧着，反正有问题的话QA们会说的”。如果我不知道部署和维护产品是怎么一回事，我就不会主动地在产品里写上日志的代码。对于运维人员来说，由于处于软件生命周期的下游，相信对类似的场景感触更甚。DevOps能够做到的事，就是让人有这个意识：需要对产品的质量负责。DevOps能够提供一个平台或机制，让我能够从中找到所需的资源。&lt;/p&gt;
&lt;p&gt;“共同协作”也是个虚无缥缈的词。它应该如何落地呢？这就是本书想要给读者们带来的内容。在实践上，从架构开始，到代码的存储、构建、测试、部署、监控，直至流程的跟踪，本书推荐了许多可用的工具和练习，确实无愧于《DevOps实战》之名。细度全文可以有一个全局的概览并充实读者们的DevOps工具箱；而在实际场景中再查阅本书，将其当做一本各种技术的快速参考手册也不失为明智之举。本书的许多实例通过Docker启动，在紧随潮流技术的同时也简化了练习步骤，值得花些时间试试。在企业里，使用自动化和持续交付来提高代码部署频率，降低代码上线间隔。这样的指标是比较容易统计的，在让管理人员满意的同时，也能减少开发和运维的痛苦。只有让各角色都真切地感受到实惠，大家才会更加愿意从心底接受并积极参与到这一过程中。&lt;/p&gt;
&lt;p&gt;“共同协作”还是个看上去很美的词。为什么大家还不赶紧拥抱它？因为它的成本可能还挺高的。大型企业在管理上，通常权责分明，从而导致某个角色的成员都不愿意轻易踏足其它领域。流程繁琐，导致一个小小的改进也需要漫长的批复。安全性要求高，引发各种违规，进一步导致没有和其他人分享的意愿。员工操作权限管理精密，上不了网、下不了包、开不了虚拟机……这些问题，虽然不至于疾在骨髓，但起码也在肠胃了。而且，自动化测试、部署流水线等都需要比较大的成本。在看见收益和认清自己之前，可能大多数人也会像蔡桓公那样默认拒绝吧：“医之好治不病以为功”。成本最低的时候，可能就是开始写第一行产品代码的时候。话虽如此，任何时候都是实现DevOps的最佳时机，因为它的成本随企业的扩大和代码库的膨胀，一定是越来越高的。另外，完全地追求技术上的卓越而忽视成本也不是DevOps的推荐做法。读者们在阅读时，也会看到DevOps在一些状况下采取的权衡方案。&lt;/p&gt;
&lt;p&gt;你希望在一个大家敞开心胸，相互拥抱的环境里共同协作打造最好的产品，还是守着自己的一亩三分地，与人争辩这是谁的责任，抱怨人们冷漠的同时拒绝其他人的“与你无关”的要求？从本书开始，应用自己获得的知识，并尝试改造这个世界吧！&lt;/p&gt;
&lt;h2 id=&quot;u81F4_u8C22&quot;&gt;&lt;a href=&quot;#u81F4_u8C22&quot; class=&quot;headerlink&quot; title=&quot;致谢&quot;&gt;&lt;/a&gt;致谢&lt;/h2&gt;&lt;p&gt;感谢作者Joakim Verona，本书涵盖了大量可以练习的实例，想必花了你很多的心血。&lt;br&gt;感谢ThoughtWorks，授人的不止是持续集成、持续交付，还有持续学习。&lt;br&gt;感谢林帆，没有你，我就不会有这样难忘的翻译经历。&lt;a href=&quot;https://book.douban.com/subject/26670565/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《CoreOS实践之路》&lt;/a&gt;只是你的开始，希望能看到更多的佳作问世。&lt;br&gt;感谢永恒的侠少，让我可以集中精力专注于翻译之上，你还为本书想了一个漂亮的副标题。&lt;br&gt;感谢马博文，你的经验与高效让本书的翻译可以提前完成。顺祝你的另一本译作&lt;a href=&quot;http://item.jd.com/11935577.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Scala编程实战》&lt;/a&gt;大卖。&lt;br&gt;感谢小伙伴张博，你给我的初稿指出了许多宝贵意见。&lt;br&gt;感谢文心、瑞民、光磊，这篇译者序里也流淌着你们的汗水。&lt;br&gt;感谢张骏，我从你的&lt;a href=&quot;https://book.douban.com/subject/26772677/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《微服务设计》&lt;/a&gt;的代码库里获取了许多宝贵的经验与灵感。&lt;br&gt;感谢家人和朋友们，我永远离不开你们的支持。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从开始试译到现在经过了半年多，我和马博文的译作&lt;a href=&quot;https://book.douban.com/subject/26878481/&quot;&gt;《DevOps实践》&lt;/a&gt;终于出版啦。这里简要地介绍一下本书，并放篇我为此书所作的译者序，安利一下。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="book" scheme="http://qinghua.github.io/tags/book/"/>
    
  </entry>
  
  <entry>
    <title>不止于数据库连接池的Druid</title>
    <link href="http://qinghua.github.io/alibaba_druid/"/>
    <id>http://qinghua.github.io/alibaba_druid/</id>
    <published>2016-09-15T09:07:22.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/druid&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Druid&lt;/a&gt;传说中是Java语言中最好的数据库连接池，能够提供强大的监控和扩展功能，甚至可以基于SQL语义来&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E7%AE%80%E4%BB%8B_WallFilter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;防御SQL注入攻击&lt;/a&gt;。它与其它数据库连接池的功能对比可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E5%90%84%E7%A7%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AF%B9%E6%AF%94&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;各种数据库连接池对比&lt;/a&gt;，性能对比可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E5%90%84%E7%A7%8D%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;各种连接池性能对比测试&lt;/a&gt;。网上的一些原code.alibabatech.com的链接已经失效，文档都转移到了github上，以&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%A6%96%E9%A1%B5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt;+&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FAQ&lt;/a&gt;的方式提供，查起来有些混乱。下面我们来动手了解一下druid所提供的功能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h2&gt;&lt;p&gt;既然是数据库连接池，首先要启动一个数据库。用docker来弄简单轻松：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; MYSQL_ROOT_PASSWORD=123456 --net=host --name=mysql mysql:5.7.12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入容器并连接上数据库：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it mysql mysql -uroot -p123456&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建用户表并插入一些初始数据：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; spike;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USE&lt;/span&gt; spike;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;UNSIGNED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    gender TINYINT &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    birthday &lt;span class=&quot;keyword&quot;&gt;TIMESTAMP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, gender, birthday) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;ggg&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1999-01-01&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, gender, birthday) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Loic&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2000-01-01&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, gender, birthday) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Hetty&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2001-01-01&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;exit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我在github上创建了一个druid的maven版测试工程，下载到本地并使用自己喜欢的IDE打开：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/qinghua/druid&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后打开&lt;code&gt;spring-context-dao.xml&lt;/code&gt;文件，把数据源从&lt;code&gt;jdbc:mysql://192.168.33.88:3306/spike&lt;/code&gt;替换为自己的本地数据源。&lt;/p&gt;
&lt;h2 id=&quot;u5404_u79CD_u76D1_u63A7&quot;&gt;&lt;a href=&quot;#u5404_u79CD_u76D1_u63A7&quot; class=&quot;headerlink&quot; title=&quot;各种监控&quot;&gt;&lt;/a&gt;各种监控&lt;/h2&gt;&lt;p&gt;以下命令可以直接启动jetty服务器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; druid&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn jetty:run&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打开&lt;a href=&quot;http://localhost:8080/hello?id=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/hello?id=1&lt;/a&gt;便能看见&lt;strong&gt;Hello ggg&lt;/strong&gt;，这个是程序的正常功能。&lt;/p&gt;
&lt;p&gt;Druid的页面是通过在&lt;code&gt;web.xml&lt;/code&gt;里配置&lt;code&gt;DruidStatView&lt;/code&gt;的servlet来实现的。参数的具体配置可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。打开&lt;a href=&quot;http://localhost:8080/druid/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/druid/index.html&lt;/a&gt;便能看见druid的首页了：&lt;br&gt;&lt;img src=&quot;/img/druid-index.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果刚才访问过&lt;a href=&quot;http://localhost:8080/hello?id=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hello&lt;/a&gt;，通过点击&lt;code&gt;数据源&lt;/code&gt;便能查看到程序新创建的数据源。可以在IDE里打开&lt;code&gt;spring-context-dao.xml&lt;/code&gt;通过&lt;code&gt;dataSource&lt;/code&gt;来查看数据源的配置，参数的具体配置可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。通过&lt;code&gt;class=&amp;quot;com.alibaba.druid.pool.DruidDataSource&amp;quot;&lt;/code&gt;来使用druid。点击&lt;code&gt;SQL监控&lt;/code&gt;便能体会到druid引以为傲的强大监控功能：&lt;br&gt;&lt;img src=&quot;/img/druid-sql-monitor.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SQL防火墙&lt;/code&gt;是用来防止SQL注入的，配置可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE-wallfilter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。还可以通过在&lt;code&gt;web.xml&lt;/code&gt;加入以下配置来启用web监控，参数的具体配置可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_%E9%85%8D%E7%BD%AEWebStatFilter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;DruidWebStatFilter&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;filter-class&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.druid.support.http.WebStatFilter&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;filter-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;exclusions&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;filter-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;DruidWebStatFilter&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/*&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;filter-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;除了监控SQL和web，druid还能监控spring的一些调用信息。可以在IDE里打开&lt;code&gt;spring-context-druid.xml&lt;/code&gt;查看程序的当前配置。参数的具体配置可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_Druid%E5%92%8CSpring%E5%85%B3%E8%81%94%E7%9B%91%E6%8E%A7%E9%85%8D%E7%BD%AE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。通过点击&lt;code&gt;spring监控&lt;/code&gt;便能查看到方法的调用时间和jdbc的一些状态：&lt;br&gt;&lt;img src=&quot;/img/druid-spring-monitor.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5176_u5B83_u529F_u80FD&quot;&gt;&lt;a href=&quot;#u5176_u5B83_u529F_u80FD&quot; class=&quot;headerlink&quot; title=&quot;其它功能&quot;&gt;&lt;/a&gt;其它功能&lt;/h2&gt;&lt;h3 id=&quot;u767B_u5F55&quot;&gt;&lt;a href=&quot;#u767B_u5F55&quot; class=&quot;headerlink&quot; title=&quot;登录&quot;&gt;&lt;/a&gt;登录&lt;/h3&gt;&lt;p&gt;监控里显示的都是敏感信息，可以通过在&lt;code&gt;web.xml&lt;/code&gt;里加入以下配置来启用简单的登录功能：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;DruidStatView&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.druid.support.http.StatViewServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;loginUsername&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;ggg&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;loginPassword&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;123456&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样访问druid界面的时候就需要输入用户名密码啦：&lt;br&gt;&lt;img src=&quot;/img/druid-login.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u65E5_u5FD7&quot;&gt;&lt;a href=&quot;#u65E5_u5FD7&quot; class=&quot;headerlink&quot; title=&quot;日志&quot;&gt;&lt;/a&gt;日志&lt;/h3&gt;&lt;p&gt;如果想在日志里看到执行的sql，可以根据&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_LogFilter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;的说明来配置。Druid支持多种&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AEdruid%E5%86%85%E7%BD%AE%E7%9A%84log%E5%AE%9E%E7%8E%B0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;日志组件&lt;/a&gt;。显示执行的sql是debug级别，如果用的是log4j，可以在&lt;code&gt;log4j.properties&lt;/code&gt;里这样配：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;log4j.logger.druid.sql=debug,stdout&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;访问&lt;a href=&quot;http://localhost:8080/hello?id=2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hello页面&lt;/a&gt;，便可以看到如下日志：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005&amp;#125; connected&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005&amp;#125; pool-connect&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000&amp;#125; created. &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SELECT name FROM user WHERE id=?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000&amp;#125; Parameters : [2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000&amp;#125; Types : [INTEGER]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000&amp;#125; executed. 1.351044 millis. &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SELECT name FROM user WHERE id=?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000, rs-50000&amp;#125; open&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000, rs-50000&amp;#125; Header: [name]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000, rs-50000&amp;#125; Result: [Loic]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000, rs-50000&amp;#125; closed&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005, pstmt-20000&amp;#125; clearParameters. &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;conn-10005&amp;#125; pool-recycle&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/druid&quot;&gt;Druid&lt;/a&gt;传说中是Java语言中最好的数据库连接池，能够提供强大的监控和扩展功能，甚至可以基于SQL语义来&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E7%AE%80%E4%BB%8B_WallFilter&quot;&gt;防御SQL注入攻击&lt;/a&gt;。它与其它数据库连接池的功能对比可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E5%90%84%E7%A7%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AF%B9%E6%AF%94&quot;&gt;各种数据库连接池对比&lt;/a&gt;，性能对比可以参考&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E5%90%84%E7%A7%8D%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95&quot;&gt;各种连接池性能对比测试&lt;/a&gt;。网上的一些原code.alibabatech.com的链接已经失效，文档都转移到了github上，以&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E9%A6%96%E9%A1%B5&quot;&gt;wiki&lt;/a&gt;+&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&quot;&gt;FAQ&lt;/a&gt;的方式提供，查起来有些混乱。下面我们来动手了解一下druid所提供的功能。&lt;br&gt;
    
    </summary>
    
      <category term="db" scheme="http://qinghua.github.io/categories/db/"/>
    
    
      <category term="druid" scheme="http://qinghua.github.io/tags/druid/"/>
    
  </entry>
  
  <entry>
    <title>用容器快速上手Elasticsearch</title>
    <link href="http://qinghua.github.io/elastic-search/"/>
    <id>http://qinghua.github.io/elastic-search/</id>
    <published>2016-08-28T13:06:34.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Elasticsearch&lt;/a&gt;是用Java开发的基于&lt;a href=&quot;https://lucene.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Lucene&lt;/a&gt;的一个近乎实时的分布式搜索分析引擎。维基百科、Stack Overflow、GitHub等都采用它来作为全文搜索引擎。本文旨在用docker来快速入门并尝试Elasticsearch提供的基本功能。&lt;/p&gt;
&lt;p&gt;对&lt;a href=&quot;http://lucene.apache.org/solr/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Solr&lt;/a&gt;入门有兴趣的朋友请参考&lt;a href=&quot;/solr&quot;&gt;用容器快速上手Apache Solr&lt;/a&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u542F_u52A8&quot;&gt;&lt;a href=&quot;#u542F_u52A8&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;p&gt;关于Elasticsearch的入门知识，有一本gitbook：&lt;a href=&quot;https://www.gitbook.com/book/fuxiaopang/learnelasticsearch/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Elasticsearch 权威指南》&lt;/a&gt;翻译得不错。本文关心的是实际操作，所以这就开始吧。通过docker，一条命令就可以直接启动Elasticsearch：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; --net=host --name=es elasticsearch:2.3.5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我用的是mac，通过&lt;code&gt;docker-machine env default&lt;/code&gt;命令可以看到默认的&lt;code&gt;default docker-machine&lt;/code&gt;的IP地址是&lt;code&gt;192.168.99.100&lt;/code&gt;，于是便可以通过&lt;a href=&quot;http://192.168.99.100:9200/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.99.100:9200/&lt;/a&gt;来从Elasticsearch获得json数据了：&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;Lorvex&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;cluster_name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;elasticsearch&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;version&quot;&lt;/span&gt; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;number&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2.3.5&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;build_hash&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;90f439ff60a3c0f497f91663701e64ccd01edbb4&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;build_timestamp&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2016-07-27T10:36:52Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;build_snapshot&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;lucene_version&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;5.5.0&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;tagline&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;You Know, for Search&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以使用&lt;code&gt;_cat&lt;/code&gt;直接在命令行获取Elasticsearch的健康状态和节点状态：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;192.168.99.100:9200/_cat/health?v&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;192.168.99.100:9200/_cat/nodes?v&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7D22_u5F15&quot;&gt;&lt;a href=&quot;#u7D22_u5F15&quot; class=&quot;headerlink&quot; title=&quot;索引&quot;&gt;&lt;/a&gt;索引&lt;/h2&gt;&lt;p&gt;与Solr不同，Elasticsearch只支持json格式。创建索引的过程，就是向服务器POST数据的过程：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;first_name&quot; : &quot;John&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;last_name&quot; :  &quot;Smith&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;age&quot; :        25,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;about&quot; :      &quot;I love to go rock climbing&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;立刻就能得到Elasticsearch返回的结果：&lt;strong&gt;{“_index”:”megacorp”,”_type”:”employee”,”_id”:”AVbK2ssDm7bdYo65QJ6k”,”_version”:1,”_shards”:{“total”:2,”successful”:1,”failed”:0},”created”:true}&lt;/strong&gt;。Url里的megacorp是索引的名字（想象成一个数据库），employee是类型的名字（想象成一张表）。返回的&lt;code&gt;_id&lt;/code&gt;是Elasticsearch随机创建的一个ID，用于标识数据。&lt;/p&gt;
&lt;p&gt;可以通过以下url获取Elasticsearch的索引信息：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/_cat/indices?v&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改索引的话，发出PUT请求就可以了（别忘了把ID换成你自己生成的&lt;code&gt;_id&lt;/code&gt;）：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -XPUT &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/AVbK2ssDm7bdYo65QJ6k&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;first_name&quot; : &quot;Johnie&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;last_name&quot; :  &quot;Smithreen&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;age&quot; :        38,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;about&quot; :      &quot;I do not love to go rock climbing&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;interests&quot;: []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果指定的ID不存在，那么PUT也会新建一条记录。删除索引的话，发出DELETE请求就可以了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -XDELETE &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/AVbK2ssDm7bdYo65QJ6k&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者删除整个索引：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -XDELETE &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再次获取索引信息，便会看到已经没有索引了。让我们加上三条数据，以备下一节搜索使用：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/1&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;first_name&quot; : &quot;John&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;last_name&quot; :  &quot;Smith&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;age&quot; :        25,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;about&quot; :      &quot;I love to go rock climbing&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/2&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;first_name&quot; :  &quot;Jane&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;last_name&quot; :   &quot;Smith&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;age&quot; :         32,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;about&quot; :       &quot;I like to collect rock albums&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;interests&quot;:  [ &quot;music&quot; ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/3&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;first_name&quot; :  &quot;Douglas&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;last_name&quot; :   &quot;Fir&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;age&quot; :         35,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;about&quot;:        &quot;I like to build cabinets&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;interests&quot;:  [ &quot;forestry&quot; ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u641C_u7D22&quot;&gt;&lt;a href=&quot;#u641C_u7D22&quot; class=&quot;headerlink&quot; title=&quot;搜索&quot;&gt;&lt;/a&gt;搜索&lt;/h2&gt;&lt;h3 id=&quot;u67E5_u8BE2&quot;&gt;&lt;a href=&quot;#u67E5_u8BE2&quot; class=&quot;headerlink&quot; title=&quot;查询&quot;&gt;&lt;/a&gt;查询&lt;/h3&gt;&lt;p&gt;要查看刚刚创建的数据，直接get就可以了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/1&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/2&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/3&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;全部查询改一下url就可以了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/_search&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/_search&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u7B80_u6613_u641C_u7D22&quot;&gt;&lt;a href=&quot;#u7B80_u6613_u641C_u7D22&quot; class=&quot;headerlink&quot; title=&quot;简易搜索&quot;&gt;&lt;/a&gt;简易搜索&lt;/h3&gt;&lt;p&gt;上面的命令都只能算查询，还不算搜索。接下来让我们尝试Elasticsearch强大的搜索功能：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search?q=last_name:Smith&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;query&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;match&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;last_name&quot; : &quot;Smith&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u67E5_u8BE2DSL&quot;&gt;&lt;a href=&quot;#u67E5_u8BE2DSL&quot; class=&quot;headerlink&quot; title=&quot;查询DSL&quot;&gt;&lt;/a&gt;查询DSL&lt;/h3&gt;&lt;p&gt;上面两条命令都是去获取&lt;code&gt;last_name&lt;/code&gt;为&lt;code&gt;Smith&lt;/code&gt;的数据，但是下面一条用到了&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;查询DSL&lt;/a&gt;。这是Elasticsearch提供的DSL查询语言，可以通过它完成更加复杂的搜索。接下来除了&lt;code&gt;Smith&lt;/code&gt;以外，我们还要增加30岁以上这一条件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;query&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;filtered&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;filter&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;range&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &quot;age&quot; : &amp;#123; &quot;gt&quot; : 30 &amp;#125; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;query&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;match&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &quot;last_name&quot; : &quot;smith&quot; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这里介绍一下&lt;code&gt;filter&lt;/code&gt;和&lt;code&gt;query&lt;/code&gt;。可以这么理解：&lt;code&gt;filter&lt;/code&gt;是精确查找（想象成sql里where子句的=、&amp;lt;、&amp;gt;），速度快，有缓存。&lt;code&gt;query&lt;/code&gt;是模糊查找（想象成sql里where子句的like，但是能根据匹配度打分），虽然没有&lt;code&gt;filter&lt;/code&gt;那么快，但是查询结果能更准确一些。业务上的查询通常都是同时使用二者，通过&lt;code&gt;filter&lt;/code&gt;快速找到对象数据，再通过&lt;code&gt;query&lt;/code&gt;来匹配。&lt;/p&gt;
&lt;h3 id=&quot;u5168_u6587_u641C_u7D22&quot;&gt;&lt;a href=&quot;#u5168_u6587_u641C_u7D22&quot; class=&quot;headerlink&quot; title=&quot;全文搜索&quot;&gt;&lt;/a&gt;全文搜索&lt;/h3&gt;&lt;p&gt;接下来尝试全文搜索，从&lt;code&gt;about&lt;/code&gt;的句子里查询想要的数据：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;query&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;match&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;about&quot; : &quot;rock climbing&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查到了两个结果。返回值包含了一项&lt;code&gt;_score&lt;/code&gt;，既含有&lt;code&gt;rock&lt;/code&gt;又含有&lt;code&gt;climbing&lt;/code&gt;的数据，得分明显高于只含有&lt;code&gt;rock&lt;/code&gt;的数据。理所当然的，得分高的数据排在上面。如果想要精确匹配&lt;code&gt;rock climbing&lt;/code&gt;，把&lt;code&gt;match&lt;/code&gt;改为&lt;code&gt;match_phrase&lt;/code&gt;就可以了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;query&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;match_phrase&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;about&quot; : &quot;rock climbing&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u7EDF_u8BA1&quot;&gt;&lt;a href=&quot;#u7EDF_u8BA1&quot; class=&quot;headerlink&quot; title=&quot;统计&quot;&gt;&lt;/a&gt;统计&lt;/h3&gt;&lt;p&gt;查找最受欢迎的兴趣：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;aggs&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;all_interests&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &quot;terms&quot;: &amp;#123; &quot;field&quot;: &quot;interests&quot; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查找每个兴趣的平均年龄：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:9200/megacorp/employee/_search&#39;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;aggs&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;all_interests&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;terms&quot; : &amp;#123; &quot;field&quot; : &quot;interests&quot; &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;aggs&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;avg_age&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &quot;avg&quot; : &amp;#123; &quot;field&quot; : &quot;age&quot; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这些数据都是实时计算出来的。就像使用SQL来查询数据库一样，Elasticsearch提供了自己的DSL来让我们基于复杂的条件来搜索。&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;是统计功能的官方文档。&lt;/p&gt;
&lt;h2 id=&quot;u4E2D_u6587&quot;&gt;&lt;a href=&quot;#u4E2D_u6587&quot; class=&quot;headerlink&quot; title=&quot;中文&quot;&gt;&lt;/a&gt;中文&lt;/h2&gt;&lt;p&gt;同Solr一样，要想让Elasticsearch支持中文分词，需要使用中文分词组件。这里我们还是用&lt;a href=&quot;https://github.com/medcl/elasticsearch-analysis-mmseg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mmseg插件&lt;/a&gt;。首先下载并解压：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget -c https://github.com/medcl/elasticsearch-analysis-mmseg/releases/download/v1.9.4/elasticsearch-analysis-mmseg-1.9.4.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;unzip &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; elasticsearch-analysis-mmseg-1.9.4 elasticsearch-analysis-mmseg-1.9.4.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/2.3.4/2.3.5/&#39;&lt;/span&gt; elasticsearch-analysis-mmseg-1.9.4/plugin-descriptor.properties&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;1.9.4版的插件只支持Elasticsearch 2.3.4版，要想支持2.3.5，就需要把&lt;code&gt;elasticsearch.version&lt;/code&gt;配置改为&lt;code&gt;2.3.5&lt;/code&gt;。除此之外，还需要加点儿东西到Elasticsearch的配置文件里：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; es.yml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;network.host: 0.0.0.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;index:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  analysis:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    analyzer:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      mmseg_maxword:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: custom&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        filter:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - lowercase&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        tokenizer: mmseg_maxword&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      mmseg_maxword_with_cut_letter_digi:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: custom&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        filter:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - lowercase&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - cut_letter_digit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        tokenizer: mmseg_maxword&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述配置文件的具体语法可以参考&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。接下来就可以启动容器了，分别挂载配置文件和插件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; es&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; --net=host --name=es \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/es.yml:/usr/share/elasticsearch/config/elasticsearch.yml \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/elasticsearch-analysis-mmseg-1.9.4/:/usr/share/elasticsearch/plugins/elasticsearch-analysis-mmseg-1.9.4/ \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    elasticsearch:2.3.5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Elasticsearch服务启动后，就可以增加索引和&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;映射&lt;/a&gt;（mapping，可以理解为数据类型，有点像solr的schema），并且插入一些数据了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -XPUT http://192.168.99.100:9200/index&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST http://192.168.99.100:9200/index/fulltext/_mapping &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;fulltext&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;_all&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;analyzer&quot;: &quot;mmseg_maxword&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;search_analyzer&quot;: &quot;mmseg_maxword&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;term_vector&quot;: &quot;no&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;store&quot;: &quot;false&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;properties&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;content&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;type&quot;: &quot;string&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;store&quot;: &quot;no&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;term_vector&quot;: &quot;with_positions_offsets&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;analyzer&quot;: &quot;mmseg_maxword&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;search_analyzer&quot;: &quot;mmseg_maxword&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;include_in_all&quot;: &quot;true&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;boost&quot;: 8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST http://192.168.99.100:9200/index/fulltext/1 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;content:&quot;美国留给伊拉克的是个烂摊子吗&quot;&amp;#125;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST http://192.168.99.100:9200/index/fulltext/2 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;content:&quot;公安部：各地校车将享最高路权&quot;&amp;#125;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST http://192.168.99.100:9200/index/fulltext/3 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;content:&quot;中韩渔警冲突调查：韩警平均每天扣1艘中国渔船&quot;&amp;#125;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST http://192.168.99.100:9200/index/fulltext/4 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;content:&quot;中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首&quot;&amp;#125;&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后搜索&lt;code&gt;中国&lt;/code&gt;看看：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -XPOST http://192.168.99.100:9200/index/fulltext/_search  &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;query&quot; : &amp;#123; &quot;term&quot; : &amp;#123; &quot;content&quot; : &quot;中国&quot; &amp;#125;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;highlight&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;pre_tags&quot; : [&quot;&amp;lt;tag1&amp;gt;&quot;, &quot;&amp;lt;tag2&amp;gt;&quot;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;post_tags&quot; : [&quot;&amp;lt;/tag1&amp;gt;&quot;, &quot;&amp;lt;/tag2&amp;gt;&quot;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;fields&quot; : &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;content&quot; : &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;_analyze&lt;/code&gt;来查看分析的过程：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&quot;http://192.168.99.100:9200/index/_analyze?analyzer=mmseg_maxword&amp;amp;pretty=true&quot;&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;美国留给伊拉克的是个烂摊子吗&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可见，这句话被解析成：美国、留给、伊、拉克、的、是个、烂、摊子、吗，还不是非常完美。&lt;code&gt;伊拉克&lt;/code&gt;、&lt;code&gt;烂摊子&lt;/code&gt;都没有很好地识别出来。&lt;/p&gt;
&lt;p&gt;有兴趣的话，还可以重建容器，跟无中文分词的效果对比一下。除了mmseg，大神medcl还写了一个&lt;a href=&quot;https://github.com/medcl/elasticsearch-rtf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;elasticsearch-rtf版本&lt;/a&gt;，涵盖诸多中文分词工具，可以直接使用。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt;是用Java开发的基于&lt;a href=&quot;https://lucene.apache.org/&quot;&gt;Apache Lucene&lt;/a&gt;的一个近乎实时的分布式搜索分析引擎。维基百科、Stack Overflow、GitHub等都采用它来作为全文搜索引擎。本文旨在用docker来快速入门并尝试Elasticsearch提供的基本功能。&lt;/p&gt;
&lt;p&gt;对&lt;a href=&quot;http://lucene.apache.org/solr/&quot;&gt;Apache Solr&lt;/a&gt;入门有兴趣的朋友请参考&lt;a href=&quot;/solr&quot;&gt;用容器快速上手Apache Solr&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="elasticsearch" scheme="http://qinghua.github.io/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>用容器轻松搭建redis主从和集群环境</title>
    <link href="http://qinghua.github.io/redis-cluster/"/>
    <id>http://qinghua.github.io/redis-cluster/</id>
    <published>2016-08-24T01:18:57.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://redis.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redis&lt;/a&gt;是目前使用得非常广泛的开源分布式缓存。它支持诸多数据结构和数据持久化，并且通过&lt;a href=&quot;http://redis.io/topics/sentinel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redis Sentinel&lt;/a&gt;和&lt;a href=&quot;http://redis.io/topics/cluster-tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redis cluster&lt;/a&gt;来支持高可用。本文旨在通过docker轻松搭建redis的主从/集群环境。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u4E3B_u4ECE&quot;&gt;&lt;a href=&quot;#u4E3B_u4ECE&quot; class=&quot;headerlink&quot; title=&quot;主从&quot;&gt;&lt;/a&gt;主从&lt;/h2&gt;&lt;p&gt;用容器启动redis实例非常容易：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=master &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这就搞定了。进去看一看：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it master redis-cli&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; ggg 123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;keys *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;get ggg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以通过配置文件、启动参数或者命令来新建一个从实例。接下来我们用启动参数的方式：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=slave &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server --port 6380 --slaveof 127.0.0.1 6379&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进去看一看，就能看到刚才创建的ggg已经被同步过来了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it slave redis-cli&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;keys *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;get ggg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后把刚刚创建的实例都删除掉：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; master slave&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u96C6_u7FA4&quot;&gt;&lt;a href=&quot;#u96C6_u7FA4&quot; class=&quot;headerlink&quot; title=&quot;集群&quot;&gt;&lt;/a&gt;集群&lt;/h2&gt;&lt;p&gt;Redis的集群至少是3个实例。接下来为这3个实例创建3个端口不同的配置文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; redis1.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port 6381&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cluster-enabled yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cluster-config-file nodes.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cluster-node-timeout 5000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;appendonly yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cp redis1.conf redis2.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/6381/6382/&#39;&lt;/span&gt; redis2.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cp redis1.conf redis3.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/6381/6383/&#39;&lt;/span&gt; redis3.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过刚刚创建的配置文件来启动3个redis实例：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis1 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis1.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis2 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis2.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis3 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis3.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建集群最简单的方式是用源代码库里的&lt;code&gt;redis-trib.rb&lt;/code&gt;脚本。我们需要先下载源代码并安装&lt;code&gt;redis&lt;/code&gt;的gem使之能够运行这个脚本：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/antirez/redis&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo gem install redis&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ruby redis/src/redis-trib.rb create 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行&lt;code&gt;redis-trib.rb&lt;/code&gt;会提示：&lt;strong&gt;Can I set the above configuration? (type ‘yes’ to accept)&lt;/strong&gt;，输入&lt;code&gt;yes&lt;/code&gt;回车即可。Redis集群就这样搭建好了。我们进去看一看：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it redis1 redis-cli -p 6381&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cluster nodes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; ggg 123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; gggg 234&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个ggg可以顺利设置成功，但是第二个gggg就不行了，我们会看到错误：&lt;strong&gt;(error) MOVED 6392 127.0.0.1:6382&lt;/strong&gt;。这是由于redis&lt;a href=&quot;http://redis.io/topics/cluster-tutorial#redis-cluster-data-sharding&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;分片（sharding）&lt;/a&gt;的缘故。如果频繁地在控制台里切换实例也怪麻烦的，幸好&lt;code&gt;redis-cli&lt;/code&gt;提供了一个&lt;code&gt;-c&lt;/code&gt;的参数，允许以集群的方式连接：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it redis1 redis-cli -c -p 6381&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; gggg 234&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;keys *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再次设置gggg，就会看到：&lt;strong&gt;Redirected to slot [6392] located at 127.0.0.1:6382&lt;/strong&gt;，它表明redis已经把我们连接到6382的实例上去了。最后把前面创建的实例都删除掉：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; redis1 redis2 redis3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u4E3B_u4ECE_u96C6_u7FA4&quot;&gt;&lt;a href=&quot;#u4E3B_u4ECE_u96C6_u7FA4&quot; class=&quot;headerlink&quot; title=&quot;主从集群&quot;&gt;&lt;/a&gt;主从集群&lt;/h2&gt;&lt;p&gt;主从集群就是给三个主实例各加一个从实例。现在已经有了三个主实例的配置文件了，再来三个从集群的，一共是6个：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cp redis1.conf redis4.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cp redis1.conf redis5.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cp redis1.conf redis6.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/6381/6384/&#39;&lt;/span&gt; redis4.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/6381/6385/&#39;&lt;/span&gt; redis5.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/6381/6386/&#39;&lt;/span&gt; redis6.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis1 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis1.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis2 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis2.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis3 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis3.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis4 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis4.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis5 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis5.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker run --net=host --name=redis6 -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/redis6.conf:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; redis:3.2.0 redis-server /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/etc/redis/redis.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一条命令即可启动主从集群：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ruby redis/src/redis-trib.rb create --replicas 1 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384 127.0.0.1:6385 127.0.0.1:6386&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以在里面随意测试啦。最后把创建的实例都删除掉：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; redis1 redis2 redis3 redis4 redis5 redis6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt;是目前使用得非常广泛的开源分布式缓存。它支持诸多数据结构和数据持久化，并且通过&lt;a href=&quot;http://redis.io/topics/sentinel&quot;&gt;Redis Sentinel&lt;/a&gt;和&lt;a href=&quot;http://redis.io/topics/cluster-tutorial&quot;&gt;Redis cluster&lt;/a&gt;来支持高可用。本文旨在通过docker轻松搭建redis的主从/集群环境。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="redis" scheme="http://qinghua.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>用容器快速上手Apache Solr</title>
    <link href="http://qinghua.github.io/solr/"/>
    <id>http://qinghua.github.io/solr/</id>
    <published>2016-08-13T05:51:10.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://lucene.apache.org/solr/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Solr&lt;/a&gt;是用Java开发的基于&lt;a href=&quot;https://lucene.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Lucene&lt;/a&gt;的高性能全文检索服务器，可以运行在web容器里，提供搜索引擎服务。本文旨在用docker来快速入门并尝试Solr提供的各种功能。&lt;/p&gt;
&lt;p&gt;对&lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Elasticsearch&lt;/a&gt;入门有兴趣的朋友请参考&lt;a href=&quot;/elastic-search&quot;&gt;用容器快速上手Elasticsearch&lt;/a&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u542F_u52A8&quot;&gt;&lt;a href=&quot;#u542F_u52A8&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;p&gt;关于Solr的入门知识，有一本gitbook：&lt;a href=&quot;https://www.gitbook.com/book/paynexu/create-your-vertical-search-engine-with-solr/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《用Solr构建垂直搜索引擎》&lt;/a&gt;写得不错。本文关心的是实际操作，所以这就开始吧。通过docker，一条命令就可以直接启动Solr：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; -p 8983:8983 --name solr solr:6.1.0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我用的是mac，通过&lt;code&gt;docker-machine env default&lt;/code&gt;命令可以看到默认的&lt;code&gt;default docker-machine&lt;/code&gt;的IP地址是&lt;code&gt;192.168.99.100&lt;/code&gt;，于是便可以通过&lt;a href=&quot;http://192.168.99.100:8983/solr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.99.100:8983/solr&lt;/a&gt;来访问Solr Admin了：&lt;br&gt;&lt;img src=&quot;/img/solr-dashboard.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在Solr里，&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/Solr+Cores+and+solr.xml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Core&lt;/a&gt;可以认为是一个集合，一个Solr实例可以有多个Core。可以说Solr实例和Core的关系像是数据库实例和数据库的关系。现在我们来新建一个core，命名为ggg：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it --user=solr solr bin/solr create_core -c ggg&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7D22_u5F15&quot;&gt;&lt;a href=&quot;#u7D22_u5F15&quot; class=&quot;headerlink&quot; title=&quot;索引&quot;&gt;&lt;/a&gt;索引&lt;/h2&gt;&lt;p&gt;Solr支持&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/Uploading+Data+with+Index+Handlers#UploadingDatawithIndexHandlers-XMLFormattedIndexUpdates&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xml&lt;/a&gt;、&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/Uploading+Data+with+Index+Handlers#UploadingDatawithIndexHandlers-JSONFormattedIndexUpdates&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;json&lt;/a&gt;和&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/Uploading+Data+with+Index+Handlers#UploadingDatawithIndexHandlers-CSVFormattedIndexUpdates&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;csv&lt;/a&gt;格式的数据文件用于索引。接下来让我们来试试。首先登录进solr容器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it --user=solr solr bash&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;xml&quot;&gt;&lt;a href=&quot;#xml&quot; class=&quot;headerlink&quot; title=&quot;xml&quot;&gt;&lt;/a&gt;xml&lt;/h3&gt;&lt;p&gt;Solr存储的对象称为Document，每个Document数个Field组成，每个Field代表一个属性。现在按照&lt;code&gt;&amp;lt;add&amp;gt;&amp;lt;doc&amp;gt;&amp;lt;field name=&amp;quot;&amp;quot;&amp;gt;&lt;/code&gt;的格式来生成一个xml文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; books.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;add&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;doc&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;&amp;gt;978-0641723445&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;&amp;gt;The Lightning Thief&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;&amp;gt;Rick Riordan&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;series_t&quot;&lt;/span&gt;&amp;gt;Percy Jackson and the Olympians&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;sequence_i&quot;&lt;/span&gt;&amp;gt;1&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;genre_s&quot;&lt;/span&gt;&amp;gt;fantasy&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;inStock&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;price&quot;&lt;/span&gt;&amp;gt;12.50&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;pages_i&quot;&lt;/span&gt;&amp;gt;384&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/doc&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;doc&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;&amp;gt;978-1423103349&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;&amp;gt;The Sea of Monsters&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;&amp;gt;Rick Riordan&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;series_t&quot;&lt;/span&gt;&amp;gt;Percy Jackson and the Olympians&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;sequence_i&quot;&lt;/span&gt;&amp;gt;2&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;inStock&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;price&quot;&lt;/span&gt;&amp;gt;6.49&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;field name=&lt;span class=&quot;string&quot;&gt;&quot;pages_i&quot;&lt;/span&gt;&amp;gt;304&amp;lt;/field&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/doc&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/add&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;细心的你可能已经发现了下面一条数据里并没有&lt;code&gt;fantasy&lt;/code&gt;，我故意的~~现在用以下命令将这个xml导入索引：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg books.xml&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;索引完成后，在Solr Admin的ggg Core的Query里，直接点击Execute Query便可以看到我们新索引的这两条数据：&lt;br&gt;&lt;img src=&quot;/img/solr-query.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;q&lt;/code&gt;里输入搜索的关键词便可以查询索引：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rick Riordan：匹配作者&lt;/li&gt;
&lt;li&gt;Jackson：分词可以工作&lt;/li&gt;
&lt;li&gt;the：不区分大小写&lt;/li&gt;
&lt;li&gt;fantasy：不符合的记录不会被查询到&lt;/li&gt;
&lt;li&gt;fantasy 0123：不是所有关键词都会被使用&lt;/li&gt;
&lt;li&gt;0123：但如果只有查不到的关键词，那就是查不到&lt;/li&gt;
&lt;li&gt;fantasy -Rick：&lt;code&gt;-&lt;/code&gt;表示过滤&lt;/li&gt;
&lt;li&gt;Lightni：单词不全不能匹配&lt;/li&gt;
&lt;li&gt;Lightn?ng：&lt;code&gt;?&lt;/code&gt;匹配一位&lt;/li&gt;
&lt;li&gt;L*g：&lt;code&gt;*&lt;/code&gt;匹配多位&lt;/li&gt;
&lt;li&gt;Lightnixx~：&lt;code&gt;~&lt;/code&gt;用于模糊查询&lt;/li&gt;
&lt;li&gt;Lightnxxx~：&lt;code&gt;~&lt;/code&gt;最多就匹配两位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有很多查询的技巧，可以在&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/The+Standard+Query+Parser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;找到。&lt;/p&gt;
&lt;p&gt;再次导入相同的数据：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg books.xml&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到查询结果并没有变化。这是因为solr会根据&lt;code&gt;id&lt;/code&gt;来区分每一个数据。如果更新xml再导入，那就会覆盖掉旧的数据。现在让我们把漏了的&lt;code&gt;fantasy&lt;/code&gt;补上：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;/&amp;lt;field name=&quot;sequence_i&quot;&amp;gt;2&amp;lt;\/field&amp;gt;/a \ \ \ \ &amp;lt;field name=&quot;genre_s&quot;&amp;gt;fantasy&amp;lt;\/field&amp;gt;&#39;&lt;/span&gt; books.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat books.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg books.xml&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以查询&lt;code&gt;fantasy&lt;/code&gt;看到结果变成了两条。&lt;/p&gt;
&lt;h3 id=&quot;json&quot;&gt;&lt;a href=&quot;#json&quot; class=&quot;headerlink&quot; title=&quot;json&quot;&gt;&lt;/a&gt;json&lt;/h3&gt;&lt;p&gt;接下来创建一个json文件并索引：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; books.json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;978-1857995879&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;cat&quot;&lt;/span&gt; : [&lt;span class=&quot;string&quot;&gt;&quot;book&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;paperback&quot;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;Sophie&#39;s World : The Greek Philosophers&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;Jostein Gaarder&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;sequence_i&quot;&lt;/span&gt; : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;genre_s&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;fantasy&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;inStock&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;price&quot;&lt;/span&gt; : 3.07,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;pages_i&quot;&lt;/span&gt; : 64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;978-1933988177&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;cat&quot;&lt;/span&gt; : [&lt;span class=&quot;string&quot;&gt;&quot;book&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;paperback&quot;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;Lucene in Action, Second Edition&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;Michael McCandless&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;sequence_i&quot;&lt;/span&gt; : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;genre_s&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;IT&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;inStock&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;price&quot;&lt;/span&gt; : 30.50,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;pages_i&quot;&lt;/span&gt; : 475&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg books.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查询一下&lt;code&gt;978&lt;/code&gt;，就能看到json文件的内容也被索引进来了。&lt;/p&gt;
&lt;h3 id=&quot;csv&quot;&gt;&lt;a href=&quot;#csv&quot; class=&quot;headerlink&quot; title=&quot;csv&quot;&gt;&lt;/a&gt;csv&lt;/h3&gt;&lt;p&gt;接下来创建一个csv文件并索引：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; books.csv&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;id,cat,name,price,&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;Stock,author,series_t,sequence_i,genre_s&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0553573403,book,A Game of Thrones,7.99,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,George R.R. Martin,&lt;span class=&quot;string&quot;&gt;&quot;A Song of Ice and Fire&quot;&lt;/span&gt;,1,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0553579908,book,A Clash of Kings,7.99,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,George R.R. Martin,&lt;span class=&quot;string&quot;&gt;&quot;A Song of Ice and Fire&quot;&lt;/span&gt;,2,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;055357342X,book,A Storm of Swords,7.99,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,George R.R. Martin,&lt;span class=&quot;string&quot;&gt;&quot;A Song of Ice and Fire&quot;&lt;/span&gt;,3,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0553293354,book,Foundation,7.99,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,Isaac Asimov,Foundation Novels,1,scifi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0812521390,book,The Black Company,6.99,&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,Glen Cook,The Chronicles of The Black Company,1,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0812550706,book,Ender&lt;span class=&quot;string&quot;&gt;&#39;s Game,6.99,true,Orson Scott Card,Ender,1,scifi&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0441385532,book,Jhereg,7.95,false,Steven Brust,Vlad Taltos,1,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0380014300,book,Nine Princes In Amber,6.99,true,Roger Zelazny,the Chronicles of Amber,1,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0805080481,book,The Book of Three,5.99,true,Lloyd Alexander,The Chronicles of Prydain,1,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;080508049X,book,The Black Cauldron,5.99,true,Lloyd Alexander,The Chronicles of Prydain,2,fantasy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg books.csv&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查询一下&lt;code&gt;*:*&lt;/code&gt;，就能看到csv文件的内容也被索引进来了。一共有14条&lt;code&gt;numFound&lt;/code&gt;记录，但是只会显示10条。通过&lt;code&gt;Query&lt;/code&gt;页面上的&lt;code&gt;start, rows&lt;/code&gt;，就可以很方便地查询分页。&lt;/p&gt;
&lt;h3 id=&quot;u5176_u5B83&quot;&gt;&lt;a href=&quot;#u5176_u5B83&quot; class=&quot;headerlink&quot; title=&quot;其它&quot;&gt;&lt;/a&gt;其它&lt;/h3&gt;&lt;p&gt;&lt;code&gt;bin/post&lt;/code&gt;这个命令也能索引文件夹，不管里面的文件是什么格式：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir books&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mv books.xml books&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mv books.json books&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mv books.csv books&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg books&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还有一个比较基本的需求是使用The Data Import Handler (DIH)来索引数据库。可以参考&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/Uploading+Structured+Data+Store+Data+with+the+Data+Import+Handler&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cwiki.apache.org/confluence/display/solr/Uploading+Structured+Data+Store+Data+with+the+Data+Import+Handler&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;再有就是如何在程序中更新数据。Solr支持多种语言的客户端，对于Java来说，可以参考&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/Using+SolrJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SolrJ&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;还可以通过http请求来更新索引：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:8983/solr/ggg/update?commit=true&#39;&lt;/span&gt; \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&#39;Contenttype: application/json&#39;&lt;/span&gt; \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;[&amp;#123;&quot;id&quot;:&quot;12345&quot;,&quot;name&quot;:&quot;Practical DevOps&quot;,&quot;author&quot;:&quot;Joakim Verona&quot;,&quot;gere_s&quot;:&quot;IT&quot;&amp;#125;]&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;删除索引：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;delete&amp;gt;&amp;lt;id&amp;gt;12345&amp;lt;/id&amp;gt;&amp;lt;/delete&amp;gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u67E5_u8BE2&quot;&gt;&lt;a href=&quot;#u67E5_u8BE2&quot; class=&quot;headerlink&quot; title=&quot;查询&quot;&gt;&lt;/a&gt;查询&lt;/h2&gt;&lt;p&gt;其实上一节已经介绍了不少查询相关的内容了。在查询页面的右上角有一个url，例如&lt;a href=&quot;http://192.168.99.100:8983/solr/ggg/select?indent=on&amp;amp;q=*:*&amp;amp;wt=json&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.99.100:8983/solr/ggg/select?indent=on&amp;amp;q=&lt;em&gt;:&lt;/em&gt;&amp;amp;wt=json&lt;/a&gt;。只要对其发出&lt;code&gt;get&lt;/code&gt;请求，便可以获取到查询结果。当然直接&lt;code&gt;curl&lt;/code&gt;也可以：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.99.100:8983/solr/ggg/select?indent=on&amp;amp;q=*:*&amp;amp;wt=json&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至于&lt;code&gt;Query&lt;/code&gt;页面上的其它查询条件，可以在&lt;a href=&quot;http://wiki.apache.org/solr/CommonQueryParameters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.apache.org/solr/CommonQueryParameters&lt;/a&gt;上查到。这里简介如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fq（Filter Query）：过滤查询，可以指定多个条件并缓存。例如：&lt;code&gt;inStock:false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sort：排序。例如：&lt;code&gt;sequence_i desc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;start：查询结果忽略掉前n条&lt;/li&gt;
&lt;li&gt;rows：查询结果数量&lt;/li&gt;
&lt;li&gt;fl（Field List）：指定查询结果字段。例如&lt;code&gt;author, sequence_i&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;df（Default Field）：指定查询字段。&lt;/li&gt;
&lt;li&gt;wt（Write Type）：指定输出格式，有xml，json，python，ruby，php，csv等多项可选&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些高级功能，本文旨在入门，就不细说了。访问&lt;a href=&quot;http://192.168.99.100:8983/solr/ggg/browse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.99.100:8983/solr/ggg/browse&lt;/a&gt;可以查看已索引的所有数据。最后输入&lt;code&gt;exit&lt;/code&gt;退出solr容器。&lt;/p&gt;
&lt;h2 id=&quot;u4E2D_u6587&quot;&gt;&lt;a href=&quot;#u4E2D_u6587&quot; class=&quot;headerlink&quot; title=&quot;中文&quot;&gt;&lt;/a&gt;中文&lt;/h2&gt;&lt;p&gt;在没有使用任何中文分词组件的情况下，Solr会把所有中文的每个字当成一个词来检索。要想让Solr支持中文分词，需要使用中文分词组件。&lt;a href=&quot;http://www.hansight.com/blog-lucene4.10-with-chinese-segment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《与Lucene 4.10配合的中文分词比较》&lt;/a&gt;一文里介绍了几种中文分词组件并做了比较。虽然我们用的是Solr 6.1.0版，但是也是很有参考意义的。接下来我们使用&lt;a href=&quot;https://github.com/chenlb/mmseg4j-solr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mmseg4j&lt;/a&gt;来试一下。&lt;/p&gt;
&lt;p&gt;目前的mmseg4j暂时不支持solr 6.1.0，不过已经有热心人士提交&lt;a href=&quot;http://amao12580.github.io/post/2016/07/mmseg4j-solr-compatible-solr-6-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pull request&lt;/a&gt;了，只是还没合并进去。我们本着简单的原则，替换solr镜像成5.3.1版本。在作者的github上指定的&lt;a href=&quot;https://pan.baidu.com/s/1dD7qMFf#path=%252Fmmseg4j-solr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度网盘&lt;/a&gt;里下载&lt;code&gt;mmseg4j-solr-2.3.0-with-mmseg4j-core.zip&lt;/code&gt;，解压后得到两个jar文件。之后重新创建一个solr容器并再次生成ggg的core：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; solr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker create -p 8983:8983 --name solr solr:5.3.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker cp mmseg4j-core-1.10.0.jar solr:/opt/solr/server/solr-webapp/webapp/WEB-INF/lib/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker cp mmseg4j-solr-2.3.0.jar solr:/opt/solr/server/solr-webapp/webapp/WEB-INF/lib/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker start solr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it --user=solr solr bin/solr create_core -c ggg&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在用solr提供的&lt;a href=&quot;https://cwiki.apache.org/confluence/display/solr/Schema+API&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Schema API&lt;/a&gt;来配置mmseg4j：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it --user=solr solr bash&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -X POST -H &lt;span class=&quot;string&quot;&gt;&#39;Content-type:application/json&#39;&lt;/span&gt; --data-binary &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;add-field-type&quot;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;name&quot;:&quot;textComplex&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;class&quot;:&quot;solr.TextField&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;positionIncrementGap&quot;:&quot;100&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;analyzer&quot;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &quot;tokenizer&quot;:&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;class&quot;:&quot;com.chenlb.mmseg4j.solr.MMSegTokenizerFactory&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;mode&quot;:&quot;complex&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;dicPath&quot;:&quot;dic&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39; http://192.168.99.100:8983/solr/ggg/schema&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl -X POST -H &lt;span class=&quot;string&quot;&gt;&#39;Content-type:application/json&#39;&lt;/span&gt; --data-binary &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;add-field-type&quot;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;name&quot;:&quot;textMaxWord&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;class&quot;:&quot;solr.TextField&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;positionIncrementGap&quot;:&quot;100&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;analyzer&quot;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &quot;tokenizer&quot;:&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;class&quot;:&quot;com.chenlb.mmseg4j.solr.MMSegTokenizerFactory&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;mode&quot;:&quot;max-word&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39; http://192.168.99.100:8983/solr/ggg/schema&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的命令增加了&lt;code&gt;textComplex&lt;/code&gt;和&lt;code&gt;textMaxWord&lt;/code&gt;两种字段类型，它们的区别在&lt;a href=&quot;https://paynexu.gitbooks.io/create-your-vertical-search-engine-with-solr/content/configure-mmseg4j-analyzer-on-solr5.html#complex和maxword两种类型的区别&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;解释得很清楚。下面就可以在&lt;code&gt;Analysis&lt;/code&gt;页面上，看到我们的分词生效了：&lt;br&gt;&lt;img src=&quot;/img/solr-analysis.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还可以尝试用&lt;code&gt;孙悟空吃香蕉&lt;/code&gt;这个短句来测试&lt;code&gt;textComplex&lt;/code&gt;和&lt;code&gt;textMaxWord&lt;/code&gt;的不同效果。接下来将&lt;code&gt;field desc&lt;/code&gt;添加到&lt;code&gt;textComplex&lt;/code&gt;里：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -X POST -H &lt;span class=&quot;string&quot;&gt;&#39;Content-type:application/json&#39;&lt;/span&gt; --data-binary &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;add-field&quot;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &quot;name&quot;:&quot;desc&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &quot;type&quot;:&quot;textComplex&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &quot;stored&quot;:true &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&#39; http://192.168.99.100:8983/solr/ggg/schema&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在让我们来索引几条包含&lt;code&gt;field desc&lt;/code&gt;的中文数据：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;solr&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; cities.csv&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;id,city,desc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;010,北京,简称“京”，是中华人民共和国首都、直辖市和京津冀城市群的中心，中国的政治、文化、交通、科技创新和国际交往中心，中国经济、金融的决策和管理中心&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;021,上海,简称沪，别称申，中华人民共和国直辖市、国家中心城市之一，也是中国按行政区划主城区内人口排名的最大的城市&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bin/post -c ggg cities.csv&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在在&lt;code&gt;Query&lt;/code&gt;页面上，输入&lt;code&gt;desc:中华人民共和国&lt;/code&gt;就可以找到相对应的记录，而输入&lt;code&gt;desc:人民&lt;/code&gt;就已经不能检索到结果啦。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://lucene.apache.org/solr/&quot;&gt;Apache Solr&lt;/a&gt;是用Java开发的基于&lt;a href=&quot;https://lucene.apache.org/&quot;&gt;Apache Lucene&lt;/a&gt;的高性能全文检索服务器，可以运行在web容器里，提供搜索引擎服务。本文旨在用docker来快速入门并尝试Solr提供的各种功能。&lt;/p&gt;
&lt;p&gt;对&lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt;入门有兴趣的朋友请参考&lt;a href=&quot;/elastic-search&quot;&gt;用容器快速上手Elasticsearch&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="development" scheme="http://qinghua.github.io/categories/development/"/>
    
    
      <category term="solr" scheme="http://qinghua.github.io/tags/solr/"/>
    
  </entry>
  
  <entry>
    <title>Spring Scheduler的使用与坑</title>
    <link href="http://qinghua.github.io/spring-scheduler/"/>
    <id>http://qinghua.github.io/spring-scheduler/</id>
    <published>2016-08-08T00:44:22.000Z</published>
    <updated>2016-12-23T15:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spring&lt;/a&gt;给程序猿们带来了许多便利。它包含了用于定时任务处理的&lt;a href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spring Scheduler&lt;/a&gt;。本文聊聊Scheduling模型和一些坑。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Spring Scheduler里有两个概念：任务（Task）和运行任务的框架（TaskExecutor/TaskScheduler）。TaskExecutor顾名思义，是任务的执行器，允许我们异步执行多个任务。TaskScheduler是任务调度器，来运行未来的定时任务。触发器Trigger可以决定定时任务是否该运行了，最常用的触发器是CronTrigger，具体用法会在下面章节中详细介绍。Spring内置了多种类型的TaskExecutor和TaskScheduler，方便用户根据不同业务场景选择。&lt;/p&gt;
&lt;p&gt;本文聊的是Spring Scheduler，所以我们接下来主要介绍Scheduler的用法。&lt;/p&gt;
&lt;h2 id=&quot;u8FD0_u884C&quot;&gt;&lt;a href=&quot;#u8FD0_u884C&quot; class=&quot;headerlink&quot; title=&quot;运行&quot;&gt;&lt;/a&gt;运行&lt;/h2&gt;&lt;p&gt;用xml配置Spring Scheduler的话，这样就行了：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;attr&quot;&gt;xmlns:task&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.springframework.org/schema/task&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduler&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scheduler&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doSomethingTask&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doSomething&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cron&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0 * * * * *&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然需要能够reference到doSomethingTask这个实例了。&lt;/p&gt;
&lt;p&gt;用注解配置Spring Scheduler的方式如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.scheduling.annotation.Scheduled;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.stereotype.Component;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Component&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DoSomethingTask&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Scheduled&lt;/span&gt;(cron=&lt;span class=&quot;string&quot;&gt;&quot;0 * * * * *&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;do something&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;http://www.baeldung.com/spring-scheduled-tasks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇短文&lt;/a&gt;可以迅速了解。&lt;/p&gt;
&lt;h2 id=&quot;Cron&quot;&gt;&lt;a href=&quot;#Cron&quot; class=&quot;headerlink&quot; title=&quot;Cron&quot;&gt;&lt;/a&gt;Cron&lt;/h2&gt;&lt;p&gt;想了解Cron最好的方法是看&lt;a href=&quot;http://www.quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/crontrigger&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Quartz的官方文档&lt;/a&gt;。本节也会大致介绍一下。&lt;/p&gt;
&lt;p&gt;Cron表达式由6~7项组成，中间用空格分开。从左到右依次是：秒、分、时、日、月、周几、年（可省略）。值可以是数字，也可以是以下符号：&lt;br&gt;&lt;code&gt;*&lt;/code&gt;：所有值都匹配&lt;br&gt;&lt;code&gt;?&lt;/code&gt;：无所谓，不关心，通常放在“周几”里&lt;br&gt;&lt;code&gt;,&lt;/code&gt;：或者&lt;br&gt;&lt;code&gt;/&lt;/code&gt;：增量值&lt;br&gt;&lt;code&gt;-&lt;/code&gt;：区间&lt;/p&gt;
&lt;p&gt;下面举几个例子，看了就知道了：&lt;br&gt;&lt;code&gt;0 * * * * *&lt;/code&gt;：每分钟（当秒为0的时候）&lt;br&gt;&lt;code&gt;0 0 * * * *&lt;/code&gt;：每小时（当秒和分都为0的时候）&lt;br&gt;&lt;code&gt;*/10 * * * * *&lt;/code&gt;：每10秒&lt;br&gt;&lt;code&gt;0 5/15 * * * *&lt;/code&gt;：每小时的5分、20分、35分、50分&lt;br&gt;&lt;code&gt;0 0 9,13 * * *&lt;/code&gt;：每天的9点和13点&lt;br&gt;&lt;code&gt;0 0 8-10 * * *&lt;/code&gt;：每天的8点、9点、10点&lt;br&gt;&lt;code&gt;0 0/30 8-10 * * *&lt;/code&gt;：每天的8点、8点半、9点、9点半、10点&lt;br&gt;&lt;code&gt;0 0 9-17 * * MON-FRI&lt;/code&gt;：每周一到周五的9点、10点…直到17点（含）&lt;br&gt;&lt;code&gt;0 0 0 25 12 ?&lt;/code&gt;：每年12约25日圣诞节的0点0分0秒（午夜）&lt;br&gt;&lt;code&gt;0 30 10 * * ? 2016&lt;/code&gt;：2016年每天的10点半&lt;/p&gt;
&lt;p&gt;其中的&lt;code&gt;?&lt;/code&gt;在用法上其实和&lt;code&gt;*&lt;/code&gt;是相同的。但是&lt;code&gt;*&lt;/code&gt;语义上表示全匹配，而&lt;code&gt;?&lt;/code&gt;并不代表全匹配，而是不关心。比如对于&lt;code&gt;0 0 0 5 8 ? 2016&lt;/code&gt;来说，2016年8月5日是周五，&lt;code&gt;?&lt;/code&gt;表示我不关心它是周几。而&lt;code&gt;0 0 0 5 8 * 2016&lt;/code&gt;中的&lt;code&gt;*&lt;/code&gt;表示周一也行，周二也行……语义上和2016年8月5日冲突了，你说谁优先生效呢。&lt;/p&gt;
&lt;p&gt;不记得也没关系，记住&lt;a href=&quot;http://www.cronmaker.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cron Maker&lt;/a&gt;也可以，它可以在线生成cron表达式。&lt;/p&gt;
&lt;h2 id=&quot;u6280_u5DE7&quot;&gt;&lt;a href=&quot;#u6280_u5DE7&quot; class=&quot;headerlink&quot; title=&quot;技巧&quot;&gt;&lt;/a&gt;技巧&lt;/h2&gt;&lt;p&gt;可能会想要在不同的环境配置不同的cron，比如产品环境就是真实的cron，而测试环境希望更频繁触发，可以设置每分钟都触发。&lt;/p&gt;
&lt;p&gt;xml配置的解决方法：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduler&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scheduler&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doSomethingTask&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doSomething&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cron&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;cron_expression&amp;#125;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doOtherThingTask&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doOtherThing&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cron&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;cron_expression&amp;#125;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;顺便提一句，java的properties文件支持value中带空格，所以可以放心地写&lt;code&gt;cron_expression=0 * * * * *&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;注解的解决方法：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Scheduled&lt;/span&gt;(cron = &lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;cron_expression&amp;#125;&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5751&quot;&gt;&lt;a href=&quot;#u5751&quot; class=&quot;headerlink&quot; title=&quot;坑&quot;&gt;&lt;/a&gt;坑&lt;/h2&gt;&lt;h3 id=&quot;u540C_u65F6_u8FD0_u884C&quot;&gt;&lt;a href=&quot;#u540C_u65F6_u8FD0_u884C&quot; class=&quot;headerlink&quot; title=&quot;同时运行&quot;&gt;&lt;/a&gt;同时运行&lt;/h3&gt;&lt;p&gt;同一个task，如果前一个还没跑完后面一个就不会触发，这没有问题。但是不同的task也不能同时运行就不太合理了。不过其实是scheduler的默认线程数为1的缘故。&lt;/p&gt;
&lt;p&gt;解决方法1：如下配置pool-size，但这样会导致同一个task前一个还没跑完后面又被触发的问题。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduler&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;scheduler&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;pool-size&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解决方法2：让任务分别运行在不同的scheduler里就好了。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduler&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler1&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduler&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler2&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scheduler&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doSomethingTask&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doSomething&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cron&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;0 * * * * *&amp;#125;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scheduler&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myScheduler2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;task:scheduled&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doOtherThingTask&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doOtherThing&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cron&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;0 * * * * *&amp;#125;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;task:scheduled-tasks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u591A_u5B9E_u4F8B&quot;&gt;&lt;a href=&quot;#u591A_u5B9E_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;多实例&quot;&gt;&lt;/a&gt;多实例&lt;/h3&gt;&lt;p&gt;若是scheduler与web配置在一起，在高可用的情况下，如果有多个web容器实例，scheduler会在多个实例上同时运行。&lt;/p&gt;
&lt;p&gt;解决方法1：部署的时候，针对不同实例，使用不同的配置。比如tomcat_1打开scheduler，tomcat_2关闭。带来的问题是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加部署成本。&lt;/li&gt;
&lt;li&gt;要是tomcat_1挂了，scheduler就不能运行了，高可用落空。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方法2：在task的基类加入一些逻辑，当开始运行时，将状态（运行机器的IP、时间等）写入数据库、缓存或者zk，运行结束时重置状态。其它实例看到有这样的数据，就直接返回。带来的问题是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要所有实例上的机器时间同步，不然一个刚结束另一个才开始，状态的维护就没有用了。&lt;/li&gt;
&lt;li&gt;一定要保证结束运行后将状态重置，否则下一个运行周期，所有的task都会返回的。实在不行还得写一个task做这个事。&lt;/li&gt;
&lt;li&gt;因为读写状态并非原子操作，偶尔也会发生task同时运行的事。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方法3：将scheduler与web分开。这样还能避免后台任务影响web端。带来的问题是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加部署成本。&lt;/li&gt;
&lt;li&gt;scheduler的高可用需要重新考虑。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/&quot;&gt;Spring&lt;/a&gt;给程序猿们带来了许多便利。它包含了用于定时任务处理的&lt;a href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html&quot;&gt;Spring Scheduler&lt;/a&gt;。本文聊聊Scheduling模型和一些坑。&lt;br&gt;
    
    </summary>
    
      <category term="development" scheme="http://qinghua.github.io/categories/development/"/>
    
    
      <category term="spring" scheme="http://qinghua.github.io/tags/spring/"/>
    
      <category term="scheduler" scheme="http://qinghua.github.io/tags/scheduler/"/>
    
  </entry>
  
</feed>
